/**
 */
package edu.ustb.sei.mde.xmu2core.provider;

import edu.ustb.sei.mde.xmu2core.util.Xmu2coreAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Xmu2coreItemProviderAdapterFactory extends Xmu2coreAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Xmu2coreItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.Procedure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcedureItemProvider procedureItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.Procedure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcedureAdapter() {
		if (procedureItemProvider == null) {
			procedureItemProvider = new ProcedureItemProvider(this);
		}

		return procedureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.AlignStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlignStatementItemProvider alignStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.AlignStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlignStatementAdapter() {
		if (alignStatementItemProvider == null) {
			alignStatementItemProvider = new AlignStatementItemProvider(this);
		}

		return alignStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.CaseStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CaseStatementItemProvider caseStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.CaseStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCaseStatementAdapter() {
		if (caseStatementItemProvider == null) {
			caseStatementItemProvider = new CaseStatementItemProvider(this);
		}

		return caseStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.CasePatternClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CasePatternClauseItemProvider casePatternClauseItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.CasePatternClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCasePatternClauseAdapter() {
		if (casePatternClauseItemProvider == null) {
			casePatternClauseItemProvider = new CasePatternClauseItemProvider(this);
		}

		return casePatternClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.CaseExpressionClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CaseExpressionClauseItemProvider caseExpressionClauseItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.CaseExpressionClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCaseExpressionClauseAdapter() {
		if (caseExpressionClauseItemProvider == null) {
			caseExpressionClauseItemProvider = new CaseExpressionClauseItemProvider(this);
		}

		return caseExpressionClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.Pattern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PatternItemProvider patternItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.Pattern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPatternAdapter() {
		if (patternItemProvider == null) {
			patternItemProvider = new PatternItemProvider(this);
		}

		return patternItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.PatternNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PatternNodeItemProvider patternNodeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.PatternNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPatternNodeAdapter() {
		if (patternNodeItemProvider == null) {
			patternNodeItemProvider = new PatternNodeItemProvider(this);
		}

		return patternNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.ObjectPatternExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectPatternExpressionItemProvider objectPatternExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.ObjectPatternExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectPatternExpressionAdapter() {
		if (objectPatternExpressionItemProvider == null) {
			objectPatternExpressionItemProvider = new ObjectPatternExpressionItemProvider(this);
		}

		return objectPatternExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.PropertyPatternExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyPatternExpressionItemProvider propertyPatternExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.PropertyPatternExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyPatternExpressionAdapter() {
		if (propertyPatternExpressionItemProvider == null) {
			propertyPatternExpressionItemProvider = new PropertyPatternExpressionItemProvider(this);
		}

		return propertyPatternExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.BooleanOrExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanOrExpressionItemProvider booleanOrExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.BooleanOrExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanOrExpressionAdapter() {
		if (booleanOrExpressionItemProvider == null) {
			booleanOrExpressionItemProvider = new BooleanOrExpressionItemProvider(this);
		}

		return booleanOrExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.BooleanAndExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanAndExpressionItemProvider booleanAndExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.BooleanAndExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanAndExpressionAdapter() {
		if (booleanAndExpressionItemProvider == null) {
			booleanAndExpressionItemProvider = new BooleanAndExpressionItemProvider(this);
		}

		return booleanAndExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.RelationalExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationalExpressionItemProvider relationalExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.RelationalExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationalExpressionAdapter() {
		if (relationalExpressionItemProvider == null) {
			relationalExpressionItemProvider = new RelationalExpressionItemProvider(this);
		}

		return relationalExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.AdditiveExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditiveExpressionItemProvider additiveExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.AdditiveExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditiveExpressionAdapter() {
		if (additiveExpressionItemProvider == null) {
			additiveExpressionItemProvider = new AdditiveExpressionItemProvider(this);
		}

		return additiveExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.MultiplicativeExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiplicativeExpressionItemProvider multiplicativeExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.MultiplicativeExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiplicativeExpressionAdapter() {
		if (multiplicativeExpressionItemProvider == null) {
			multiplicativeExpressionItemProvider = new MultiplicativeExpressionItemProvider(this);
		}

		return multiplicativeExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.UnaryExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryExpressionItemProvider unaryExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.UnaryExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryExpressionAdapter() {
		if (unaryExpressionItemProvider == null) {
			unaryExpressionItemProvider = new UnaryExpressionItemProvider(this);
		}

		return unaryExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.TypeCastExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeCastExpressionItemProvider typeCastExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.TypeCastExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeCastExpressionAdapter() {
		if (typeCastExpressionItemProvider == null) {
			typeCastExpressionItemProvider = new TypeCastExpressionItemProvider(this);
		}

		return typeCastExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.StringValueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringValueExpressionItemProvider stringValueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.StringValueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringValueExpressionAdapter() {
		if (stringValueExpressionItemProvider == null) {
			stringValueExpressionItemProvider = new StringValueExpressionItemProvider(this);
		}

		return stringValueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.BooleanValueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanValueExpressionItemProvider booleanValueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.BooleanValueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanValueExpressionAdapter() {
		if (booleanValueExpressionItemProvider == null) {
			booleanValueExpressionItemProvider = new BooleanValueExpressionItemProvider(this);
		}

		return booleanValueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.IntegerValueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerValueExpressionItemProvider integerValueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.IntegerValueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerValueExpressionAdapter() {
		if (integerValueExpressionItemProvider == null) {
			integerValueExpressionItemProvider = new IntegerValueExpressionItemProvider(this);
		}

		return integerValueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.EnumValueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumValueExpressionItemProvider enumValueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.EnumValueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumValueExpressionAdapter() {
		if (enumValueExpressionItemProvider == null) {
			enumValueExpressionItemProvider = new EnumValueExpressionItemProvider(this);
		}

		return enumValueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.EmptyValueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmptyValueExpressionItemProvider emptyValueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.EmptyValueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmptyValueExpressionAdapter() {
		if (emptyValueExpressionItemProvider == null) {
			emptyValueExpressionItemProvider = new EmptyValueExpressionItemProvider(this);
		}

		return emptyValueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.ObjectValueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectValueExpressionItemProvider objectValueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.ObjectValueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectValueExpressionAdapter() {
		if (objectValueExpressionItemProvider == null) {
			objectValueExpressionItemProvider = new ObjectValueExpressionItemProvider(this);
		}

		return objectValueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.VariableExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableExpressionItemProvider variableExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.VariableExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableExpressionAdapter() {
		if (variableExpressionItemProvider == null) {
			variableExpressionItemProvider = new VariableExpressionItemProvider(this);
		}

		return variableExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.FeaturePath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePathItemProvider featurePathItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.FeaturePath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePathAdapter() {
		if (featurePathItemProvider == null) {
			featurePathItemProvider = new FeaturePathItemProvider(this);
		}

		return featurePathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.OperationPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationPathItemProvider operationPathItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.OperationPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationPathAdapter() {
		if (operationPathItemProvider == null) {
			operationPathItemProvider = new OperationPathItemProvider(this);
		}

		return operationPathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.LoopPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoopPathItemProvider loopPathItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.LoopPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoopPathAdapter() {
		if (loopPathItemProvider == null) {
			loopPathItemProvider = new LoopPathItemProvider(this);
		}

		return loopPathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.PositionPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PositionPathItemProvider positionPathItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.PositionPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPositionPathAdapter() {
		if (positionPathItemProvider == null) {
			positionPathItemProvider = new PositionPathItemProvider(this);
		}

		return positionPathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.ProcedureCallStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcedureCallStatementItemProvider procedureCallStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.ProcedureCallStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcedureCallStatementAdapter() {
		if (procedureCallStatementItemProvider == null) {
			procedureCallStatementItemProvider = new ProcedureCallStatementItemProvider(this);
		}

		return procedureCallStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.Transformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformationItemProvider transformationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.Transformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformationAdapter() {
		if (transformationItemProvider == null) {
			transformationItemProvider = new TransformationItemProvider(this);
		}

		return transformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.EntryRuleParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntryRuleParameterItemProvider entryRuleParameterItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.EntryRuleParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntryRuleParameterAdapter() {
		if (entryRuleParameterItemProvider == null) {
			entryRuleParameterItemProvider = new EntryRuleParameterItemProvider(this);
		}

		return entryRuleParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.ForEachStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForEachStatementItemProvider forEachStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.ForEachStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForEachStatementAdapter() {
		if (forEachStatementItemProvider == null) {
			forEachStatementItemProvider = new ForEachStatementItemProvider(this);
		}

		return forEachStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.DeleteNodeStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteNodeStatementItemProvider deleteNodeStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.DeleteNodeStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteNodeStatementAdapter() {
		if (deleteNodeStatementItemProvider == null) {
			deleteNodeStatementItemProvider = new DeleteNodeStatementItemProvider(this);
		}

		return deleteNodeStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.DeleteLinkStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteLinkStatementItemProvider deleteLinkStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.DeleteLinkStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteLinkStatementAdapter() {
		if (deleteLinkStatementItemProvider == null) {
			deleteLinkStatementItemProvider = new DeleteLinkStatementItemProvider(this);
		}

		return deleteLinkStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.EnforceNodeStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnforceNodeStatementItemProvider enforceNodeStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.EnforceNodeStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnforceNodeStatementAdapter() {
		if (enforceNodeStatementItemProvider == null) {
			enforceNodeStatementItemProvider = new EnforceNodeStatementItemProvider(this);
		}

		return enforceNodeStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.EnforceLinkStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnforceLinkStatementItemProvider enforceLinkStatementItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.EnforceLinkStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnforceLinkStatementAdapter() {
		if (enforceLinkStatementItemProvider == null) {
			enforceLinkStatementItemProvider = new EnforceLinkStatementItemProvider(this);
		}

		return enforceLinkStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.OclCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclCollectionTypeItemProvider oclCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.OclCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclCollectionTypeAdapter() {
		if (oclCollectionTypeItemProvider == null) {
			oclCollectionTypeItemProvider = new OclCollectionTypeItemProvider(this);
		}

		return oclCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.xmu2core.MatchPattern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MatchPatternItemProvider matchPatternItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.xmu2core.MatchPattern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMatchPatternAdapter() {
		if (matchPatternItemProvider == null) {
			matchPatternItemProvider = new MatchPatternItemProvider(this);
		}

		return matchPatternItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (procedureItemProvider != null) procedureItemProvider.dispose();
		if (variableItemProvider != null) variableItemProvider.dispose();
		if (alignStatementItemProvider != null) alignStatementItemProvider.dispose();
		if (caseStatementItemProvider != null) caseStatementItemProvider.dispose();
		if (casePatternClauseItemProvider != null) casePatternClauseItemProvider.dispose();
		if (caseExpressionClauseItemProvider != null) caseExpressionClauseItemProvider.dispose();
		if (patternItemProvider != null) patternItemProvider.dispose();
		if (patternNodeItemProvider != null) patternNodeItemProvider.dispose();
		if (objectPatternExpressionItemProvider != null) objectPatternExpressionItemProvider.dispose();
		if (propertyPatternExpressionItemProvider != null) propertyPatternExpressionItemProvider.dispose();
		if (booleanOrExpressionItemProvider != null) booleanOrExpressionItemProvider.dispose();
		if (booleanAndExpressionItemProvider != null) booleanAndExpressionItemProvider.dispose();
		if (relationalExpressionItemProvider != null) relationalExpressionItemProvider.dispose();
		if (additiveExpressionItemProvider != null) additiveExpressionItemProvider.dispose();
		if (multiplicativeExpressionItemProvider != null) multiplicativeExpressionItemProvider.dispose();
		if (unaryExpressionItemProvider != null) unaryExpressionItemProvider.dispose();
		if (typeCastExpressionItemProvider != null) typeCastExpressionItemProvider.dispose();
		if (stringValueExpressionItemProvider != null) stringValueExpressionItemProvider.dispose();
		if (booleanValueExpressionItemProvider != null) booleanValueExpressionItemProvider.dispose();
		if (integerValueExpressionItemProvider != null) integerValueExpressionItemProvider.dispose();
		if (enumValueExpressionItemProvider != null) enumValueExpressionItemProvider.dispose();
		if (emptyValueExpressionItemProvider != null) emptyValueExpressionItemProvider.dispose();
		if (objectValueExpressionItemProvider != null) objectValueExpressionItemProvider.dispose();
		if (variableExpressionItemProvider != null) variableExpressionItemProvider.dispose();
		if (featurePathItemProvider != null) featurePathItemProvider.dispose();
		if (operationPathItemProvider != null) operationPathItemProvider.dispose();
		if (loopPathItemProvider != null) loopPathItemProvider.dispose();
		if (positionPathItemProvider != null) positionPathItemProvider.dispose();
		if (procedureCallStatementItemProvider != null) procedureCallStatementItemProvider.dispose();
		if (transformationItemProvider != null) transformationItemProvider.dispose();
		if (entryRuleParameterItemProvider != null) entryRuleParameterItemProvider.dispose();
		if (forEachStatementItemProvider != null) forEachStatementItemProvider.dispose();
		if (deleteNodeStatementItemProvider != null) deleteNodeStatementItemProvider.dispose();
		if (deleteLinkStatementItemProvider != null) deleteLinkStatementItemProvider.dispose();
		if (enforceNodeStatementItemProvider != null) enforceNodeStatementItemProvider.dispose();
		if (enforceLinkStatementItemProvider != null) enforceLinkStatementItemProvider.dispose();
		if (oclCollectionTypeItemProvider != null) oclCollectionTypeItemProvider.dispose();
		if (matchPatternItemProvider != null) matchPatternItemProvider.dispose();
	}

}
