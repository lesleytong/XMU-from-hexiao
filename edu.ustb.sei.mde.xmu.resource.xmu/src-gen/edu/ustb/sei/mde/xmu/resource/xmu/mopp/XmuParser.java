// $ANTLR 3.4

	package edu.ustb.sei.mde.xmu.resource.xmu.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class XmuParser extends XmuANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "BOOLEAN", "LINEBREAK", "ML_COMMENT", "NAME", "NUMBER", "OBJ_URI", "PRIMITIVE", "QUOTED_39_39_92", "SL_COMMENT", "TEXT", "URI", "WHITESPACE", "'#'", "'('", "')'", "'*'", "'+'", "'++'", "','", "'-'", "'->'", "'.'", "'/'", "'//'", "':'", "'::'", "';'", "'<'", "'<->'", "'<='", "'='", "'>'", "'>='", "'['", "']'", "'and'", "'by'", "'case'", "'context'", "'delete'", "'enforce'", "'exists'", "'forAll'", "'import'", "'mapping'", "'match'", "'nil'", "'not'", "'null'", "'or'", "'print'", "'rule'", "'select'", "'source'", "'start'", "'switch'", "'unmatchs'", "'unmatchv'", "'update'", "'updated'", "'using'", "'view'", "'when'", "'with'", "'{'", "'|'", "'}'"
    };

    public static final int EOF=-1;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int BOOLEAN=4;
    public static final int LINEBREAK=5;
    public static final int ML_COMMENT=6;
    public static final int NAME=7;
    public static final int NUMBER=8;
    public static final int OBJ_URI=9;
    public static final int PRIMITIVE=10;
    public static final int QUOTED_39_39_92=11;
    public static final int SL_COMMENT=12;
    public static final int TEXT=13;
    public static final int URI=14;
    public static final int WHITESPACE=15;

    // delegates
    public XmuANTLRParserBase[] getDelegates() {
        return new XmuANTLRParserBase[] {};
    }

    // delegators


    public XmuParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public XmuParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(199 + 1);
         

    }

    public String[] getTokenNames() { return XmuParser.tokenNames; }
    public String getGrammarFileName() { return "Xmu.g"; }


    	private edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolverFactory tokenResolverFactory = new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal> expectedElements = new java.util.ArrayList<edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new edu.ustb.sei.mde.xmu.resource.xmu.IXmuCommand<edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new edu.ustb.sei.mde.xmu.resource.xmu.IXmuProblem() {
    					public edu.ustb.sei.mde.xmu.resource.xmu.XmuEProblemSeverity getSeverity() {
    						return edu.ustb.sei.mde.xmu.resource.xmu.XmuEProblemSeverity.ERROR;
    					}
    					public edu.ustb.sei.mde.xmu.resource.xmu.XmuEProblemType getType() {
    						return edu.ustb.sei.mde.xmu.resource.xmu.XmuEProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<edu.ustb.sei.mde.xmu.resource.xmu.IXmuQuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		edu.ustb.sei.mde.xmu.resource.xmu.IXmuExpectedElement terminal = edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuFollowSetProvider.TERMINALS[terminalID];
    		edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContainedFeature[] containmentFeatures = new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuFollowSetProvider.LINKS[ids[i]];
    		}
    		edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal expectedElement = new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu.resource.xmu.IXmuCommand<edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource resource) {
    				edu.ustb.sei.mde.xmu.resource.xmu.IXmuLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu.resource.xmu.IXmuCommand<edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource resource) {
    				edu.ustb.sei.mde.xmu.resource.xmu.IXmuLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<edu.ustb.sei.mde.xmu.resource.xmu.IXmuCommand<edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu.resource.xmu.IXmuCommand<edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource resource) {
    				edu.ustb.sei.mde.xmu.resource.xmu.IXmuLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new XmuParser(new org.antlr.runtime3_4_0.CommonTokenStream(new XmuLexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new XmuParser(new org.antlr.runtime3_4_0.CommonTokenStream(new XmuLexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new edu.ustb.sei.mde.xmu.resource.xmu.util.XmuRuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public XmuParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((XmuLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((XmuLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.XMUModel.class) {
    				return parse_edu_ustb_sei_mde_xmu_XMUModel();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.StartStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_StartStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.StartRoot.class) {
    				return parse_edu_ustb_sei_mde_xmu_StartRoot();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.Rule.class) {
    				return parse_edu_ustb_sei_mde_xmu_Rule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.Parameter.class) {
    				return parse_edu_ustb_sei_mde_xmu_Parameter();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.PrimitiveVariable.class) {
    				return parse_edu_ustb_sei_mde_xmu_PrimitiveVariable();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.ForStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_ForStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.UpdatedStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_UpdatedStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.VStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_VStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.Pattern.class) {
    				return parse_edu_ustb_sei_mde_xmu_Pattern();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.PatternNode.class) {
    				return parse_edu_ustb_sei_mde_xmu_PatternNode();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.PatternReferenceExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.PatternEqualExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_PatternEqualExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.VariableExp.class) {
    				return parse_edu_ustb_sei_mde_xmu_VariableExp();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.FeaturePath.class) {
    				return parse_edu_ustb_sei_mde_xmu_FeaturePath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.LoopPath.class) {
    				return parse_edu_ustb_sei_mde_xmu_LoopPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.OperationPath.class) {
    				return parse_edu_ustb_sei_mde_xmu_OperationPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.StringLiteral.class) {
    				return parse_edu_ustb_sei_mde_xmu_StringLiteral();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.EmptyLiteral.class) {
    				return parse_edu_ustb_sei_mde_xmu_EmptyLiteral();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.IntegerLiteral.class) {
    				return parse_edu_ustb_sei_mde_xmu_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.BooleanLiteral.class) {
    				return parse_edu_ustb_sei_mde_xmu_BooleanLiteral();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.EnumLiteral.class) {
    				return parse_edu_ustb_sei_mde_xmu_EnumLiteral();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.BlockStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_BlockStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.SwitchStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_SwitchStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.CasePatternStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_CasePatternStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.CaseValueStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_CaseValueStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.RuleCallStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_RuleCallStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.UpdatePattern.class) {
    				return parse_edu_ustb_sei_mde_xmu_UpdatePattern();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.DeleteNode.class) {
    				return parse_edu_ustb_sei_mde_xmu_DeleteNode();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.DeleteLink.class) {
    				return parse_edu_ustb_sei_mde_xmu_DeleteLink();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.BooleanOrExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.BooleanAndExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.RelationalExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_RelationalExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.AdditiveExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_AdditiveExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.MultiplicativeExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.ParenExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_ParenExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.UnaryExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_UnaryExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.PrintStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_PrintStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.AllInstanceExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_AllInstanceExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.InitialMappingStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu_InitialMappingStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.ObjectPathExpr.class) {
    				return parse_edu_ustb_sei_mde_xmu_ObjectPathExpr();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.HelperMapping.class) {
    				return parse_edu_ustb_sei_mde_xmu_HelperMapping();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu.HelperPath.class) {
    				return parse_edu_ustb_sei_mde_xmu_HelperPath();
    			}
    		}
    		throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuUnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(edu.ustb.sei.mde.xmu.resource.xmu.IXmuOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public edu.ustb.sei.mde.xmu.resource.xmu.IXmuParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<edu.ustb.sei.mde.xmu.resource.xmu.IXmuCommand<edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource>>();
    		edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuParseResult parseResult = new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		edu.ustb.sei.mde.xmu.resource.xmu.IXmuParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (edu.ustb.sei.mde.xmu.resource.xmu.IXmuCommand<edu.ustb.sei.mde.xmu.resource.xmu.IXmuTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal>();
    		java.util.List<edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal> newFollowSet = new java.util.ArrayList<edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 222;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<edu.ustb.sei.mde.xmu.resource.xmu.util.XmuPair<edu.ustb.sei.mde.xmu.resource.xmu.IXmuExpectedElement, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (edu.ustb.sei.mde.xmu.resource.xmu.util.XmuPair<edu.ustb.sei.mde.xmu.resource.xmu.IXmuExpectedElement, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContainedFeature[]> newFollowerPair : newFollowers) {
    							edu.ustb.sei.mde.xmu.resource.xmu.IXmuExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuContainmentTrace(null, newFollowerPair.getRight());
    							edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal newFollowTerminal = new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xmu.g:625:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_edu_ustb_sei_mde_xmu_XMUModel ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.XMUModel c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xmu.g:626:2: ( (c0= parse_edu_ustb_sei_mde_xmu_XMUModel ) EOF )
            // Xmu.g:627:2: (c0= parse_edu_ustb_sei_mde_xmu_XMUModel ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[0]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[3]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xmu.g:635:2: (c0= parse_edu_ustb_sei_mde_xmu_XMUModel )
            // Xmu.g:636:3: c0= parse_edu_ustb_sei_mde_xmu_XMUModel
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_XMUModel_in_start82);
            c0=parse_edu_ustb_sei_mde_xmu_XMUModel();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_XMUModel"
    // Xmu.g:644:1: parse_edu_ustb_sei_mde_xmu_XMUModel returns [edu.ustb.sei.mde.xmu.XMUModel element = null] : ( (a0= 'import' (a1= URI ) ) )* ( (a2= 'mapping' (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement ) ) )* ( (a4= 'mapping' (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping ) ) )* ( (a6_0= parse_edu_ustb_sei_mde_xmu_StartStatement ) )+ ( (a7_0= parse_edu_ustb_sei_mde_xmu_Rule ) )* ;
    public final edu.ustb.sei.mde.xmu.XMUModel parse_edu_ustb_sei_mde_xmu_XMUModel() throws RecognitionException {
        edu.ustb.sei.mde.xmu.XMUModel element =  null;

        int parse_edu_ustb_sei_mde_xmu_XMUModel_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu.InitialMappingStatement a3_0 =null;

        edu.ustb.sei.mde.xmu.HelperMapping a5_0 =null;

        edu.ustb.sei.mde.xmu.StartStatement a6_0 =null;

        edu.ustb.sei.mde.xmu.Rule a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xmu.g:647:2: ( ( (a0= 'import' (a1= URI ) ) )* ( (a2= 'mapping' (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement ) ) )* ( (a4= 'mapping' (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping ) ) )* ( (a6_0= parse_edu_ustb_sei_mde_xmu_StartStatement ) )+ ( (a7_0= parse_edu_ustb_sei_mde_xmu_Rule ) )* )
            // Xmu.g:648:2: ( (a0= 'import' (a1= URI ) ) )* ( (a2= 'mapping' (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement ) ) )* ( (a4= 'mapping' (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping ) ) )* ( (a6_0= parse_edu_ustb_sei_mde_xmu_StartStatement ) )+ ( (a7_0= parse_edu_ustb_sei_mde_xmu_Rule ) )*
            {
            // Xmu.g:648:2: ( (a0= 'import' (a1= URI ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==47) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // Xmu.g:649:3: (a0= 'import' (a1= URI ) )
            	    {
            	    // Xmu.g:649:3: (a0= 'import' (a1= URI ) )
            	    // Xmu.g:650:4: a0= 'import' (a1= URI )
            	    {
            	    a0=(Token)match(input,47,FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu_XMUModel124); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_0_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[4]);
            	    			}

            	    // Xmu.g:664:4: (a1= URI )
            	    // Xmu.g:665:5: a1= URI
            	    {
            	    a1=(Token)match(input,URI,FOLLOW_URI_in_parse_edu_ustb_sei_mde_xmu_XMUModel150); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a1 != null) {
            	    						edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("URI");
            	    						tokenResolver.setOptions(getOptions());
            	    						edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            	    						tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.XMU_MODEL__PACKAGES), result);
            	    						Object resolvedObject = result.getResolvedToken();
            	    						if (resolvedObject == null) {
            	    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            	    						}
            	    						String resolved = (String) resolvedObject;
            	    						org.eclipse.emf.ecore.EPackage proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEPackage();
            	    						collectHiddenTokens(element);
            	    						registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.XMUModel, org.eclipse.emf.ecore.EPackage>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getXMUModelPackagesReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.XMU_MODEL__PACKAGES), resolved, proxy);
            	    						if (proxy != null) {
            	    							Object value = proxy;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.XMU_MODEL__PACKAGES, value);
            	    							completedElement(value, false);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_0_0_0_1, proxy, true);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[5]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[6]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[7]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[8]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[9]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[10]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[12]);
            	}

            // Xmu.g:717:2: ( (a2= 'mapping' (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==48) ) {
                    int LA2_1 = input.LA(2);

                    if ( ((LA2_1 >= NUMBER && LA2_1 <= OBJ_URI)||LA2_1==QUOTED_39_39_92) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // Xmu.g:718:3: (a2= 'mapping' (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement ) )
            	    {
            	    // Xmu.g:718:3: (a2= 'mapping' (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement ) )
            	    // Xmu.g:719:4: a2= 'mapping' (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement )
            	    {
            	    a2=(Token)match(input,48,FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu_XMUModel205); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[13]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[14]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[15]);
            	    			}

            	    // Xmu.g:735:4: (a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement )
            	    // Xmu.g:736:5: a3_0= parse_edu_ustb_sei_mde_xmu_InitialMappingStatement
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement_in_parse_edu_ustb_sei_mde_xmu_XMUModel231);
            	    a3_0=parse_edu_ustb_sei_mde_xmu_InitialMappingStatement();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3_0 != null) {
            	    						if (a3_0 != null) {
            	    							Object value = a3_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.XMU_MODEL__INITIAL_MAPPINGS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_1_0_0_1, a3_0, true);
            	    						copyLocalizationInfos(a3_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[16]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[17]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[18]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[19]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[20]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[21]);
            	}

            // Xmu.g:772:2: ( (a4= 'mapping' (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==48) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // Xmu.g:773:3: (a4= 'mapping' (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping ) )
            	    {
            	    // Xmu.g:773:3: (a4= 'mapping' (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping ) )
            	    // Xmu.g:774:4: a4= 'mapping' (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping )
            	    {
            	    a4=(Token)match(input,48,FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu_XMUModel281); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[22]);
            	    			}

            	    // Xmu.g:788:4: (a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping )
            	    // Xmu.g:789:5: a5_0= parse_edu_ustb_sei_mde_xmu_HelperMapping
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_HelperMapping_in_parse_edu_ustb_sei_mde_xmu_XMUModel307);
            	    a5_0=parse_edu_ustb_sei_mde_xmu_HelperMapping();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.XMU_MODEL__HELPER_MAPPINGS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_2_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[23]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[24]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[25]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[26]);
            	}

            // Xmu.g:823:2: ( (a6_0= parse_edu_ustb_sei_mde_xmu_StartStatement ) )+
            int cnt4=0;
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==58) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xmu.g:824:3: (a6_0= parse_edu_ustb_sei_mde_xmu_StartStatement )
            	    {
            	    // Xmu.g:824:3: (a6_0= parse_edu_ustb_sei_mde_xmu_StartStatement )
            	    // Xmu.g:825:4: a6_0= parse_edu_ustb_sei_mde_xmu_StartStatement
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StartStatement_in_parse_edu_ustb_sei_mde_xmu_XMUModel357);
            	    a6_0=parse_edu_ustb_sei_mde_xmu_StartStatement();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a6_0 != null) {
            	    					if (a6_0 != null) {
            	    						Object value = a6_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.XMU_MODEL__START, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_3, a6_0, true);
            	    					copyLocalizationInfos(a6_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt4 >= 1 ) break loop4;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(4, input);
                        throw eee;
                }
                cnt4++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[27]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[28]);
            	}

            // Xmu.g:852:2: ( (a7_0= parse_edu_ustb_sei_mde_xmu_Rule ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==55) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // Xmu.g:853:3: (a7_0= parse_edu_ustb_sei_mde_xmu_Rule )
            	    {
            	    // Xmu.g:853:3: (a7_0= parse_edu_ustb_sei_mde_xmu_Rule )
            	    // Xmu.g:854:4: a7_0= parse_edu_ustb_sei_mde_xmu_Rule
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Rule_in_parse_edu_ustb_sei_mde_xmu_XMUModel392);
            	    a7_0=parse_edu_ustb_sei_mde_xmu_Rule();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createXMUModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a7_0 != null) {
            	    					if (a7_0 != null) {
            	    						Object value = a7_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.XMU_MODEL__RULES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_0_0_0_4, a7_0, true);
            	    					copyLocalizationInfos(a7_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[29]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_edu_ustb_sei_mde_xmu_XMUModel_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_XMUModel"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_StartStatement"
    // Xmu.g:882:1: parse_edu_ustb_sei_mde_xmu_StartStatement returns [edu.ustb.sei.mde.xmu.StartStatement element = null] : a0= 'start' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) ) )* a6= ')' a7= ';' ;
    public final edu.ustb.sei.mde.xmu.StartStatement parse_edu_ustb_sei_mde_xmu_StartStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.StartStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_StartStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        edu.ustb.sei.mde.xmu.StartRoot a3_0 =null;

        edu.ustb.sei.mde.xmu.StartRoot a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xmu.g:885:2: (a0= 'start' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) ) )* a6= ')' a7= ';' )
            // Xmu.g:886:2: a0= 'start' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) ) )* a6= ')' a7= ';'
            {
            a0=(Token)match(input,58,FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu_StartStatement433); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[30]);
            	}

            // Xmu.g:900:2: (a1= NAME )
            // Xmu.g:901:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_StartStatement451); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_STATEMENT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.Rule proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.StartStatement, edu.ustb.sei.mde.xmu.Rule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getStartStatementRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_STATEMENT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_STATEMENT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[31]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_StartStatement472); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStartStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[32]);
            	}

            // Xmu.g:954:2: (a3_0= parse_edu_ustb_sei_mde_xmu_StartRoot )
            // Xmu.g:955:3: a3_0= parse_edu_ustb_sei_mde_xmu_StartRoot
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StartRoot_in_parse_edu_ustb_sei_mde_xmu_StartStatement490);
            a3_0=parse_edu_ustb_sei_mde_xmu_StartRoot();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.START_STATEMENT__ROOT, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[33]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[34]);
            	}

            // Xmu.g:981:2: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==22) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // Xmu.g:982:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) )
            	    {
            	    // Xmu.g:982:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) )
            	    // Xmu.g:983:4: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot )
            	    {
            	    a4=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_StartStatement517); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_4_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStartStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[35]);
            	    			}

            	    // Xmu.g:997:4: (a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot )
            	    // Xmu.g:998:5: a5_0= parse_edu_ustb_sei_mde_xmu_StartRoot
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StartRoot_in_parse_edu_ustb_sei_mde_xmu_StartStatement543);
            	    a5_0=parse_edu_ustb_sei_mde_xmu_StartRoot();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.START_STATEMENT__ROOT, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_4_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[36]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[37]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[38]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[39]);
            	}

            a6=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_StartStatement584); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[40]);
            	}

            a7=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_StartStatement598); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_1_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[41]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[42]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_edu_ustb_sei_mde_xmu_StartStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_StartStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_StartRoot"
    // Xmu.g:1063:1: parse_edu_ustb_sei_mde_xmu_StartRoot returns [edu.ustb.sei.mde.xmu.StartRoot element = null] : ( (a0= 'source' |a1= 'view' |a2= 'context' ) ) a5= '[' (a6= NUMBER ) a7= ']' ;
    public final edu.ustb.sei.mde.xmu.StartRoot parse_edu_ustb_sei_mde_xmu_StartRoot() throws RecognitionException {
        edu.ustb.sei.mde.xmu.StartRoot element =  null;

        int parse_edu_ustb_sei_mde_xmu_StartRoot_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xmu.g:1066:2: ( ( (a0= 'source' |a1= 'view' |a2= 'context' ) ) a5= '[' (a6= NUMBER ) a7= ']' )
            // Xmu.g:1067:2: ( (a0= 'source' |a1= 'view' |a2= 'context' ) ) a5= '[' (a6= NUMBER ) a7= ']'
            {
            // Xmu.g:1067:2: ( (a0= 'source' |a1= 'view' |a2= 'context' ) )
            // Xmu.g:1068:3: (a0= 'source' |a1= 'view' |a2= 'context' )
            {
            // Xmu.g:1068:3: (a0= 'source' |a1= 'view' |a2= 'context' )
            int alt7=3;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt7=1;
                }
                break;
            case 65:
                {
                alt7=2;
                }
                break;
            case 42:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }

            switch (alt7) {
                case 1 :
                    // Xmu.g:1069:4: a0= 'source'
                    {
                    a0=(Token)match(input,57,FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu_StartRoot636); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartRoot();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_ROOT__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu.g:1082:8: a1= 'view'
                    {
                    a1=(Token)match(input,65,FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu_StartRoot651); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartRoot();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_ROOT__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu.g:1095:8: a2= 'context'
                    {
                    a2=(Token)match(input,42,FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu_StartRoot666); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartRoot();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.CONTEXT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_ROOT__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[43]);
            	}

            a5=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_StartRoot687); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartRoot();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_2_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[44]);
            	}

            // Xmu.g:1129:2: (a6= NUMBER )
            // Xmu.g:1130:3: a6= NUMBER
            {
            a6=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu_StartRoot705); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartRoot();
            				startIncompleteElement(element);
            			}
            			if (a6 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_ROOT__ID), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.START_ROOT__ID), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_2_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[45]);
            	}

            a7=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_StartRoot726); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStartRoot();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_2_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[46]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[47]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[48]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_edu_ustb_sei_mde_xmu_StartRoot_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_StartRoot"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_Rule"
    // Xmu.g:1183:1: parse_edu_ustb_sei_mde_xmu_Rule returns [edu.ustb.sei.mde.xmu.Rule element = null] : a0= 'rule' (a1= NAME ) ( (a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )* a6= ')' ) )? a7= '{' ( (a8= 'using' (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )* ) )? (a12_0= parse_edu_ustb_sei_mde_xmu_Statement ) a13= '}' ;
    public final edu.ustb.sei.mde.xmu.Rule parse_edu_ustb_sei_mde_xmu_Rule() throws RecognitionException {
        edu.ustb.sei.mde.xmu.Rule element =  null;

        int parse_edu_ustb_sei_mde_xmu_Rule_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a13=null;
        edu.ustb.sei.mde.xmu.Parameter a3_0 =null;

        edu.ustb.sei.mde.xmu.Parameter a5_0 =null;

        edu.ustb.sei.mde.xmu.PrimitiveVariable a9_0 =null;

        edu.ustb.sei.mde.xmu.PrimitiveVariable a11_0 =null;

        edu.ustb.sei.mde.xmu.Statement a12_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xmu.g:1186:2: (a0= 'rule' (a1= NAME ) ( (a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )* a6= ')' ) )? a7= '{' ( (a8= 'using' (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )* ) )? (a12_0= parse_edu_ustb_sei_mde_xmu_Statement ) a13= '}' )
            // Xmu.g:1187:2: a0= 'rule' (a1= NAME ) ( (a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )* a6= ')' ) )? a7= '{' ( (a8= 'using' (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )* ) )? (a12_0= parse_edu_ustb_sei_mde_xmu_Statement ) a13= '}'
            {
            a0=(Token)match(input,55,FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu_Rule755); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[49]);
            	}

            // Xmu.g:1201:2: (a1= NAME )
            // Xmu.g:1202:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_Rule773); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[50]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[51]);
            	}

            // Xmu.g:1238:2: ( (a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )* a6= ')' ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==17) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // Xmu.g:1239:3: (a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )* a6= ')' )
                    {
                    // Xmu.g:1239:3: (a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )* a6= ')' )
                    // Xmu.g:1240:4: a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )* a6= ')'
                    {
                    a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_Rule803); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[52]);
                    			}

                    // Xmu.g:1254:4: (a3_0= parse_edu_ustb_sei_mde_xmu_Parameter )
                    // Xmu.g:1255:5: a3_0= parse_edu_ustb_sei_mde_xmu_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Parameter_in_parse_edu_ustb_sei_mde_xmu_Rule829);
                    a3_0=parse_edu_ustb_sei_mde_xmu_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_2_0_0_1, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[53]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[54]);
                    			}

                    // Xmu.g:1281:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) ) )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==22) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // Xmu.g:1282:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) )
                    	    {
                    	    // Xmu.g:1282:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter ) )
                    	    // Xmu.g:1283:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter )
                    	    {
                    	    a4=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_Rule870); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_2_0_0_2_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[55]);
                    	    					}

                    	    // Xmu.g:1297:6: (a5_0= parse_edu_ustb_sei_mde_xmu_Parameter )
                    	    // Xmu.g:1298:7: a5_0= parse_edu_ustb_sei_mde_xmu_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Parameter_in_parse_edu_ustb_sei_mde_xmu_Rule904);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_2_0_0_2_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[56]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[57]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[58]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[59]);
                    			}

                    a6=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_Rule965); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_2_0_0_3, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[60]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[61]);
            	}

            a7=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_Rule998); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[62]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[63]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[64]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[65]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[66]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[67]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[68]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[69]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[70]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[71]);
            	}

            // Xmu.g:1376:2: ( (a8= 'using' (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )* ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==64) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // Xmu.g:1377:3: (a8= 'using' (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )* )
                    {
                    // Xmu.g:1377:3: (a8= 'using' (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )* )
                    // Xmu.g:1378:4: a8= 'using' (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )*
                    {
                    a8=(Token)match(input,64,FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu_Rule1021); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[72]);
                    			}

                    // Xmu.g:1392:4: (a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable )
                    // Xmu.g:1393:5: a9_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_in_parse_edu_ustb_sei_mde_xmu_Rule1047);
                    a9_0=parse_edu_ustb_sei_mde_xmu_PrimitiveVariable();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    						startIncompleteElement(element);
                    					}
                    					if (a9_0 != null) {
                    						if (a9_0 != null) {
                    							Object value = a9_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.RULE__NVARS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_4_0_0_1, a9_0, true);
                    						copyLocalizationInfos(a9_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[73]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[74]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[75]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[76]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[77]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[78]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[79]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[80]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[81]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[82]);
                    			}

                    // Xmu.g:1427:4: ( (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==22) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // Xmu.g:1428:5: (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) )
                    	    {
                    	    // Xmu.g:1428:5: (a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ) )
                    	    // Xmu.g:1429:6: a10= ',' (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable )
                    	    {
                    	    a10=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_Rule1088); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_4_0_0_2_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[83]);
                    	    					}

                    	    // Xmu.g:1443:6: (a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable )
                    	    // Xmu.g:1444:7: a11_0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_in_parse_edu_ustb_sei_mde_xmu_Rule1122);
                    	    a11_0=parse_edu_ustb_sei_mde_xmu_PrimitiveVariable();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a11_0 != null) {
                    	    								if (a11_0 != null) {
                    	    									Object value = a11_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.RULE__NVARS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_4_0_0_2_0_0_1, a11_0, true);
                    	    								copyLocalizationInfos(a11_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[84]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[85]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[86]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[87]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[88]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[89]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[90]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[91]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[92]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[93]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[94]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[95]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[96]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[97]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[98]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[99]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[100]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[101]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[102]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[103]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[104]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[105]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[106]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[108]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[109]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[110]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[111]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[112]);
            	}

            // Xmu.g:1509:2: (a12_0= parse_edu_ustb_sei_mde_xmu_Statement )
            // Xmu.g:1510:3: a12_0= parse_edu_ustb_sei_mde_xmu_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_Rule1200);
            a12_0=parse_edu_ustb_sei_mde_xmu_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
            				startIncompleteElement(element);
            			}
            			if (a12_0 != null) {
            				if (a12_0 != null) {
            					Object value = a12_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RULE__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_5, a12_0, true);
            				copyLocalizationInfos(a12_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[113]);
            	}

            a13=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_Rule1218); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_3_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a13, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[114]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_edu_ustb_sei_mde_xmu_Rule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_Rule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_Parameter"
    // Xmu.g:1551:1: parse_edu_ustb_sei_mde_xmu_Parameter returns [edu.ustb.sei.mde.xmu.Parameter element = null] : ( (a0= 'source' |a1= 'view' |a2= 'context' )? ) (a5= NAME ) ;
    public final edu.ustb.sei.mde.xmu.Parameter parse_edu_ustb_sei_mde_xmu_Parameter() throws RecognitionException {
        edu.ustb.sei.mde.xmu.Parameter element =  null;

        int parse_edu_ustb_sei_mde_xmu_Parameter_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xmu.g:1554:2: ( ( (a0= 'source' |a1= 'view' |a2= 'context' )? ) (a5= NAME ) )
            // Xmu.g:1555:2: ( (a0= 'source' |a1= 'view' |a2= 'context' )? ) (a5= NAME )
            {
            // Xmu.g:1555:2: ( (a0= 'source' |a1= 'view' |a2= 'context' )? )
            // Xmu.g:1556:3: (a0= 'source' |a1= 'view' |a2= 'context' )?
            {
            // Xmu.g:1556:3: (a0= 'source' |a1= 'view' |a2= 'context' )?
            int alt12=4;
            switch ( input.LA(1) ) {
                case 57:
                    {
                    alt12=1;
                    }
                    break;
                case 65:
                    {
                    alt12=2;
                    }
                    break;
                case 42:
                    {
                    alt12=3;
                    }
                    break;
            }

            switch (alt12) {
                case 1 :
                    // Xmu.g:1557:4: a0= 'source'
                    {
                    a0=(Token)match(input,57,FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu_Parameter1256); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu.g:1573:8: a1= 'view'
                    {
                    a1=(Token)match(input,65,FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu_Parameter1271); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu.g:1589:8: a2= 'context'
                    {
                    a2=(Token)match(input,42,FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu_Parameter1286); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.CONTEXT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[115]);
            	}

            // Xmu.g:1611:2: (a5= NAME )
            // Xmu.g:1612:3: a5= NAME
            {
            a5=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_Parameter1311); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableFlag().getEEnumLiteral(edu.ustb.sei.mde.xmu.VariableFlag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__TAG), value);
            			}
            			if (a5 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__VARIABLE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.Variable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.Parameter, edu.ustb.sei.mde.xmu.Variable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__VARIABLE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PARAMETER__VARIABLE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_4_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[116]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[117]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_edu_ustb_sei_mde_xmu_Parameter_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_Parameter"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_PrimitiveVariable"
    // Xmu.g:1657:1: parse_edu_ustb_sei_mde_xmu_PrimitiveVariable returns [edu.ustb.sei.mde.xmu.PrimitiveVariable element = null] : (a0= PRIMITIVE ) (a1= NAME ) ;
    public final edu.ustb.sei.mde.xmu.PrimitiveVariable parse_edu_ustb_sei_mde_xmu_PrimitiveVariable() throws RecognitionException {
        edu.ustb.sei.mde.xmu.PrimitiveVariable element =  null;

        int parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xmu.g:1660:2: ( (a0= PRIMITIVE ) (a1= NAME ) )
            // Xmu.g:1661:2: (a0= PRIMITIVE ) (a1= NAME )
            {
            // Xmu.g:1661:2: (a0= PRIMITIVE )
            // Xmu.g:1662:3: a0= PRIMITIVE
            {
            a0=(Token)match(input,PRIMITIVE,FOLLOW_PRIMITIVE_in_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable1351); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrimitiveVariable();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("PRIMITIVE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRIMITIVE_VARIABLE__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EDataType proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEDataType();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.PrimitiveVariable, org.eclipse.emf.ecore.EDataType>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPrimitiveVariableTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRIMITIVE_VARIABLE__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRIMITIVE_VARIABLE__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_5_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[118]);
            	}

            // Xmu.g:1701:2: (a1= NAME )
            // Xmu.g:1702:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable1376); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrimitiveVariable();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRIMITIVE_VARIABLE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRIMITIVE_VARIABLE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_5_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[119]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[120]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[121]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[122]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[124]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[127]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRule(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[129]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_PrimitiveVariable"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_ForStatement"
    // Xmu.g:1749:1: parse_edu_ustb_sei_mde_xmu_ForStatement returns [edu.ustb.sei.mde.xmu.ForStatement element = null] : a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? ) )? a8= 'by' ( (a9_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? ) )? ) ;
    public final edu.ustb.sei.mde.xmu.ForStatement parse_edu_ustb_sei_mde_xmu_ForStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.ForStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_ForStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu.Pattern a3_0 =null;

        edu.ustb.sei.mde.xmu.UpdatedStatement a5_0 =null;

        edu.ustb.sei.mde.xmu.UpdatedStatement a7_0 =null;

        edu.ustb.sei.mde.xmu.VStatement a9_0 =null;

        edu.ustb.sei.mde.xmu.VStatement a10_0 =null;

        edu.ustb.sei.mde.xmu.VStatement a11_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xmu.g:1752:2: (a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? ) )? a8= 'by' ( (a9_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? ) )? ) )
            // Xmu.g:1753:2: a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? ) )? a8= 'by' ( (a9_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? ) )? )
            {
            a0=(Token)match(input,62,FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu_ForStatement1412); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[130]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[131]);
            	}

            // Xmu.g:1768:2: (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern )
            // Xmu.g:1769:3: a1_0= parse_edu_ustb_sei_mde_xmu_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Pattern_in_parse_edu_ustb_sei_mde_xmu_ForStatement1430);
            a1_0=parse_edu_ustb_sei_mde_xmu_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.FOR_STATEMENT__SPATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[132]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[133]);
            	}

            // Xmu.g:1795:2: ( (a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==67) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // Xmu.g:1796:3: (a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? )
                    {
                    // Xmu.g:1796:3: (a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? )
                    // Xmu.g:1797:4: a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern ) ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )?
                    {
                    a2=(Token)match(input,67,FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu_ForStatement1457); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[134]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[135]);
                    			}

                    // Xmu.g:1812:4: (a3_0= parse_edu_ustb_sei_mde_xmu_Pattern )
                    // Xmu.g:1813:5: a3_0= parse_edu_ustb_sei_mde_xmu_Pattern
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Pattern_in_parse_edu_ustb_sei_mde_xmu_ForStatement1483);
                    a3_0=parse_edu_ustb_sei_mde_xmu_Pattern();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.FOR_STATEMENT__VPATTERN), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_2_0_0_1, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[136]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[137]);
                    			}

                    // Xmu.g:1839:4: ( (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( (LA14_0==66) ) {
                        alt14=1;
                    }
                    switch (alt14) {
                        case 1 :
                            // Xmu.g:1840:5: (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* )
                            {
                            // Xmu.g:1840:5: (a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* )
                            // Xmu.g:1841:6: a4= 'when' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )*
                            {
                            a4=(Token)match(input,66,FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu_ForStatement1524); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (element == null) {
                            							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                            							startIncompleteElement(element);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_2_0_0_2_0_0_0, null, true);
                            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                            					}

                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[138]);
                            					}

                            // Xmu.g:1855:6: (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement )
                            // Xmu.g:1856:7: a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1558);
                            a5_0=parse_edu_ustb_sei_mde_xmu_UpdatedStatement();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            							if (terminateParsing) {
                            								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                            							}
                            							if (element == null) {
                            								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                            								startIncompleteElement(element);
                            							}
                            							if (a5_0 != null) {
                            								if (a5_0 != null) {
                            									Object value = a5_0;
                            									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.FOR_STATEMENT__WHEN, value);
                            									completedElement(value, true);
                            								}
                            								collectHiddenTokens(element);
                            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_2_0_0_2_0_0_1, a5_0, true);
                            								copyLocalizationInfos(a5_0, element);
                            							}
                            						}

                            }


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[139]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[140]);
                            					}

                            // Xmu.g:1882:6: ( (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )*
                            loop13:
                            do {
                                int alt13=2;
                                int LA13_0 = input.LA(1);

                                if ( (LA13_0==30) ) {
                                    alt13=1;
                                }


                                switch (alt13) {
                            	case 1 :
                            	    // Xmu.g:1883:7: (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) )
                            	    {
                            	    // Xmu.g:1883:7: (a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) )
                            	    // Xmu.g:1884:8: a6= ';' (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement )
                            	    {
                            	    a6=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_ForStatement1613); if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    								if (element == null) {
                            	    									element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                            	    									startIncompleteElement(element);
                            	    								}
                            	    								collectHiddenTokens(element);
                            	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_2_0_0_2_0_0_2_0_0_0, null, true);
                            	    								copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
                            	    							}

                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[141]);
                            	    							}

                            	    // Xmu.g:1898:8: (a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement )
                            	    // Xmu.g:1899:9: a7_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement
                            	    {
                            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1655);
                            	    a7_0=parse_edu_ustb_sei_mde_xmu_UpdatedStatement();

                            	    state._fsp--;
                            	    if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    									if (terminateParsing) {
                            	    										throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                            	    									}
                            	    									if (element == null) {
                            	    										element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                            	    										startIncompleteElement(element);
                            	    									}
                            	    									if (a7_0 != null) {
                            	    										if (a7_0 != null) {
                            	    											Object value = a7_0;
                            	    											addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.FOR_STATEMENT__WHEN, value);
                            	    											completedElement(value, true);
                            	    										}
                            	    										collectHiddenTokens(element);
                            	    										retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_2_0_0_2_0_0_2_0_0_1, a7_0, true);
                            	    										copyLocalizationInfos(a7_0, element);
                            	    									}
                            	    								}

                            	    }


                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[142]);
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[143]);
                            	    							}

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop13;
                                }
                            } while (true);


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[144]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[145]);
                            					}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[146]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[147]);
            	}

            a8=(Token)match(input,40,FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu_ForStatement1772); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[148]);
            	}

            // Xmu.g:1961:2: ( (a9_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? ) )? )
            // Xmu.g:1962:3: (a9_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? ) )?
            {
            // Xmu.g:1962:3: (a9_0= parse_edu_ustb_sei_mde_xmu_VStatement )
            // Xmu.g:1963:4: a9_0= parse_edu_ustb_sei_mde_xmu_VStatement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1795);
            a9_0=parse_edu_ustb_sei_mde_xmu_VStatement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            				if (terminateParsing) {
            					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            				}
            				if (element == null) {
            					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
            					startIncompleteElement(element);
            				}
            				if (a9_0 != null) {
            					if (a9_0 != null) {
            						Object value = a9_0;
            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.FOR_STATEMENT__ACTIONS, value);
            						completedElement(value, true);
            					}
            					collectHiddenTokens(element);
            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_4_0_0_0, a9_0, true);
            					copyLocalizationInfos(a9_0, element);
            				}
            			}

            }


            if ( state.backtracking==0 ) {
            			// expected elements (follow set)
            			addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[149]);
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[150]);
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[151]);
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[152]);
            			addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[153]);
            			addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[154]);
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[155]);
            		}

            // Xmu.g:1994:3: ( ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? ) )?
            int alt17=2;
            switch ( input.LA(1) ) {
                case 49:
                    {
                    int LA17_1 = input.LA(2);

                    if ( (synpred20_Xmu()) ) {
                        alt17=1;
                    }
                    }
                    break;
                case 61:
                    {
                    int LA17_2 = input.LA(2);

                    if ( (synpred20_Xmu()) ) {
                        alt17=1;
                    }
                    }
                    break;
                case 60:
                    {
                    int LA17_3 = input.LA(2);

                    if ( (synpred20_Xmu()) ) {
                        alt17=1;
                    }
                    }
                    break;
            }

            switch (alt17) {
                case 1 :
                    // Xmu.g:1995:4: ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? )
                    {
                    // Xmu.g:1995:4: ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? )
                    // Xmu.g:1996:5: (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )?
                    {
                    // Xmu.g:1996:5: (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement )
                    // Xmu.g:1997:6: a10_0= parse_edu_ustb_sei_mde_xmu_VStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1836);
                    a10_0=parse_edu_ustb_sei_mde_xmu_VStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    						if (terminateParsing) {
                    							throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    						}
                    						if (element == null) {
                    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                    							startIncompleteElement(element);
                    						}
                    						if (a10_0 != null) {
                    							if (a10_0 != null) {
                    								Object value = a10_0;
                    								addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.FOR_STATEMENT__ACTIONS, value);
                    								completedElement(value, true);
                    							}
                    							collectHiddenTokens(element);
                    							retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_4_0_0_1_0_0_0, a10_0, true);
                    							copyLocalizationInfos(a10_0, element);
                    						}
                    					}

                    }


                    if ( state.backtracking==0 ) {
                    					// expected elements (follow set)
                    					addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[156]);
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[157]);
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[158]);
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[159]);
                    					addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[160]);
                    					addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[161]);
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[162]);
                    				}

                    // Xmu.g:2028:5: ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )?
                    int alt16=2;
                    switch ( input.LA(1) ) {
                        case 49:
                            {
                            int LA16_1 = input.LA(2);

                            if ( (synpred19_Xmu()) ) {
                                alt16=1;
                            }
                            }
                            break;
                        case 61:
                            {
                            int LA16_2 = input.LA(2);

                            if ( (synpred19_Xmu()) ) {
                                alt16=1;
                            }
                            }
                            break;
                        case 60:
                            {
                            int LA16_3 = input.LA(2);

                            if ( (synpred19_Xmu()) ) {
                                alt16=1;
                            }
                            }
                            break;
                    }

                    switch (alt16) {
                        case 1 :
                            // Xmu.g:2029:6: ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) )
                            {
                            // Xmu.g:2029:6: ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) )
                            // Xmu.g:2030:7: (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement )
                            {
                            // Xmu.g:2030:7: (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement )
                            // Xmu.g:2031:8: a11_0= parse_edu_ustb_sei_mde_xmu_VStatement
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1893);
                            a11_0=parse_edu_ustb_sei_mde_xmu_VStatement();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            								if (terminateParsing) {
                            									throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                            								}
                            								if (element == null) {
                            									element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createForStatement();
                            									startIncompleteElement(element);
                            								}
                            								if (a11_0 != null) {
                            									if (a11_0 != null) {
                            										Object value = a11_0;
                            										addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.FOR_STATEMENT__ACTIONS, value);
                            										completedElement(value, true);
                            									}
                            									collectHiddenTokens(element);
                            									retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_6_0_0_4_0_0_1_0_0_1_0_0_0, a11_0, true);
                            									copyLocalizationInfos(a11_0, element);
                            								}
                            							}

                            }


                            if ( state.backtracking==0 ) {
                            							// expected elements (follow set)
                            							addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[163]);
                            							addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[164]);
                            							addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[165]);
                            							addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[166]);
                            							addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[167]);
                            							addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[168]);
                            							addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[169]);
                            						}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    					// expected elements (follow set)
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[170]);
                    					addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[171]);
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[172]);
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[173]);
                    					addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[174]);
                    					addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[175]);
                    					addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[176]);
                    				}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            			// expected elements (follow set)
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[177]);
            			addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[178]);
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[179]);
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[180]);
            			addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[181]);
            			addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[182]);
            			addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[183]);
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[184]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[185]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[187]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[188]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[189]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[190]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_edu_ustb_sei_mde_xmu_ForStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_ForStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_UpdatedStatement"
    // Xmu.g:2102:1: parse_edu_ustb_sei_mde_xmu_UpdatedStatement returns [edu.ustb.sei.mde.xmu.UpdatedStatement element = null] : a0= 'updated' a1= '(' ( (a2= NAME ) )+ a3= ',' ( (a4= NAME ) )+ a5= ')' ;
    public final edu.ustb.sei.mde.xmu.UpdatedStatement parse_edu_ustb_sei_mde_xmu_UpdatedStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UpdatedStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_UpdatedStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xmu.g:2105:2: (a0= 'updated' a1= '(' ( (a2= NAME ) )+ a3= ',' ( (a4= NAME ) )+ a5= ')' )
            // Xmu.g:2106:2: a0= 'updated' a1= '(' ( (a2= NAME ) )+ a3= ',' ( (a4= NAME ) )+ a5= ')'
            {
            a0=(Token)match(input,63,FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2004); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatedStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_7_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[191]);
            	}

            a1=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2018); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatedStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_7_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[192]);
            	}

            // Xmu.g:2134:2: ( (a2= NAME ) )+
            int cnt18=0;
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==NAME) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // Xmu.g:2135:3: (a2= NAME )
            	    {
            	    // Xmu.g:2135:3: (a2= NAME )
            	    // Xmu.g:2136:4: a2= NAME
            	    {
            	    a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2041); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatedStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a2 != null) {
            	    					edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            	    					tokenResolver.setOptions(getOptions());
            	    					edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            	    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UPDATED_STATEMENT__SVAR), result);
            	    					Object resolvedObject = result.getResolvedToken();
            	    					if (resolvedObject == null) {
            	    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            	    					}
            	    					String resolved = (String) resolvedObject;
            	    					edu.ustb.sei.mde.xmu.Variable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            	    					collectHiddenTokens(element);
            	    					registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.UpdatedStatement, edu.ustb.sei.mde.xmu.Variable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getUpdatedStatementSVarReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UPDATED_STATEMENT__SVAR), resolved, proxy);
            	    					if (proxy != null) {
            	    						Object value = proxy;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.UPDATED_STATEMENT__SVAR, value);
            	    						completedElement(value, false);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_7_0_0_2, proxy, true);
            	    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            	    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[194]);
            	}

            a3=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2071); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatedStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_7_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[195]);
            	}

            // Xmu.g:2191:2: ( (a4= NAME ) )+
            int cnt19=0;
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==NAME) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // Xmu.g:2192:3: (a4= NAME )
            	    {
            	    // Xmu.g:2192:3: (a4= NAME )
            	    // Xmu.g:2193:4: a4= NAME
            	    {
            	    a4=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2094); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatedStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a4 != null) {
            	    					edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            	    					tokenResolver.setOptions(getOptions());
            	    					edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            	    					tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UPDATED_STATEMENT__VVAR), result);
            	    					Object resolvedObject = result.getResolvedToken();
            	    					if (resolvedObject == null) {
            	    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
            	    					}
            	    					String resolved = (String) resolvedObject;
            	    					edu.ustb.sei.mde.xmu.ObjectVariable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            	    					collectHiddenTokens(element);
            	    					registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.UpdatedStatement, edu.ustb.sei.mde.xmu.ObjectVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getUpdatedStatementVVarReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UPDATED_STATEMENT__VVAR), resolved, proxy);
            	    					if (proxy != null) {
            	    						Object value = proxy;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.UPDATED_STATEMENT__VVAR, value);
            	    						completedElement(value, false);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_7_0_0_4, proxy, true);
            	    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
            	    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, proxy);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt19 >= 1 ) break loop19;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(19, input);
                        throw eee;
                }
                cnt19++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[196]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[197]);
            	}

            a5=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2124); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatedStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_7_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[199]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[200]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[201]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[202]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[203]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[204]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_edu_ustb_sei_mde_xmu_UpdatedStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_UpdatedStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_VStatement"
    // Xmu.g:2256:1: parse_edu_ustb_sei_mde_xmu_VStatement returns [edu.ustb.sei.mde.xmu.VStatement element = null] : ( (a0= 'match' |a1= 'unmatchv' |a2= 'unmatchs' ) ) a5= '->' (a6_0= parse_edu_ustb_sei_mde_xmu_Statement ) ;
    public final edu.ustb.sei.mde.xmu.VStatement parse_edu_ustb_sei_mde_xmu_VStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.VStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_VStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu.Statement a6_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xmu.g:2259:2: ( ( (a0= 'match' |a1= 'unmatchv' |a2= 'unmatchs' ) ) a5= '->' (a6_0= parse_edu_ustb_sei_mde_xmu_Statement ) )
            // Xmu.g:2260:2: ( (a0= 'match' |a1= 'unmatchv' |a2= 'unmatchs' ) ) a5= '->' (a6_0= parse_edu_ustb_sei_mde_xmu_Statement )
            {
            // Xmu.g:2260:2: ( (a0= 'match' |a1= 'unmatchv' |a2= 'unmatchs' ) )
            // Xmu.g:2261:3: (a0= 'match' |a1= 'unmatchv' |a2= 'unmatchs' )
            {
            // Xmu.g:2261:3: (a0= 'match' |a1= 'unmatchv' |a2= 'unmatchs' )
            int alt20=3;
            switch ( input.LA(1) ) {
            case 49:
                {
                alt20=1;
                }
                break;
            case 61:
                {
                alt20=2;
                }
                break;
            case 60:
                {
                alt20=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;

            }

            switch (alt20) {
                case 1 :
                    // Xmu.g:2262:4: a0= 'match'
                    {
                    a0=(Token)match(input,49,FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu_VStatement2162); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createVStatement();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_8_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStmtType().getEEnumLiteral(edu.ustb.sei.mde.xmu.VStmtType.MATCH_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.VSTATEMENT__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu.g:2275:8: a1= 'unmatchv'
                    {
                    a1=(Token)match(input,61,FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu_VStatement2177); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createVStatement();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_8_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStmtType().getEEnumLiteral(edu.ustb.sei.mde.xmu.VStmtType.UNMATCHV_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.VSTATEMENT__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu.g:2288:8: a2= 'unmatchs'
                    {
                    a2=(Token)match(input,60,FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu_VStatement2192); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createVStatement();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_8_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStmtType().getEEnumLiteral(edu.ustb.sei.mde.xmu.VStmtType.UNMATCHS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.VSTATEMENT__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[205]);
            	}

            a5=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_VStatement2213); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createVStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_8_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[206]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[207]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[208]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[209]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[210]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[211]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[212]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[213]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[214]);
            	}

            // Xmu.g:2330:2: (a6_0= parse_edu_ustb_sei_mde_xmu_Statement )
            // Xmu.g:2331:3: a6_0= parse_edu_ustb_sei_mde_xmu_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_VStatement2231);
            a6_0=parse_edu_ustb_sei_mde_xmu_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createVStatement();
            				startIncompleteElement(element);
            			}
            			if (a6_0 != null) {
            				if (a6_0 != null) {
            					Object value = a6_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.VSTATEMENT__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_8_0_0_2, a6_0, true);
            				copyLocalizationInfos(a6_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[215]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[216]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[217]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[218]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[219]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[220]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[221]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_edu_ustb_sei_mde_xmu_VStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_VStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_Pattern"
    // Xmu.g:2364:1: parse_edu_ustb_sei_mde_xmu_Pattern returns [edu.ustb.sei.mde.xmu.Pattern element = null] : ( (a0_0= parse_edu_ustb_sei_mde_xmu_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? |c0= parse_edu_ustb_sei_mde_xmu_UpdatePattern );
    public final edu.ustb.sei.mde.xmu.Pattern parse_edu_ustb_sei_mde_xmu_Pattern() throws RecognitionException {
        edu.ustb.sei.mde.xmu.Pattern element =  null;

        int parse_edu_ustb_sei_mde_xmu_Pattern_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu.PatternNode a0_0 =null;

        edu.ustb.sei.mde.xmu.BooleanOrExpr a2_0 =null;

        edu.ustb.sei.mde.xmu.BooleanAndExpr a2_1 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr a2_2 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr a2_3 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a2_4 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a2_5 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a2_6 =null;

        edu.ustb.sei.mde.xmu.UpdatePattern c0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xmu.g:2367:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? |c0= parse_edu_ustb_sei_mde_xmu_UpdatePattern )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==NAME) ) {
                alt23=1;
            }
            else if ( (LA23_0==44) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;

            }
            switch (alt23) {
                case 1 :
                    // Xmu.g:2368:2: (a0_0= parse_edu_ustb_sei_mde_xmu_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )?
                    {
                    // Xmu.g:2368:2: (a0_0= parse_edu_ustb_sei_mde_xmu_PatternNode )
                    // Xmu.g:2369:3: a0_0= parse_edu_ustb_sei_mde_xmu_PatternNode
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternNode_in_parse_edu_ustb_sei_mde_xmu_Pattern2268);
                    a0_0=parse_edu_ustb_sei_mde_xmu_PatternNode();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__ROOT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[222]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[223]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[224]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[225]);
                    	}

                    // Xmu.g:2397:2: ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==37) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // Xmu.g:2398:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' )
                            {
                            // Xmu.g:2398:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' )
                            // Xmu.g:2399:4: a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']'
                            {
                            a1=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_Pattern2295); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                            					startIncompleteElement(element);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_0, null, true);
                            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                            			}

                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[226]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[227]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[228]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[229]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[230]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[231]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[232]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[233]);
                            			}

                            // Xmu.g:2420:4: (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
                            int alt21=7;
                            switch ( input.LA(1) ) {
                            case 51:
                                {
                                int LA21_1 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (synpred30_Xmu()) ) {
                                    alt21=6;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 1, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case 23:
                                {
                                int LA21_2 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (synpred30_Xmu()) ) {
                                    alt21=6;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 2, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case NAME:
                                {
                                int LA21_3 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (true) ) {
                                    alt21=7;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 3, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case QUOTED_39_39_92:
                                {
                                int LA21_4 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (true) ) {
                                    alt21=7;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 4, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case 52:
                                {
                                int LA21_5 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (true) ) {
                                    alt21=7;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 5, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case 50:
                                {
                                int LA21_6 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (true) ) {
                                    alt21=7;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 6, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case NUMBER:
                                {
                                int LA21_7 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (true) ) {
                                    alt21=7;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 7, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case BOOLEAN:
                                {
                                int LA21_8 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (true) ) {
                                    alt21=7;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 8, input);

                                    throw nvae;

                                }
                                }
                                break;
                            case 17:
                                {
                                int LA21_9 = input.LA(2);

                                if ( (synpred25_Xmu()) ) {
                                    alt21=1;
                                }
                                else if ( (synpred26_Xmu()) ) {
                                    alt21=2;
                                }
                                else if ( (synpred27_Xmu()) ) {
                                    alt21=3;
                                }
                                else if ( (synpred28_Xmu()) ) {
                                    alt21=4;
                                }
                                else if ( (synpred29_Xmu()) ) {
                                    alt21=5;
                                }
                                else if ( (true) ) {
                                    alt21=7;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 21, 9, input);

                                    throw nvae;

                                }
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 21, 0, input);

                                throw nvae;

                            }

                            switch (alt21) {
                                case 1 :
                                    // Xmu.g:2421:5: a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2321);
                                    a2_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    					if (terminateParsing) {
                                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                                    					}
                                    					if (element == null) {
                                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                                    						startIncompleteElement(element);
                                    					}
                                    					if (a2_0 != null) {
                                    						if (a2_0 != null) {
                                    							Object value = a2_0;
                                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__GUARD), value);
                                    							completedElement(value, true);
                                    						}
                                    						collectHiddenTokens(element);
                                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_1, a2_0, true);
                                    						copyLocalizationInfos(a2_0, element);
                                    					}
                                    				}

                                    }
                                    break;
                                case 2 :
                                    // Xmu.g:2440:10: a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2341);
                                    a2_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    					if (terminateParsing) {
                                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                                    					}
                                    					if (element == null) {
                                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                                    						startIncompleteElement(element);
                                    					}
                                    					if (a2_1 != null) {
                                    						if (a2_1 != null) {
                                    							Object value = a2_1;
                                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__GUARD), value);
                                    							completedElement(value, true);
                                    						}
                                    						collectHiddenTokens(element);
                                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_1, a2_1, true);
                                    						copyLocalizationInfos(a2_1, element);
                                    					}
                                    				}

                                    }
                                    break;
                                case 3 :
                                    // Xmu.g:2459:10: a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2361);
                                    a2_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    					if (terminateParsing) {
                                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                                    					}
                                    					if (element == null) {
                                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                                    						startIncompleteElement(element);
                                    					}
                                    					if (a2_2 != null) {
                                    						if (a2_2 != null) {
                                    							Object value = a2_2;
                                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__GUARD), value);
                                    							completedElement(value, true);
                                    						}
                                    						collectHiddenTokens(element);
                                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_1, a2_2, true);
                                    						copyLocalizationInfos(a2_2, element);
                                    					}
                                    				}

                                    }
                                    break;
                                case 4 :
                                    // Xmu.g:2478:10: a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2381);
                                    a2_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    					if (terminateParsing) {
                                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                                    					}
                                    					if (element == null) {
                                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                                    						startIncompleteElement(element);
                                    					}
                                    					if (a2_3 != null) {
                                    						if (a2_3 != null) {
                                    							Object value = a2_3;
                                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__GUARD), value);
                                    							completedElement(value, true);
                                    						}
                                    						collectHiddenTokens(element);
                                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_1, a2_3, true);
                                    						copyLocalizationInfos(a2_3, element);
                                    					}
                                    				}

                                    }
                                    break;
                                case 5 :
                                    // Xmu.g:2497:10: a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2401);
                                    a2_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    					if (terminateParsing) {
                                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                                    					}
                                    					if (element == null) {
                                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                                    						startIncompleteElement(element);
                                    					}
                                    					if (a2_4 != null) {
                                    						if (a2_4 != null) {
                                    							Object value = a2_4;
                                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__GUARD), value);
                                    							completedElement(value, true);
                                    						}
                                    						collectHiddenTokens(element);
                                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_1, a2_4, true);
                                    						copyLocalizationInfos(a2_4, element);
                                    					}
                                    				}

                                    }
                                    break;
                                case 6 :
                                    // Xmu.g:2516:10: a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2421);
                                    a2_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    					if (terminateParsing) {
                                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                                    					}
                                    					if (element == null) {
                                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                                    						startIncompleteElement(element);
                                    					}
                                    					if (a2_5 != null) {
                                    						if (a2_5 != null) {
                                    							Object value = a2_5;
                                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__GUARD), value);
                                    							completedElement(value, true);
                                    						}
                                    						collectHiddenTokens(element);
                                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_1, a2_5, true);
                                    						copyLocalizationInfos(a2_5, element);
                                    					}
                                    				}

                                    }
                                    break;
                                case 7 :
                                    // Xmu.g:2535:10: a2_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2441);
                                    a2_6=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    					if (terminateParsing) {
                                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                                    					}
                                    					if (element == null) {
                                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                                    						startIncompleteElement(element);
                                    					}
                                    					if (a2_6 != null) {
                                    						if (a2_6 != null) {
                                    							Object value = a2_6;
                                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN__GUARD), value);
                                    							completedElement(value, true);
                                    						}
                                    						collectHiddenTokens(element);
                                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_1, a2_6, true);
                                    						copyLocalizationInfos(a2_6, element);
                                    					}
                                    				}

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[234]);
                            			}

                            a3=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_Pattern2469); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPattern();
                            					startIncompleteElement(element);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_9_0_0_1_0_0_2, null, true);
                            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                            			}

                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[235]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[236]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[237]);
                            			}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[238]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[239]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[240]);
                    	}

                    }
                    break;
                case 2 :
                    // Xmu.g:2587:2: c0= parse_edu_ustb_sei_mde_xmu_UpdatePattern
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatePattern_in_parse_edu_ustb_sei_mde_xmu_Pattern2507);
                    c0=parse_edu_ustb_sei_mde_xmu_UpdatePattern();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_edu_ustb_sei_mde_xmu_Pattern_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_Pattern"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_PatternNode"
    // Xmu.g:2591:1: parse_edu_ustb_sei_mde_xmu_PatternNode returns [edu.ustb.sei.mde.xmu.PatternNode element = null] : (a0= NAME ) a1= ':' (a2= NAME ) a3= '{' ( ( (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )* ) )? a7= '}' ;
    public final edu.ustb.sei.mde.xmu.PatternNode parse_edu_ustb_sei_mde_xmu_PatternNode() throws RecognitionException {
        edu.ustb.sei.mde.xmu.PatternNode element =  null;

        int parse_edu_ustb_sei_mde_xmu_PatternNode_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        Token a7=null;
        edu.ustb.sei.mde.xmu.PatternExpr a4_0 =null;

        edu.ustb.sei.mde.xmu.PatternExpr a6_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xmu.g:2594:2: ( (a0= NAME ) a1= ':' (a2= NAME ) a3= '{' ( ( (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )* ) )? a7= '}' )
            // Xmu.g:2595:2: (a0= NAME ) a1= ':' (a2= NAME ) a3= '{' ( ( (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )* ) )? a7= '}'
            {
            // Xmu.g:2595:2: (a0= NAME )
            // Xmu.g:2596:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternNode2536); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__VARIABLE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.Variable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.PatternNode, edu.ustb.sei.mde.xmu.Variable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternNodeVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__VARIABLE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__VARIABLE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[241]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu_PatternNode2557); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[242]);
            	}

            // Xmu.g:2649:2: (a2= NAME )
            // Xmu.g:2650:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternNode2575); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClass proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.PatternNode, org.eclipse.emf.ecore.EClass>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternNodeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[243]);
            	}

            a3=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_PatternNode2596); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[244]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[245]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[246]);
            	}

            // Xmu.g:2705:2: ( ( (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )* ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==NAME) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // Xmu.g:2706:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )* )
                    {
                    // Xmu.g:2706:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )* )
                    // Xmu.g:2707:4: (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )*
                    {
                    // Xmu.g:2707:4: (a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr )
                    // Xmu.g:2708:5: a4_0= parse_edu_ustb_sei_mde_xmu_PatternExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternExpr_in_parse_edu_ustb_sei_mde_xmu_PatternNode2625);
                    a4_0=parse_edu_ustb_sei_mde_xmu_PatternExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__EXPR, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_4_0_0_0, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[247]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[248]);
                    			}

                    // Xmu.g:2734:4: ( (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) ) )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==22) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // Xmu.g:2735:5: (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) )
                    	    {
                    	    // Xmu.g:2735:5: (a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr ) )
                    	    // Xmu.g:2736:6: a5= ',' (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr )
                    	    {
                    	    a5=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_PatternNode2666); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_4_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[249]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[250]);
                    	    					}

                    	    // Xmu.g:2751:6: (a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr )
                    	    // Xmu.g:2752:7: a6_0= parse_edu_ustb_sei_mde_xmu_PatternExpr
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternExpr_in_parse_edu_ustb_sei_mde_xmu_PatternNode2700);
                    	    a6_0=parse_edu_ustb_sei_mde_xmu_PatternExpr();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a6_0 != null) {
                    	    								if (a6_0 != null) {
                    	    									Object value = a6_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_NODE__EXPR, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_4_0_0_1_0_0_1, a6_0, true);
                    	    								copyLocalizationInfos(a6_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[251]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[252]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[253]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[254]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[255]);
            	}

            a7=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_PatternNode2774); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternNode();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_10_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[256]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[258]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[259]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[260]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[261]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[262]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[263]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[264]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[265]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[266]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[267]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_edu_ustb_sei_mde_xmu_PatternNode_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_PatternNode"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr"
    // Xmu.g:2820:1: parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr returns [edu.ustb.sei.mde.xmu.PatternReferenceExpr element = null] : (a0= NAME ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu_PatternNode ) ;
    public final edu.ustb.sei.mde.xmu.PatternReferenceExpr parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.PatternReferenceExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu.AtomicExpr a2_0 =null;

        edu.ustb.sei.mde.xmu.PatternNode a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xmu.g:2823:2: ( (a0= NAME ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu_PatternNode ) )
            // Xmu.g:2824:2: (a0= NAME ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu_PatternNode )
            {
            // Xmu.g:2824:2: (a0= NAME )
            // Xmu.g:2825:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2807); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternReferenceExpr();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_REFERENCE_EXPR__REFERENCE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EReference proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEReference();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.PatternReferenceExpr, org.eclipse.emf.ecore.EReference>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternReferenceExprReferenceReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_REFERENCE_EXPR__REFERENCE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_REFERENCE_EXPR__REFERENCE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_11_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[268]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[269]);
            	}

            // Xmu.g:2865:2: ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==37) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // Xmu.g:2866:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' )
                    {
                    // Xmu.g:2866:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' )
                    // Xmu.g:2867:4: a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']'
                    {
                    a1=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2837); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternReferenceExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_11_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[270]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[271]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[272]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[273]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[274]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[275]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[276]);
                    			}

                    // Xmu.g:2887:4: (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
                    // Xmu.g:2888:5: a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2863);
                    a2_0=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternReferenceExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_REFERENCE_EXPR__POS), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_11_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[277]);
                    			}

                    a3=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2891); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternReferenceExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_11_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[278]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[279]);
            	}

            a4=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2924); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternReferenceExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_11_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternReferenceExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[280]);
            	}

            // Xmu.g:2948:2: (a5_0= parse_edu_ustb_sei_mde_xmu_PatternNode )
            // Xmu.g:2949:3: a5_0= parse_edu_ustb_sei_mde_xmu_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternNode_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2942);
            a5_0=parse_edu_ustb_sei_mde_xmu_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternReferenceExpr();
            				startIncompleteElement(element);
            			}
            			if (a5_0 != null) {
            				if (a5_0 != null) {
            					Object value = a5_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_REFERENCE_EXPR__NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_11_0_0_3, a5_0, true);
            				copyLocalizationInfos(a5_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[281]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[282]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_PatternEqualExpr"
    // Xmu.g:2977:1: parse_edu_ustb_sei_mde_xmu_PatternEqualExpr returns [edu.ustb.sei.mde.xmu.PatternEqualExpr element = null] : (a0= NAME ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ;
    public final edu.ustb.sei.mde.xmu.PatternEqualExpr parse_edu_ustb_sei_mde_xmu_PatternEqualExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.PatternEqualExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_PatternEqualExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu.AtomicExpr a2_0 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xmu.g:2980:2: ( (a0= NAME ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            // Xmu.g:2981:2: (a0= NAME ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )? a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            {
            // Xmu.g:2981:2: (a0= NAME )
            // Xmu.g:2982:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr2979); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternEqualExpr();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_EQUAL_EXPR__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.PatternEqualExpr, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternEqualExprFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_EQUAL_EXPR__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_EQUAL_EXPR__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_12_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[283]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[284]);
            	}

            // Xmu.g:3022:2: ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==37) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // Xmu.g:3023:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' )
                    {
                    // Xmu.g:3023:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']' )
                    // Xmu.g:3024:4: a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a3= ']'
                    {
                    a1=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3009); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternEqualExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_12_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[285]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[286]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[287]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[288]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[289]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[290]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[291]);
                    			}

                    // Xmu.g:3044:4: (a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
                    // Xmu.g:3045:5: a2_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3035);
                    a2_0=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternEqualExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_EQUAL_EXPR__POS), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_12_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[292]);
                    			}

                    a3=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3063); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternEqualExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_12_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[293]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[294]);
            	}

            a4=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3096); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternEqualExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_12_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[295]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[296]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[297]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[298]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[299]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[300]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPatternEqualExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[301]);
            	}

            // Xmu.g:3111:2: (a5_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            // Xmu.g:3112:3: a5_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3114);
            a5_0=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPatternEqualExpr();
            				startIncompleteElement(element);
            			}
            			if (a5_0 != null) {
            				if (a5_0 != null) {
            					Object value = a5_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PATTERN_EQUAL_EXPR__VALUE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_12_0_0_3, a5_0, true);
            				copyLocalizationInfos(a5_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[302]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[303]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_edu_ustb_sei_mde_xmu_PatternEqualExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_PatternEqualExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_VariableExp"
    // Xmu.g:3140:1: parse_edu_ustb_sei_mde_xmu_VariableExp returns [edu.ustb.sei.mde.xmu.VariableExp element = null] : (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )* ;
    public final edu.ustb.sei.mde.xmu.VariableExp parse_edu_ustb_sei_mde_xmu_VariableExp() throws RecognitionException {
        edu.ustb.sei.mde.xmu.VariableExp element =  null;

        int parse_edu_ustb_sei_mde_xmu_VariableExp_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu.Path a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xmu.g:3143:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )* )
            // Xmu.g:3144:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )*
            {
            // Xmu.g:3144:2: (a0= NAME )
            // Xmu.g:3145:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_VariableExp3151); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createVariableExp();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.VARIABLE_EXP__VAR), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.Variable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.VariableExp, edu.ustb.sei.mde.xmu.Variable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVariableExpVarReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.VARIABLE_EXP__VAR), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.VARIABLE_EXP__VAR), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_13_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[304]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[305]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[306]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[307]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[308]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[309]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[310]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[311]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[312]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[313]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[314]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[315]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[316]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[317]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[318]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[319]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[320]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[321]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[322]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[323]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[324]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[325]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[326]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[327]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[328]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[329]);
            	}

            // Xmu.g:3209:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==24) ) {
                    int LA28_2 = input.LA(2);

                    if ( ((LA28_2 >= 45 && LA28_2 <= 46)||LA28_2==56) ) {
                        alt28=1;
                    }


                }
                else if ( (LA28_0==25) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // Xmu.g:3210:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) )
            	    {
            	    // Xmu.g:3210:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) )
            	    // Xmu.g:3211:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Path )
            	    {
            	    // Xmu.g:3211:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Path )
            	    // Xmu.g:3212:5: a1_0= parse_edu_ustb_sei_mde_xmu_Path
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Path_in_parse_edu_ustb_sei_mde_xmu_VariableExp3187);
            	    a1_0=parse_edu_ustb_sei_mde_xmu_Path();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createVariableExp();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a1_0 != null) {
            	    						if (a1_0 != null) {
            	    							Object value = a1_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.VARIABLE_EXP__PATH, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_13_0_0_1_0_0_0, a1_0, true);
            	    						copyLocalizationInfos(a1_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[330]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[331]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[332]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[333]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[334]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[335]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[336]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[337]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[338]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[339]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[340]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[341]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[342]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[343]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[344]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[345]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[346]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[347]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[348]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[349]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[350]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[351]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[352]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[353]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[354]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[355]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[356]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[357]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[358]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[359]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[360]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[361]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[362]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[363]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[364]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[365]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[366]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[367]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[368]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[369]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[370]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[371]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[372]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[373]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[374]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[375]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[376]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[377]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[378]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[379]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[380]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[381]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_edu_ustb_sei_mde_xmu_VariableExp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_VariableExp"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_FeaturePath"
    // Xmu.g:3296:1: parse_edu_ustb_sei_mde_xmu_FeaturePath returns [edu.ustb.sei.mde.xmu.FeaturePath element = null] : a0= '.' (a1= NAME ) ;
    public final edu.ustb.sei.mde.xmu.FeaturePath parse_edu_ustb_sei_mde_xmu_FeaturePath() throws RecognitionException {
        edu.ustb.sei.mde.xmu.FeaturePath element =  null;

        int parse_edu_ustb_sei_mde_xmu_FeaturePath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xmu.g:3299:2: (a0= '.' (a1= NAME ) )
            // Xmu.g:3300:2: a0= '.' (a1= NAME )
            {
            a0=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_FeaturePath3243); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createFeaturePath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_14_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[382]);
            	}

            // Xmu.g:3314:2: (a1= NAME )
            // Xmu.g:3315:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_FeaturePath3261); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createFeaturePath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.FEATURE_PATH__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.FEATURE_PATH__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_14_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[383]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[384]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[385]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[386]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[387]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[388]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[389]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[390]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[391]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[392]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[393]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[394]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[395]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[396]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[397]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[398]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[399]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[400]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[401]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[402]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[403]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[404]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[405]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[406]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[407]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[408]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[409]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[410]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[413]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_edu_ustb_sei_mde_xmu_FeaturePath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_FeaturePath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_LoopPath"
    // Xmu.g:3382:1: parse_edu_ustb_sei_mde_xmu_LoopPath returns [edu.ustb.sei.mde.xmu.LoopPath element = null] : a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu_Variable ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a9_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a9_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a9_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a9_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a9_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a9_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a10= ')' ;
    public final edu.ustb.sei.mde.xmu.LoopPath parse_edu_ustb_sei_mde_xmu_LoopPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu.LoopPath element =  null;

        int parse_edu_ustb_sei_mde_xmu_LoopPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        Token a10=null;
        edu.ustb.sei.mde.xmu.Variable a7_0 =null;

        edu.ustb.sei.mde.xmu.BooleanOrExpr a9_0 =null;

        edu.ustb.sei.mde.xmu.BooleanAndExpr a9_1 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr a9_2 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr a9_3 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a9_4 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a9_5 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a9_6 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xmu.g:3385:2: (a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu_Variable ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a9_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a9_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a9_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a9_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a9_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a9_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a10= ')' )
            // Xmu.g:3386:2: a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu_Variable ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a9_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a9_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a9_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a9_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a9_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a9_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a10= ')'
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_LoopPath3297); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[414]);
            	}

            // Xmu.g:3400:2: ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) )
            // Xmu.g:3401:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            {
            // Xmu.g:3401:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            int alt29=3;
            switch ( input.LA(1) ) {
            case 56:
                {
                alt29=1;
                }
                break;
            case 46:
                {
                alt29=2;
                }
                break;
            case 45:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;

            }

            switch (alt29) {
                case 1 :
                    // Xmu.g:3402:4: a1= 'select'
                    {
                    a1=(Token)match(input,56,FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu_LoopPath3320); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.LoopOperator.SELECT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu.g:3415:8: a2= 'forAll'
                    {
                    a2=(Token)match(input,46,FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu_LoopPath3335); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.LoopOperator.FOR_ALL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu.g:3428:8: a3= 'exists'
                    {
                    a3=(Token)match(input,45,FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu_LoopPath3350); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.LoopOperator.EXISTS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[415]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_LoopPath3371); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[416]);
            	}

            // Xmu.g:3462:2: (a7_0= parse_edu_ustb_sei_mde_xmu_Variable )
            // Xmu.g:3463:3: a7_0= parse_edu_ustb_sei_mde_xmu_Variable
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Variable_in_parse_edu_ustb_sei_mde_xmu_LoopPath3389);
            a7_0=parse_edu_ustb_sei_mde_xmu_Variable();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_3, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[417]);
            	}

            a8=(Token)match(input,69,FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu_LoopPath3407); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[418]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[419]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[420]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[425]);
            	}

            // Xmu.g:3509:2: (a9_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a9_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a9_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a9_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a9_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a9_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a9_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt30=7;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA30_1 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (synpred45_Xmu()) ) {
                    alt30=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA30_2 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (synpred45_Xmu()) ) {
                    alt30=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA30_3 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (true) ) {
                    alt30=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA30_4 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (true) ) {
                    alt30=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA30_5 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (true) ) {
                    alt30=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA30_6 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (true) ) {
                    alt30=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA30_7 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (true) ) {
                    alt30=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA30_8 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (true) ) {
                    alt30=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA30_9 = input.LA(2);

                if ( (synpred40_Xmu()) ) {
                    alt30=1;
                }
                else if ( (synpred41_Xmu()) ) {
                    alt30=2;
                }
                else if ( (synpred42_Xmu()) ) {
                    alt30=3;
                }
                else if ( (synpred43_Xmu()) ) {
                    alt30=4;
                }
                else if ( (synpred44_Xmu()) ) {
                    alt30=5;
                }
                else if ( (true) ) {
                    alt30=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;

            }

            switch (alt30) {
                case 1 :
                    // Xmu.g:3510:3: a9_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3425);
                    a9_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_0 != null) {
                    				if (a9_0 != null) {
                    					Object value = a9_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_5, a9_0, true);
                    				copyLocalizationInfos(a9_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:3529:6: a9_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3439);
                    a9_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_1 != null) {
                    				if (a9_1 != null) {
                    					Object value = a9_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_5, a9_1, true);
                    				copyLocalizationInfos(a9_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:3548:6: a9_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3453);
                    a9_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_2 != null) {
                    				if (a9_2 != null) {
                    					Object value = a9_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_5, a9_2, true);
                    				copyLocalizationInfos(a9_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu.g:3567:6: a9_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3467);
                    a9_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_3 != null) {
                    				if (a9_3 != null) {
                    					Object value = a9_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_5, a9_3, true);
                    				copyLocalizationInfos(a9_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu.g:3586:6: a9_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3481);
                    a9_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_4 != null) {
                    				if (a9_4 != null) {
                    					Object value = a9_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_5, a9_4, true);
                    				copyLocalizationInfos(a9_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu.g:3605:6: a9_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3495);
                    a9_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_5 != null) {
                    				if (a9_5 != null) {
                    					Object value = a9_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_5, a9_5, true);
                    				copyLocalizationInfos(a9_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu.g:3624:6: a9_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3509);
                    a9_6=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_6 != null) {
                    				if (a9_6 != null) {
                    					Object value = a9_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_5, a9_6, true);
                    				copyLocalizationInfos(a9_6, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[426]);
            	}

            a10=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_LoopPath3527); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_15_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[428]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[429]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[430]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[431]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[432]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[433]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[434]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[435]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[436]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[437]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[438]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[439]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[443]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[452]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[456]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[457]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_edu_ustb_sei_mde_xmu_LoopPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_LoopPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_OperationPath"
    // Xmu.g:3695:1: parse_edu_ustb_sei_mde_xmu_OperationPath returns [edu.ustb.sei.mde.xmu.OperationPath element = null] : a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )? a6= ')' ;
    public final edu.ustb.sei.mde.xmu.OperationPath parse_edu_ustb_sei_mde_xmu_OperationPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu.OperationPath element =  null;

        int parse_edu_ustb_sei_mde_xmu_OperationPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu.Expr a3_0 =null;

        edu.ustb.sei.mde.xmu.Expr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xmu.g:3698:2: (a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )? a6= ')' )
            // Xmu.g:3699:2: a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )? a6= ')'
            {
            a0=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_OperationPath3556); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_16_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[458]);
            	}

            // Xmu.g:3713:2: (a1= NAME )
            // Xmu.g:3714:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_OperationPath3574); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createOperationPath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.OPERATION_PATH__OPERATION), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.OPERATION_PATH__OPERATION), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_16_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[459]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_OperationPath3595); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_16_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[460]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[461]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[462]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[463]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[464]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[465]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[466]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[467]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[468]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[469]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[470]);
            	}

            // Xmu.g:3773:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==BOOLEAN||(LA32_0 >= NAME && LA32_0 <= OBJ_URI)||LA32_0==QUOTED_39_39_92||LA32_0==17||LA32_0==23||LA32_0==42||(LA32_0 >= 50 && LA32_0 <= 52)||LA32_0==57||LA32_0==65) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // Xmu.g:3774:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* )
                    {
                    // Xmu.g:3774:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* )
                    // Xmu.g:3775:4: (a3_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )*
                    {
                    // Xmu.g:3775:4: (a3_0= parse_edu_ustb_sei_mde_xmu_Expr )
                    // Xmu.g:3776:5: a3_0= parse_edu_ustb_sei_mde_xmu_Expr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_OperationPath3624);
                    a3_0=parse_edu_ustb_sei_mde_xmu_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createOperationPath();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.OPERATION_PATH__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_16_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[471]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[472]);
                    			}

                    // Xmu.g:3802:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==22) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // Xmu.g:3803:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) )
                    	    {
                    	    // Xmu.g:3803:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr ) )
                    	    // Xmu.g:3804:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu_Expr )
                    	    {
                    	    a4=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_OperationPath3665); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createOperationPath();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_16_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[473]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[474]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[475]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[476]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[477]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[478]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[479]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[480]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[481]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[482]);
                    	    					}

                    	    // Xmu.g:3827:6: (a5_0= parse_edu_ustb_sei_mde_xmu_Expr )
                    	    // Xmu.g:3828:7: a5_0= parse_edu_ustb_sei_mde_xmu_Expr
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_OperationPath3699);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu_Expr();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createOperationPath();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.OPERATION_PATH__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_16_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[483]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[484]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[485]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[486]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[487]);
            	}

            a6=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_OperationPath3773); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_16_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[488]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[489]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[490]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[491]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[492]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[493]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[494]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[495]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[496]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[497]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[498]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[499]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[500]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[501]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[502]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[503]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[504]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[505]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[506]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[507]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[508]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[509]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[510]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[511]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[512]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[513]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[514]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[515]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[516]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[517]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[518]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_edu_ustb_sei_mde_xmu_OperationPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_OperationPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_StringLiteral"
    // Xmu.g:3915:1: parse_edu_ustb_sei_mde_xmu_StringLiteral returns [edu.ustb.sei.mde.xmu.StringLiteral element = null] : (a0= QUOTED_39_39_92 ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )* ;
    public final edu.ustb.sei.mde.xmu.StringLiteral parse_edu_ustb_sei_mde_xmu_StringLiteral() throws RecognitionException {
        edu.ustb.sei.mde.xmu.StringLiteral element =  null;

        int parse_edu_ustb_sei_mde_xmu_StringLiteral_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu.Path a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xmu.g:3918:2: ( (a0= QUOTED_39_39_92 ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )* )
            // Xmu.g:3919:2: (a0= QUOTED_39_39_92 ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )*
            {
            // Xmu.g:3919:2: (a0= QUOTED_39_39_92 )
            // Xmu.g:3920:3: a0= QUOTED_39_39_92
            {
            a0=(Token)match(input,QUOTED_39_39_92,FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu_StringLiteral3806); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStringLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_39_39_92");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.STRING_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.STRING_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_17_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[519]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[520]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[521]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[522]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[523]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[524]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[525]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[526]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[527]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[528]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[529]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[530]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[531]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[532]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[533]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[534]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[535]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[536]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[537]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[538]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[539]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[540]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[541]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[542]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[543]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[544]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[546]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[547]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[548]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[549]);
            	}

            // Xmu.g:3985:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==24) ) {
                    int LA33_2 = input.LA(2);

                    if ( ((LA33_2 >= 45 && LA33_2 <= 46)||LA33_2==56) ) {
                        alt33=1;
                    }


                }
                else if ( (LA33_0==25) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // Xmu.g:3986:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) )
            	    {
            	    // Xmu.g:3986:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) )
            	    // Xmu.g:3987:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Path )
            	    {
            	    // Xmu.g:3987:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Path )
            	    // Xmu.g:3988:5: a1_0= parse_edu_ustb_sei_mde_xmu_Path
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Path_in_parse_edu_ustb_sei_mde_xmu_StringLiteral3842);
            	    a1_0=parse_edu_ustb_sei_mde_xmu_Path();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createStringLiteral();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a1_0 != null) {
            	    						if (a1_0 != null) {
            	    							Object value = a1_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.STRING_LITERAL__PATH, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_17_0_0_1_0_0_0, a1_0, true);
            	    						copyLocalizationInfos(a1_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[550]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[551]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[552]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[553]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[554]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[555]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[556]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[557]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[558]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[559]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[560]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[561]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[562]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[563]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[564]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[565]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[566]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[567]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[568]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[569]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[570]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[571]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[572]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[573]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[574]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[575]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[576]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[577]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[578]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[579]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[580]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[581]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[582]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[583]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getStringLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[584]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[585]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[586]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[587]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[588]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[589]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[590]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[591]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[592]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[593]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[594]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[595]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[596]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[597]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[598]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[599]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[600]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[601]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[602]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[603]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[604]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[605]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[606]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[607]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[608]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[609]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[610]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[611]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_edu_ustb_sei_mde_xmu_StringLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_StringLiteral"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_EmptyLiteral"
    // Xmu.g:4082:1: parse_edu_ustb_sei_mde_xmu_EmptyLiteral returns [edu.ustb.sei.mde.xmu.EmptyLiteral element = null] : ( (a0= 'null' |a1= 'nil' ) ) ;
    public final edu.ustb.sei.mde.xmu.EmptyLiteral parse_edu_ustb_sei_mde_xmu_EmptyLiteral() throws RecognitionException {
        edu.ustb.sei.mde.xmu.EmptyLiteral element =  null;

        int parse_edu_ustb_sei_mde_xmu_EmptyLiteral_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xmu.g:4085:2: ( ( (a0= 'null' |a1= 'nil' ) ) )
            // Xmu.g:4086:2: ( (a0= 'null' |a1= 'nil' ) )
            {
            // Xmu.g:4086:2: ( (a0= 'null' |a1= 'nil' ) )
            // Xmu.g:4087:3: (a0= 'null' |a1= 'nil' )
            {
            // Xmu.g:4087:3: (a0= 'null' |a1= 'nil' )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==52) ) {
                alt34=1;
            }
            else if ( (LA34_0==50) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;

            }
            switch (alt34) {
                case 1 :
                    // Xmu.g:4088:4: a0= 'null'
                    {
                    a0=(Token)match(input,52,FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu_EmptyLiteral3907); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createEmptyLiteral();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_18_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getEmptyType().getEEnumLiteral(edu.ustb.sei.mde.xmu.EmptyType.NULL_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.EMPTY_LITERAL__VALUE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu.g:4101:8: a1= 'nil'
                    {
                    a1=(Token)match(input,50,FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu_EmptyLiteral3922); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createEmptyLiteral();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_18_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getEmptyType().getEEnumLiteral(edu.ustb.sei.mde.xmu.EmptyType.EMPTY_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.EMPTY_LITERAL__VALUE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[612]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[613]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[614]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[615]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[616]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[617]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[618]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[619]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[620]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[621]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[626]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[627]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[630]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[632]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[633]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_edu_ustb_sei_mde_xmu_EmptyLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_EmptyLiteral"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_IntegerLiteral"
    // Xmu.g:4144:1: parse_edu_ustb_sei_mde_xmu_IntegerLiteral returns [edu.ustb.sei.mde.xmu.IntegerLiteral element = null] : (a0= NUMBER ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )* ;
    public final edu.ustb.sei.mde.xmu.IntegerLiteral parse_edu_ustb_sei_mde_xmu_IntegerLiteral() throws RecognitionException {
        edu.ustb.sei.mde.xmu.IntegerLiteral element =  null;

        int parse_edu_ustb_sei_mde_xmu_IntegerLiteral_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu.Path a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xmu.g:4147:2: ( (a0= NUMBER ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )* )
            // Xmu.g:4148:2: (a0= NUMBER ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )*
            {
            // Xmu.g:4148:2: (a0= NUMBER )
            // Xmu.g:4149:3: a0= NUMBER
            {
            a0=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu_IntegerLiteral3962); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createIntegerLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.INTEGER_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.INTEGER_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_19_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[636]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[637]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[638]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[639]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[641]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[642]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[643]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[644]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[645]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[646]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[647]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[648]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[649]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[650]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[651]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[652]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[653]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[654]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[655]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[656]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[657]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[658]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[659]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[660]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[661]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[662]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[663]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[664]);
            	}

            // Xmu.g:4214:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==24) ) {
                    int LA35_2 = input.LA(2);

                    if ( ((LA35_2 >= 45 && LA35_2 <= 46)||LA35_2==56) ) {
                        alt35=1;
                    }


                }
                else if ( (LA35_0==25) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // Xmu.g:4215:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) )
            	    {
            	    // Xmu.g:4215:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Path ) )
            	    // Xmu.g:4216:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Path )
            	    {
            	    // Xmu.g:4216:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Path )
            	    // Xmu.g:4217:5: a1_0= parse_edu_ustb_sei_mde_xmu_Path
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Path_in_parse_edu_ustb_sei_mde_xmu_IntegerLiteral3998);
            	    a1_0=parse_edu_ustb_sei_mde_xmu_Path();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createIntegerLiteral();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a1_0 != null) {
            	    						if (a1_0 != null) {
            	    							Object value = a1_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.INTEGER_LITERAL__PATH, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_19_0_0_1_0_0_0, a1_0, true);
            	    						copyLocalizationInfos(a1_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[665]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[666]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[667]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[668]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[669]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[670]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[671]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[672]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[673]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[674]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[675]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[676]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[677]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[678]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[679]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[680]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[681]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[682]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[683]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[684]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[685]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[686]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[687]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[688]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[689]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[690]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[691]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[692]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[693]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[694]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[695]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[696]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[697]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[698]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getIntegerLiteral(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[699]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[700]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[701]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[702]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[703]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[704]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[705]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[706]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[707]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[708]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[709]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[710]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[711]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[712]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[713]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[714]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[715]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[716]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[717]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[718]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[719]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[720]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[721]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[722]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[723]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[726]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_edu_ustb_sei_mde_xmu_IntegerLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_IntegerLiteral"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_BooleanLiteral"
    // Xmu.g:4311:1: parse_edu_ustb_sei_mde_xmu_BooleanLiteral returns [edu.ustb.sei.mde.xmu.BooleanLiteral element = null] : (a0= BOOLEAN ) ;
    public final edu.ustb.sei.mde.xmu.BooleanLiteral parse_edu_ustb_sei_mde_xmu_BooleanLiteral() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanLiteral element =  null;

        int parse_edu_ustb_sei_mde_xmu_BooleanLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xmu.g:4314:2: ( (a0= BOOLEAN ) )
            // Xmu.g:4315:2: (a0= BOOLEAN )
            {
            // Xmu.g:4315:2: (a0= BOOLEAN )
            // Xmu.g:4316:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu_BooleanLiteral4058); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_20_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[736]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[737]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[738]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[739]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[740]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[741]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[742]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[743]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[744]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[745]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[746]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[747]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[748]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_edu_ustb_sei_mde_xmu_BooleanLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_BooleanLiteral"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_EnumLiteral"
    // Xmu.g:4374:1: parse_edu_ustb_sei_mde_xmu_EnumLiteral returns [edu.ustb.sei.mde.xmu.EnumLiteral element = null] : (a0= NAME ) a1= '::' (a2= NAME ) ;
    public final edu.ustb.sei.mde.xmu.EnumLiteral parse_edu_ustb_sei_mde_xmu_EnumLiteral() throws RecognitionException {
        edu.ustb.sei.mde.xmu.EnumLiteral element =  null;

        int parse_edu_ustb_sei_mde_xmu_EnumLiteral_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xmu.g:4377:2: ( (a0= NAME ) a1= '::' (a2= NAME ) )
            // Xmu.g:4378:2: (a0= NAME ) a1= '::' (a2= NAME )
            {
            // Xmu.g:4378:2: (a0= NAME )
            // Xmu.g:4379:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_EnumLiteral4098); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createEnumLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ENUM_LITERAL__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnum proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnum();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.EnumLiteral, org.eclipse.emf.ecore.EEnum>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ENUM_LITERAL__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ENUM_LITERAL__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_21_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[749]);
            	}

            a1=(Token)match(input,29,FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu_EnumLiteral4119); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createEnumLiteral();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_21_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[750]);
            	}

            // Xmu.g:4432:2: (a2= NAME )
            // Xmu.g:4433:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_EnumLiteral4137); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createEnumLiteral();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ENUM_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnumLiteral proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnumLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.EnumLiteral, org.eclipse.emf.ecore.EEnumLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralValueReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ENUM_LITERAL__VALUE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ENUM_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_21_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[751]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[752]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[753]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[754]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[755]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[756]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[757]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[758]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[770]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[771]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[772]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_edu_ustb_sei_mde_xmu_EnumLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_EnumLiteral"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_BlockStatement"
    // Xmu.g:4495:1: parse_edu_ustb_sei_mde_xmu_BlockStatement returns [edu.ustb.sei.mde.xmu.BlockStatement element = null] : a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )* ) )? a4= '}' ;
    public final edu.ustb.sei.mde.xmu.BlockStatement parse_edu_ustb_sei_mde_xmu_BlockStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BlockStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_BlockStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu.Statement a1_0 =null;

        edu.ustb.sei.mde.xmu.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xmu.g:4498:2: (a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )* ) )? a4= '}' )
            // Xmu.g:4499:2: a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )* ) )? a4= '}'
            {
            a0=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4173); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_22_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[773]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[774]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[775]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[776]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[780]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[782]);
            	}

            // Xmu.g:4522:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )* ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==NAME||(LA37_0 >= 43 && LA37_0 <= 44)||LA37_0==54||LA37_0==59||(LA37_0 >= 62 && LA37_0 <= 63)||LA37_0==68) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // Xmu.g:4523:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )* )
                    {
                    // Xmu.g:4523:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )* )
                    // Xmu.g:4524:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )*
                    {
                    // Xmu.g:4524:4: (a1_0= parse_edu_ustb_sei_mde_xmu_Statement )
                    // Xmu.g:4525:5: a1_0= parse_edu_ustb_sei_mde_xmu_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4202);
                    a1_0=parse_edu_ustb_sei_mde_xmu_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBlockStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BLOCK_STATEMENT__STATEMENTS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_22_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[783]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[784]);
                    			}

                    // Xmu.g:4551:4: ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ) )*
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==30) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // Xmu.g:4552:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) )
                    	    {
                    	    // Xmu.g:4552:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) )
                    	    // Xmu.g:4553:6: a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement )
                    	    {
                    	    a2=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4243); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBlockStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_22_0_0_1_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[785]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[786]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[787]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[788]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[789]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[790]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[791]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[792]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[793]);
                    	    					}

                    	    // Xmu.g:4575:6: (a3_0= parse_edu_ustb_sei_mde_xmu_Statement )
                    	    // Xmu.g:4576:7: a3_0= parse_edu_ustb_sei_mde_xmu_Statement
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4277);
                    	    a3_0=parse_edu_ustb_sei_mde_xmu_Statement();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBlockStatement();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a3_0 != null) {
                    	    								if (a3_0 != null) {
                    	    									Object value = a3_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BLOCK_STATEMENT__STATEMENTS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_22_0_0_1_0_0_1_0_0_1, a3_0, true);
                    	    								copyLocalizationInfos(a3_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[794]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[795]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[796]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[797]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[798]);
            	}

            a4=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4351); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_22_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[799]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[800]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[801]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[802]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[803]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[804]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[805]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_edu_ustb_sei_mde_xmu_BlockStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_BlockStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_SwitchStatement"
    // Xmu.g:4639:1: parse_edu_ustb_sei_mde_xmu_SwitchStatement returns [edu.ustb.sei.mde.xmu.SwitchStatement element = null] : a0= 'switch' (a1= NAME ) ( (a2= 'when' (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? a6= '{' ( (a7_0= parse_edu_ustb_sei_mde_xmu_CaseSubStatement ) )* a8= '}' ;
    public final edu.ustb.sei.mde.xmu.SwitchStatement parse_edu_ustb_sei_mde_xmu_SwitchStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.SwitchStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_SwitchStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu.UpdatedStatement a3_0 =null;

        edu.ustb.sei.mde.xmu.UpdatedStatement a5_0 =null;

        edu.ustb.sei.mde.xmu.CaseSubStatement a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xmu.g:4642:2: (a0= 'switch' (a1= NAME ) ( (a2= 'when' (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? a6= '{' ( (a7_0= parse_edu_ustb_sei_mde_xmu_CaseSubStatement ) )* a8= '}' )
            // Xmu.g:4643:2: a0= 'switch' (a1= NAME ) ( (a2= 'when' (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )? a6= '{' ( (a7_0= parse_edu_ustb_sei_mde_xmu_CaseSubStatement ) )* a8= '}'
            {
            a0=(Token)match(input,59,FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4380); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[806]);
            	}

            // Xmu.g:4657:2: (a1= NAME )
            // Xmu.g:4658:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4398); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.SWITCH_STATEMENT__VAR), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.Variable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.SwitchStatement, edu.ustb.sei.mde.xmu.Variable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getSwitchStatementVarReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.SWITCH_STATEMENT__VAR), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.SWITCH_STATEMENT__VAR), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[807]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[808]);
            	}

            // Xmu.g:4698:2: ( (a2= 'when' (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==66) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // Xmu.g:4699:3: (a2= 'when' (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* )
                    {
                    // Xmu.g:4699:3: (a2= 'when' (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )* )
                    // Xmu.g:4700:4: a2= 'when' (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )*
                    {
                    a2=(Token)match(input,66,FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4428); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[809]);
                    			}

                    // Xmu.g:4714:4: (a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement )
                    // Xmu.g:4715:5: a3_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4454);
                    a3_0=parse_edu_ustb_sei_mde_xmu_UpdatedStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.SWITCH_STATEMENT__WHEN, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_2_0_0_1, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[810]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[811]);
                    			}

                    // Xmu.g:4741:4: ( (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==30) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // Xmu.g:4742:5: (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) )
                    	    {
                    	    // Xmu.g:4742:5: (a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement ) )
                    	    // Xmu.g:4743:6: a4= ';' (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement )
                    	    {
                    	    a4=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4495); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_2_0_0_2_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[812]);
                    	    					}

                    	    // Xmu.g:4757:6: (a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement )
                    	    // Xmu.g:4758:7: a5_0= parse_edu_ustb_sei_mde_xmu_UpdatedStatement
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4529);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu_UpdatedStatement();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.SWITCH_STATEMENT__WHEN, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_2_0_0_2_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[813]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[814]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[815]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[816]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[817]);
            	}

            a6=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4603); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[820]);
            	}

            // Xmu.g:4815:2: ( (a7_0= parse_edu_ustb_sei_mde_xmu_CaseSubStatement ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==41) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // Xmu.g:4816:3: (a7_0= parse_edu_ustb_sei_mde_xmu_CaseSubStatement )
            	    {
            	    // Xmu.g:4816:3: (a7_0= parse_edu_ustb_sei_mde_xmu_CaseSubStatement )
            	    // Xmu.g:4817:4: a7_0= parse_edu_ustb_sei_mde_xmu_CaseSubStatement
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_CaseSubStatement_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4626);
            	    a7_0=parse_edu_ustb_sei_mde_xmu_CaseSubStatement();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a7_0 != null) {
            	    					if (a7_0 != null) {
            	    						Object value = a7_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.SWITCH_STATEMENT__CASES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_4, a7_0, true);
            	    					copyLocalizationInfos(a7_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[823]);
            	}

            a8=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4652); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_23_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[824]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[825]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[826]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[827]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[828]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[829]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[830]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_edu_ustb_sei_mde_xmu_SwitchStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_SwitchStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_CasePatternStatement"
    // Xmu.g:4867:1: parse_edu_ustb_sei_mde_xmu_CasePatternStatement returns [edu.ustb.sei.mde.xmu.CasePatternStatement element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ;
    public final edu.ustb.sei.mde.xmu.CasePatternStatement parse_edu_ustb_sei_mde_xmu_CasePatternStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.CasePatternStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_CasePatternStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xmu.g:4870:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) )
            // Xmu.g:4871:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4681); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCasePatternStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_24_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[831]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[832]);
            	}

            // Xmu.g:4886:2: (a1_0= parse_edu_ustb_sei_mde_xmu_Pattern )
            // Xmu.g:4887:3: a1_0= parse_edu_ustb_sei_mde_xmu_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Pattern_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4699);
            a1_0=parse_edu_ustb_sei_mde_xmu_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCasePatternStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.CASE_PATTERN_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_24_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[833]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4717); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCasePatternStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_24_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[834]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[835]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[836]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[837]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[838]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[839]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[840]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[841]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCasePatternStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[842]);
            	}

            // Xmu.g:4934:2: (a3_0= parse_edu_ustb_sei_mde_xmu_Statement )
            // Xmu.g:4935:3: a3_0= parse_edu_ustb_sei_mde_xmu_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4735);
            a3_0=parse_edu_ustb_sei_mde_xmu_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCasePatternStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.CASE_PATTERN_STATEMENT__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_24_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[843]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[845]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_edu_ustb_sei_mde_xmu_CasePatternStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_CasePatternStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_CaseValueStatement"
    // Xmu.g:4964:1: parse_edu_ustb_sei_mde_xmu_CaseValueStatement returns [edu.ustb.sei.mde.xmu.CaseValueStatement element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu_Expr ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) ;
    public final edu.ustb.sei.mde.xmu.CaseValueStatement parse_edu_ustb_sei_mde_xmu_CaseValueStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.CaseValueStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_CaseValueStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu.Expr a1_0 =null;

        edu.ustb.sei.mde.xmu.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xmu.g:4967:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu_Expr ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement ) )
            // Xmu.g:4968:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu_Expr ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu_Statement )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4768); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCaseValueStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_25_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[846]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[847]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[848]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[849]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[853]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[854]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[855]);
            	}

            // Xmu.g:4991:2: (a1_0= parse_edu_ustb_sei_mde_xmu_Expr )
            // Xmu.g:4992:3: a1_0= parse_edu_ustb_sei_mde_xmu_Expr
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4786);
            a1_0=parse_edu_ustb_sei_mde_xmu_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCaseValueStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.CASE_VALUE_STATEMENT__EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_25_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[856]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4804); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCaseValueStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_25_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[863]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[864]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getCaseValueStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[865]);
            	}

            // Xmu.g:5039:2: (a3_0= parse_edu_ustb_sei_mde_xmu_Statement )
            // Xmu.g:5040:3: a3_0= parse_edu_ustb_sei_mde_xmu_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4822);
            a3_0=parse_edu_ustb_sei_mde_xmu_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createCaseValueStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.CASE_VALUE_STATEMENT__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_25_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[866]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[868]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_edu_ustb_sei_mde_xmu_CaseValueStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_CaseValueStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_RuleCallStatement"
    // Xmu.g:5069:1: parse_edu_ustb_sei_mde_xmu_RuleCallStatement returns [edu.ustb.sei.mde.xmu.RuleCallStatement element = null] : (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )? a5= ')' ;
    public final edu.ustb.sei.mde.xmu.RuleCallStatement parse_edu_ustb_sei_mde_xmu_RuleCallStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RuleCallStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_RuleCallStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu.Expr a2_0 =null;

        edu.ustb.sei.mde.xmu.Expr a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xmu.g:5072:2: ( (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )? a5= ')' )
            // Xmu.g:5073:2: (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )? a5= ')'
            {
            // Xmu.g:5073:2: (a0= NAME )
            // Xmu.g:5074:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4859); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRuleCallStatement();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RULE_CALL_STATEMENT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.Rule proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.RuleCallStatement, edu.ustb.sei.mde.xmu.Rule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getRuleCallStatementRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RULE_CALL_STATEMENT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RULE_CALL_STATEMENT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_26_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[869]);
            	}

            a1=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4880); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_26_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[870]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[871]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[872]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[873]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[874]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[875]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[876]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[879]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[880]);
            	}

            // Xmu.g:5137:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==BOOLEAN||(LA42_0 >= NAME && LA42_0 <= OBJ_URI)||LA42_0==QUOTED_39_39_92||LA42_0==17||LA42_0==23||LA42_0==42||(LA42_0 >= 50 && LA42_0 <= 52)||LA42_0==57||LA42_0==65) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // Xmu.g:5138:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* )
                    {
                    // Xmu.g:5138:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )* )
                    // Xmu.g:5139:4: (a2_0= parse_edu_ustb_sei_mde_xmu_Expr ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )*
                    {
                    // Xmu.g:5139:4: (a2_0= parse_edu_ustb_sei_mde_xmu_Expr )
                    // Xmu.g:5140:5: a2_0= parse_edu_ustb_sei_mde_xmu_Expr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4909);
                    a2_0=parse_edu_ustb_sei_mde_xmu_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRuleCallStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.RULE_CALL_STATEMENT__ACTUAL_PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_26_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[881]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[882]);
                    			}

                    // Xmu.g:5166:4: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==22) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // Xmu.g:5167:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) )
                    	    {
                    	    // Xmu.g:5167:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr ) )
                    	    // Xmu.g:5168:6: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu_Expr )
                    	    {
                    	    a3=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4950); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRuleCallStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_26_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[883]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[884]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[885]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[886]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[887]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[888]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[889]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[890]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[891]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[892]);
                    	    					}

                    	    // Xmu.g:5191:6: (a4_0= parse_edu_ustb_sei_mde_xmu_Expr )
                    	    // Xmu.g:5192:7: a4_0= parse_edu_ustb_sei_mde_xmu_Expr
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4984);
                    	    a4_0=parse_edu_ustb_sei_mde_xmu_Expr();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRuleCallStatement();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a4_0 != null) {
                    	    								if (a4_0 != null) {
                    	    									Object value = a4_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.RULE_CALL_STATEMENT__ACTUAL_PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_26_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	    								copyLocalizationInfos(a4_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[893]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[894]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[895]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[896]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[897]);
            	}

            a5=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement5058); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_26_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[900]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[901]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[902]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[903]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[904]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_edu_ustb_sei_mde_xmu_RuleCallStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_RuleCallStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_UpdatePattern"
    // Xmu.g:5255:1: parse_edu_ustb_sei_mde_xmu_UpdatePattern returns [edu.ustb.sei.mde.xmu.UpdatePattern element = null] : a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu_PatternNode ) ;
    public final edu.ustb.sei.mde.xmu.UpdatePattern parse_edu_ustb_sei_mde_xmu_UpdatePattern() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UpdatePattern element =  null;

        int parse_edu_ustb_sei_mde_xmu_UpdatePattern_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu.PatternNode a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xmu.g:5258:2: (a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu_PatternNode ) )
            // Xmu.g:5259:2: a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu_PatternNode )
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu_UpdatePattern5087); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatePattern();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_27_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUpdatePattern(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[905]);
            	}

            // Xmu.g:5273:2: (a1_0= parse_edu_ustb_sei_mde_xmu_PatternNode )
            // Xmu.g:5274:3: a1_0= parse_edu_ustb_sei_mde_xmu_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternNode_in_parse_edu_ustb_sei_mde_xmu_UpdatePattern5105);
            a1_0=parse_edu_ustb_sei_mde_xmu_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUpdatePattern();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UPDATE_PATTERN__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_27_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[906]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[907]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[908]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[911]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[912]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[913]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[914]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_edu_ustb_sei_mde_xmu_UpdatePattern_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_UpdatePattern"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_DeleteNode"
    // Xmu.g:5309:1: parse_edu_ustb_sei_mde_xmu_DeleteNode returns [edu.ustb.sei.mde.xmu.DeleteNode element = null] : a0= 'delete' (a1= NAME ) ;
    public final edu.ustb.sei.mde.xmu.DeleteNode parse_edu_ustb_sei_mde_xmu_DeleteNode() throws RecognitionException {
        edu.ustb.sei.mde.xmu.DeleteNode element =  null;

        int parse_edu_ustb_sei_mde_xmu_DeleteNode_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xmu.g:5312:2: (a0= 'delete' (a1= NAME ) )
            // Xmu.g:5313:2: a0= 'delete' (a1= NAME )
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu_DeleteNode5138); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteNode();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_28_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[915]);
            	}

            // Xmu.g:5327:2: (a1= NAME )
            // Xmu.g:5328:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteNode5156); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteNode();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_NODE__VARIABLE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.ObjectVariable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.DeleteNode, edu.ustb.sei.mde.xmu.ObjectVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getDeleteNodeVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_NODE__VARIABLE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_NODE__VARIABLE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_28_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[916]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[917]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[919]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[920]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[922]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_edu_ustb_sei_mde_xmu_DeleteNode_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_DeleteNode"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_DeleteLink"
    // Xmu.g:5375:1: parse_edu_ustb_sei_mde_xmu_DeleteLink returns [edu.ustb.sei.mde.xmu.DeleteLink element = null] : a0= 'delete' (a1= NAME ) a2= '.' (a3= NAME ) a4= '=' (a5= NAME ) ;
    public final edu.ustb.sei.mde.xmu.DeleteLink parse_edu_ustb_sei_mde_xmu_DeleteLink() throws RecognitionException {
        edu.ustb.sei.mde.xmu.DeleteLink element =  null;

        int parse_edu_ustb_sei_mde_xmu_DeleteLink_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xmu.g:5378:2: (a0= 'delete' (a1= NAME ) a2= '.' (a3= NAME ) a4= '=' (a5= NAME ) )
            // Xmu.g:5379:2: a0= 'delete' (a1= NAME ) a2= '.' (a3= NAME ) a4= '=' (a5= NAME )
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5192); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteLink();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_29_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[923]);
            	}

            // Xmu.g:5393:2: (a1= NAME )
            // Xmu.g:5394:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5210); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteLink();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__SOURCE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.ObjectVariable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.DeleteLink, edu.ustb.sei.mde.xmu.ObjectVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getDeleteLinkSourceReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__SOURCE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__SOURCE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_29_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[924]);
            	}

            a2=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5231); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteLink();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_29_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[925]);
            	}

            // Xmu.g:5447:2: (a3= NAME )
            // Xmu.g:5448:3: a3= NAME
            {
            a3=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5249); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteLink();
            				startIncompleteElement(element);
            			}
            			if (a3 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.DeleteLink, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getDeleteLinkFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_29_0_0_3, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[926]);
            	}

            a4=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5270); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteLink();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_29_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[927]);
            	}

            // Xmu.g:5501:2: (a5= NAME )
            // Xmu.g:5502:3: a5= NAME
            {
            a5=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5288); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createDeleteLink();
            				startIncompleteElement(element);
            			}
            			if (a5 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__TARGET), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.Variable proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectVariable();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.DeleteLink, edu.ustb.sei.mde.xmu.Variable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getDeleteLinkTargetReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__TARGET), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.DELETE_LINK__TARGET), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_29_0_0_5, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[934]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_edu_ustb_sei_mde_xmu_DeleteLink_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_DeleteLink"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_BooleanOrExpr"
    // Xmu.g:5549:1: parse_edu_ustb_sei_mde_xmu_BooleanOrExpr returns [edu.ustb.sei.mde.xmu.BooleanOrExpr element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a0_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ ;
    public final edu.ustb.sei.mde.xmu.BooleanOrExpr parse_edu_ustb_sei_mde_xmu_BooleanOrExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanOrExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu.BooleanAndExpr a0_0 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr a0_1 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a0_2 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a0_3 =null;

        edu.ustb.sei.mde.xmu.BooleanAndExpr a2_0 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr a2_1 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a2_2 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a2_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xmu.g:5552:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a0_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ )
            // Xmu.g:5553:2: (a0_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a0_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            {
            // Xmu.g:5553:2: (a0_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a0_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt43=4;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA43_1 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (synpred60_Xmu()) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA43_2 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (synpred60_Xmu()) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA43_3 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA43_4 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA43_5 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA43_6 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA43_7 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA43_8 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA43_9 = input.LA(2);

                if ( (synpred58_Xmu()) ) {
                    alt43=1;
                }
                else if ( (synpred59_Xmu()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }

            switch (alt43) {
                case 1 :
                    // Xmu.g:5554:3: a0_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5328);
                    a0_0=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:5573:6: a0_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5342);
                    a0_1=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:5592:6: a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5356);
                    a0_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu.g:5611:6: a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5370);
                    a0_3=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[935]);
            	}

            // Xmu.g:5636:2: ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            int cnt45=0;
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==53) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // Xmu.g:5637:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    {
            	    // Xmu.g:5637:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    // Xmu.g:5638:4: a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    {
            	    a1=(Token)match(input,53,FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5397); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[936]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[937]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[938]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[939]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[940]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[941]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[942]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanOrExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[943]);
            	    			}

            	    // Xmu.g:5659:4: (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    int alt44=4;
            	    switch ( input.LA(1) ) {
            	    case 51:
            	        {
            	        int LA44_1 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (synpred63_Xmu()) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 23:
            	        {
            	        int LA44_2 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (synpred63_Xmu()) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA44_3 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA44_4 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 52:
            	        {
            	        int LA44_5 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 50:
            	        {
            	        int LA44_6 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA44_7 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA44_8 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 17:
            	        {
            	        int LA44_9 = input.LA(2);

            	        if ( (synpred61_Xmu()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred62_Xmu()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt44) {
            	        case 1 :
            	            // Xmu.g:5660:5: a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5423);
            	            a2_0=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:5679:10: a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5443);
            	            a2_1=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu.g:5698:10: a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5463);
            	            a2_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu.g:5717:10: a2_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5483);
            	            a2_3=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanOrExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_OR_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_30_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[944]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[945]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[946]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[947]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[948]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[949]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[950]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[951]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[952]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[953]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[954]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[955]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[956]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[957]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[958]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[959]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt45 >= 1 ) break loop45;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(45, input);
                        throw eee;
                }
                cnt45++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[961]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[962]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[975]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_BooleanOrExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_BooleanAndExpr"
    // Xmu.g:5781:1: parse_edu_ustb_sei_mde_xmu_BooleanAndExpr returns [edu.ustb.sei.mde.xmu.BooleanAndExpr element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ ;
    public final edu.ustb.sei.mde.xmu.BooleanAndExpr parse_edu_ustb_sei_mde_xmu_BooleanAndExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu.RelationalExpr a0_0 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr a0_1 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a0_2 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a0_3 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a0_4 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr a2_0 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr a2_1 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a2_2 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a2_3 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a2_4 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xmu.g:5784:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ )
            // Xmu.g:5785:2: (a0_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            {
            // Xmu.g:5785:2: (a0_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt46=5;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA46_1 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (synpred68_Xmu()) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA46_2 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (synpred68_Xmu()) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA46_3 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA46_4 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA46_5 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA46_6 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA46_7 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA46_8 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA46_9 = input.LA(2);

                if ( (synpred65_Xmu()) ) {
                    alt46=1;
                }
                else if ( (synpred66_Xmu()) ) {
                    alt46=2;
                }
                else if ( (synpred67_Xmu()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }

            switch (alt46) {
                case 1 :
                    // Xmu.g:5786:3: a0_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5543);
                    a0_0=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:5805:6: a0_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5557);
                    a0_1=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:5824:6: a0_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5571);
                    a0_2=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu.g:5843:6: a0_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5585);
                    a0_3=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu.g:5862:6: a0_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5599);
                    a0_4=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[976]);
            	}

            // Xmu.g:5887:2: ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            int cnt48=0;
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==39) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // Xmu.g:5888:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    {
            	    // Xmu.g:5888:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    // Xmu.g:5889:4: a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    {
            	    a1=(Token)match(input,39,FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5626); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[977]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[978]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[979]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[980]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[981]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[982]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[983]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getBooleanAndExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[984]);
            	    			}

            	    // Xmu.g:5910:4: (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    int alt47=5;
            	    switch ( input.LA(1) ) {
            	    case 51:
            	        {
            	        int LA47_1 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (synpred72_Xmu()) ) {
            	            alt47=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 23:
            	        {
            	        int LA47_2 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (synpred72_Xmu()) ) {
            	            alt47=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA47_3 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (true) ) {
            	            alt47=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA47_4 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (true) ) {
            	            alt47=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 52:
            	        {
            	        int LA47_5 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (true) ) {
            	            alt47=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 50:
            	        {
            	        int LA47_6 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (true) ) {
            	            alt47=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA47_7 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (true) ) {
            	            alt47=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA47_8 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (true) ) {
            	            alt47=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 17:
            	        {
            	        int LA47_9 = input.LA(2);

            	        if ( (synpred69_Xmu()) ) {
            	            alt47=1;
            	        }
            	        else if ( (synpred70_Xmu()) ) {
            	            alt47=2;
            	        }
            	        else if ( (synpred71_Xmu()) ) {
            	            alt47=3;
            	        }
            	        else if ( (true) ) {
            	            alt47=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 47, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt47) {
            	        case 1 :
            	            // Xmu.g:5911:5: a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5652);
            	            a2_0=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:5930:10: a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5672);
            	            a2_1=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu.g:5949:10: a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5692);
            	            a2_2=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu.g:5968:10: a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5712);
            	            a2_3=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu.g:5987:10: a2_4= parse_edu_ustb_sei_mde_xmu_AtomicExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5732);
            	            a2_4=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createBooleanAndExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.BOOLEAN_AND_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_31_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[985]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[986]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[987]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[988]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[989]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[990]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[991]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[992]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[993]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[994]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[995]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[996]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[997]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[998]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[999]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1000]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1001]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt48 >= 1 ) break loop48;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(48, input);
                        throw eee;
                }
                cnt48++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1002]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1003]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1004]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1005]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1006]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1007]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1008]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1009]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1010]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1011]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1012]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1013]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1014]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1015]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1016]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1017]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1018]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_BooleanAndExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_RelationalExpr"
    // Xmu.g:6053:1: parse_edu_ustb_sei_mde_xmu_RelationalExpr returns [edu.ustb.sei.mde.xmu.RelationalExpr element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a8_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a8_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a8_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ;
    public final edu.ustb.sei.mde.xmu.RelationalExpr parse_edu_ustb_sei_mde_xmu_RelationalExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_RelationalExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu.AdditiveExpr a0_0 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a0_1 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a0_2 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a0_3 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr a8_0 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a8_1 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a8_2 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a8_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xmu.g:6056:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a8_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a8_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a8_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            // Xmu.g:6057:2: (a0_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a8_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a8_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a8_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            {
            // Xmu.g:6057:2: (a0_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a0_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt49=4;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA49_1 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (synpred76_Xmu()) ) {
                    alt49=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA49_2 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (synpred76_Xmu()) ) {
                    alt49=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA49_3 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA49_4 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA49_5 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA49_6 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA49_7 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA49_8 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA49_9 = input.LA(2);

                if ( (synpred74_Xmu()) ) {
                    alt49=1;
                }
                else if ( (synpred75_Xmu()) ) {
                    alt49=2;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;

            }

            switch (alt49) {
                case 1 :
                    // Xmu.g:6058:3: a0_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5792);
                    a0_0=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:6077:6: a0_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5806);
                    a0_1=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:6096:6: a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5820);
                    a0_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu.g:6115:6: a0_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5834);
                    a0_3=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1019]);
            	}

            // Xmu.g:6140:2: ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xmu.g:6141:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xmu.g:6141:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt50=5;
            switch ( input.LA(1) ) {
            case 34:
                {
                alt50=1;
                }
                break;
            case 31:
                {
                alt50=2;
                }
                break;
            case 33:
                {
                alt50=3;
                }
                break;
            case 35:
                {
                alt50=4;
                }
                break;
            case 36:
                {
                alt50=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }

            switch (alt50) {
                case 1 :
                    // Xmu.g:6142:4: a1= '='
                    {
                    a1=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5861); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.RelationalOperator.EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu.g:6155:8: a2= '<'
                    {
                    a2=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5876); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.RelationalOperator.LESS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu.g:6168:8: a3= '<='
                    {
                    a3=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5891); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.RelationalOperator.LESS_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu.g:6181:8: a4= '>'
                    {
                    a4=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5906); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.RelationalOperator.GREATER_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xmu.g:6194:8: a5= '>='
                    {
                    a5=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5921); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.RelationalOperator.GREATER_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1020]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1021]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1022]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1023]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1024]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1025]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1026]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getRelationalExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1027]);
            	}

            // Xmu.g:6221:2: (a8_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a8_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a8_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a8_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt51=4;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA51_1 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (synpred83_Xmu()) ) {
                    alt51=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA51_2 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (synpred83_Xmu()) ) {
                    alt51=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA51_3 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (true) ) {
                    alt51=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA51_4 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (true) ) {
                    alt51=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA51_5 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (true) ) {
                    alt51=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA51_6 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (true) ) {
                    alt51=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA51_7 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (true) ) {
                    alt51=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA51_8 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (true) ) {
                    alt51=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA51_9 = input.LA(2);

                if ( (synpred81_Xmu()) ) {
                    alt51=1;
                }
                else if ( (synpred82_Xmu()) ) {
                    alt51=2;
                }
                else if ( (true) ) {
                    alt51=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;

            }

            switch (alt51) {
                case 1 :
                    // Xmu.g:6222:3: a8_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5946);
                    a8_0=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_2, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:6241:6: a8_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5960);
                    a8_1=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_2, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:6260:6: a8_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5974);
                    a8_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_2, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu.g:6279:6: a8_3= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5988);
                    a8_3=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createRelationalExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.RELATIONAL_EXPR__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_32_0_0_2, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1028]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1029]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1030]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1031]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1033]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1034]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1043]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1044]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_edu_ustb_sei_mde_xmu_RelationalExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_RelationalExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_AdditiveExpr"
    // Xmu.g:6322:1: parse_edu_ustb_sei_mde_xmu_AdditiveExpr returns [edu.ustb.sei.mde.xmu.AdditiveExpr element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ ;
    public final edu.ustb.sei.mde.xmu.AdditiveExpr parse_edu_ustb_sei_mde_xmu_AdditiveExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_AdditiveExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a0_0 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a0_1 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a0_2 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a6_0 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a6_1 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a6_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xmu.g:6325:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ )
            // Xmu.g:6326:2: (a0_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            {
            // Xmu.g:6326:2: (a0_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a0_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt52=3;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA52_1 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (synpred85_Xmu()) ) {
                    alt52=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA52_2 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (synpred85_Xmu()) ) {
                    alt52=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA52_3 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA52_4 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA52_5 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA52_6 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA52_7 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA52_8 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA52_9 = input.LA(2);

                if ( (synpred84_Xmu()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }

            switch (alt52) {
                case 1 :
                    // Xmu.g:6327:3: a0_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6025);
                    a0_0=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:6346:6: a0_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6039);
                    a0_1=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:6365:6: a0_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6053);
                    a0_2=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1045]);
            	}

            // Xmu.g:6390:2: ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            int cnt55=0;
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( ((LA55_0 >= 20 && LA55_0 <= 21)||LA55_0==23) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // Xmu.g:6391:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    {
            	    // Xmu.g:6391:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    // Xmu.g:6392:4: ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    {
            	    // Xmu.g:6392:4: ( (a1= '+' |a2= '-' |a3= '++' ) )
            	    // Xmu.g:6393:5: (a1= '+' |a2= '-' |a3= '++' )
            	    {
            	    // Xmu.g:6393:5: (a1= '+' |a2= '-' |a3= '++' )
            	    int alt53=3;
            	    switch ( input.LA(1) ) {
            	    case 20:
            	        {
            	        alt53=1;
            	        }
            	        break;
            	    case 23:
            	        {
            	        alt53=2;
            	        }
            	        break;
            	    case 21:
            	        {
            	        alt53=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 53, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt53) {
            	        case 1 :
            	            // Xmu.g:6394:6: a1= '+'
            	            {
            	            a1=(Token)match(input,20,FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6093); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.AdditiveOperator.ADD_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:6407:12: a2= '-'
            	            {
            	            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6112); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.AdditiveOperator.SUB_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu.g:6420:12: a3= '++'
            	            {
            	            a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6131); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.AdditiveOperator.APPEND_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1046]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1047]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1048]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1049]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1050]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1051]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1052]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getAdditiveExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1053]);
            	    			}

            	    // Xmu.g:6447:4: (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    int alt54=3;
            	    switch ( input.LA(1) ) {
            	    case 51:
            	        {
            	        int LA54_1 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred89_Xmu()) ) {
            	            alt54=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 23:
            	        {
            	        int LA54_2 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred89_Xmu()) ) {
            	            alt54=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA54_3 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (true) ) {
            	            alt54=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA54_4 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (true) ) {
            	            alt54=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 52:
            	        {
            	        int LA54_5 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (true) ) {
            	            alt54=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 50:
            	        {
            	        int LA54_6 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (true) ) {
            	            alt54=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA54_7 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (true) ) {
            	            alt54=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA54_8 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (true) ) {
            	            alt54=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 17:
            	        {
            	        int LA54_9 = input.LA(2);

            	        if ( (synpred88_Xmu()) ) {
            	            alt54=1;
            	        }
            	        else if ( (true) ) {
            	            alt54=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 54, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt54) {
            	        case 1 :
            	            // Xmu.g:6448:5: a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6168);
            	            a6_0=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_0 != null) {
            	            						if (a6_0 != null) {
            	            							Object value = a6_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_1_0_0_1, a6_0, true);
            	            						copyLocalizationInfos(a6_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:6467:10: a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6188);
            	            a6_1=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_1 != null) {
            	            						if (a6_1 != null) {
            	            							Object value = a6_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_1_0_0_1, a6_1, true);
            	            						copyLocalizationInfos(a6_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu.g:6486:10: a6_2= parse_edu_ustb_sei_mde_xmu_AtomicExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6208);
            	            a6_2=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAdditiveExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_2 != null) {
            	            						if (a6_2 != null) {
            	            							Object value = a6_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.ADDITIVE_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_33_0_0_1_0_0_1, a6_2, true);
            	            						copyLocalizationInfos(a6_2, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1054]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1055]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1056]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1057]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1058]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1059]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1060]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1061]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1062]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1063]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1064]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1065]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1066]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1067]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1068]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1069]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1070]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1071]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt55 >= 1 ) break loop55;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(55, input);
                        throw eee;
                }
                cnt55++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1072]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1073]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1074]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1075]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1076]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1077]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1078]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1079]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1080]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1081]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1082]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1083]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1084]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1085]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1086]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1087]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1088]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1089]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_edu_ustb_sei_mde_xmu_AdditiveExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_AdditiveExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr"
    // Xmu.g:6554:1: parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr returns [edu.ustb.sei.mde.xmu.MultiplicativeExpr element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ ;
    public final edu.ustb.sei.mde.xmu.MultiplicativeExpr parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu.UnaryExpr a0_0 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a0_1 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a5_0 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a5_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xmu.g:6557:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+ )
            // Xmu.g:6558:2: (a0_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            {
            // Xmu.g:6558:2: (a0_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a0_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==23||LA56_0==51) ) {
                alt56=1;
            }
            else if ( (LA56_0==BOOLEAN||(LA56_0 >= NAME && LA56_0 <= NUMBER)||LA56_0==QUOTED_39_39_92||LA56_0==17||LA56_0==50||LA56_0==52) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;

            }
            switch (alt56) {
                case 1 :
                    // Xmu.g:6559:3: a0_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6268);
                    a0_0=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createMultiplicativeExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.MULTIPLICATIVE_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_34_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:6578:6: a0_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6282);
                    a0_1=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createMultiplicativeExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.MULTIPLICATIVE_EXPR__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_34_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1090]);
            	}

            // Xmu.g:6603:2: ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ) )+
            int cnt59=0;
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==19||LA59_0==26) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // Xmu.g:6604:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    {
            	    // Xmu.g:6604:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            	    // Xmu.g:6605:4: ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    {
            	    // Xmu.g:6605:4: ( (a1= '*' |a2= '/' ) )
            	    // Xmu.g:6606:5: (a1= '*' |a2= '/' )
            	    {
            	    // Xmu.g:6606:5: (a1= '*' |a2= '/' )
            	    int alt57=2;
            	    int LA57_0 = input.LA(1);

            	    if ( (LA57_0==19) ) {
            	        alt57=1;
            	    }
            	    else if ( (LA57_0==26) ) {
            	        alt57=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt57) {
            	        case 1 :
            	            // Xmu.g:6607:6: a1= '*'
            	            {
            	            a1=(Token)match(input,19,FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6322); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_34_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.MultiplicativeOperator.MUL_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.MULTIPLICATIVE_EXPR__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:6620:12: a2= '/'
            	            {
            	            a2=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6341); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_34_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.MultiplicativeOperator.DIV_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.MULTIPLICATIVE_EXPR__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1091]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1092]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1093]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1094]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1095]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1096]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1097]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getMultiplicativeExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1098]);
            	    			}

            	    // Xmu.g:6647:4: (a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            	    int alt58=2;
            	    int LA58_0 = input.LA(1);

            	    if ( (LA58_0==23||LA58_0==51) ) {
            	        alt58=1;
            	    }
            	    else if ( (LA58_0==BOOLEAN||(LA58_0 >= NAME && LA58_0 <= NUMBER)||LA58_0==QUOTED_39_39_92||LA58_0==17||LA58_0==50||LA58_0==52) ) {
            	        alt58=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 58, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt58) {
            	        case 1 :
            	            // Xmu.g:6648:5: a5_0= parse_edu_ustb_sei_mde_xmu_UnaryExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6378);
            	            a5_0=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createMultiplicativeExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_0 != null) {
            	            						if (a5_0 != null) {
            	            							Object value = a5_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.MULTIPLICATIVE_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_34_0_0_1_0_0_1, a5_0, true);
            	            						copyLocalizationInfos(a5_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:6667:10: a5_1= parse_edu_ustb_sei_mde_xmu_AtomicExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6398);
            	            a5_1=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createMultiplicativeExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_1 != null) {
            	            						if (a5_1 != null) {
            	            							Object value = a5_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.MULTIPLICATIVE_EXPR__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_34_0_0_1_0_0_1, a5_1, true);
            	            						copyLocalizationInfos(a5_1, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1099]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1100]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1101]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1102]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1103]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1104]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1105]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1106]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1107]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1108]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1109]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1110]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1111]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1112]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1113]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1114]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1115]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1116]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1117]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt59 >= 1 ) break loop59;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(59, input);
                        throw eee;
                }
                cnt59++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1124]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1126]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1127]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1128]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1129]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1130]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1131]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1132]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1133]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1134]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1135]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1136]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_ParenExpr"
    // Xmu.g:6737:1: parse_edu_ustb_sei_mde_xmu_ParenExpr returns [edu.ustb.sei.mde.xmu.ParenExpr element = null] : a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a2= ')' ;
    public final edu.ustb.sei.mde.xmu.ParenExpr parse_edu_ustb_sei_mde_xmu_ParenExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.ParenExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_ParenExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu.BooleanOrExpr a1_0 =null;

        edu.ustb.sei.mde.xmu.BooleanAndExpr a1_1 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr a1_2 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr a1_3 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a1_4 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a1_5 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a1_6 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xmu.g:6740:2: (a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a2= ')' )
            // Xmu.g:6741:2: a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) a2= ')'
            {
            a0=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6454); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1137]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1138]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1139]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1140]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1141]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1142]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1143]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getParenExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1144]);
            	}

            // Xmu.g:6762:2: (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt60=7;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA60_1 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (synpred100_Xmu()) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA60_2 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (synpred100_Xmu()) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA60_3 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA60_4 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA60_5 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA60_6 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA60_7 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA60_8 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA60_9 = input.LA(2);

                if ( (synpred95_Xmu()) ) {
                    alt60=1;
                }
                else if ( (synpred96_Xmu()) ) {
                    alt60=2;
                }
                else if ( (synpred97_Xmu()) ) {
                    alt60=3;
                }
                else if ( (synpred98_Xmu()) ) {
                    alt60=4;
                }
                else if ( (synpred99_Xmu()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;

            }

            switch (alt60) {
                case 1 :
                    // Xmu.g:6763:3: a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6472);
                    a1_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PAREN_EXPR__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:6782:6: a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6486);
                    a1_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PAREN_EXPR__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:6801:6: a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6500);
                    a1_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PAREN_EXPR__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu.g:6820:6: a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6514);
                    a1_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PAREN_EXPR__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu.g:6839:6: a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6528);
                    a1_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PAREN_EXPR__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu.g:6858:6: a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6542);
                    a1_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PAREN_EXPR__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu.g:6877:6: a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6556);
                    a1_6=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_6 != null) {
                    				if (a1_6 != null) {
                    					Object value = a1_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PAREN_EXPR__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_1, a1_6, true);
                    				copyLocalizationInfos(a1_6, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1145]);
            	}

            a2=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6574); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createParenExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_35_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1146]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1147]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1148]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1149]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1150]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1151]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1152]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1153]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1154]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1155]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1156]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1157]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1158]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1159]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1160]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1161]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1162]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1163]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1164]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1165]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1166]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1167]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_edu_ustb_sei_mde_xmu_ParenExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_ParenExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_UnaryExpr"
    // Xmu.g:6939:1: parse_edu_ustb_sei_mde_xmu_UnaryExpr returns [edu.ustb.sei.mde.xmu.UnaryExpr element = null] : ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ;
    public final edu.ustb.sei.mde.xmu.UnaryExpr parse_edu_ustb_sei_mde_xmu_UnaryExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_UnaryExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu.AtomicExpr a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xmu.g:6942:2: ( ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            // Xmu.g:6943:2: ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            {
            // Xmu.g:6943:2: ( (a0= 'not' |a1= '-' ) )
            // Xmu.g:6944:3: (a0= 'not' |a1= '-' )
            {
            // Xmu.g:6944:3: (a0= 'not' |a1= '-' )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==51) ) {
                alt61=1;
            }
            else if ( (LA61_0==23) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;

            }
            switch (alt61) {
                case 1 :
                    // Xmu.g:6945:4: a0= 'not'
                    {
                    a0=(Token)match(input,51,FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu_UnaryExpr6612); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUnaryExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_36_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.UnaryOperator.NOT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UNARY_EXPR__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu.g:6958:8: a1= '-'
                    {
                    a1=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu_UnaryExpr6627); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUnaryExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_36_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu.UnaryOperator.MINUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UNARY_EXPR__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1168]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1169]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1170]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1171]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1172]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1173]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getUnaryExpr(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1174]);
            	}

            // Xmu.g:6984:2: (a4_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            // Xmu.g:6985:3: a4_0= parse_edu_ustb_sei_mde_xmu_AtomicExpr
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_UnaryExpr6652);
            a4_0=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createUnaryExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.UNARY_EXPR__BODY), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_36_0_0_1, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1175]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1176]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1177]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1178]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1179]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1180]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1181]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1182]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1183]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1184]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1185]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1186]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1187]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1188]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1189]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1190]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1191]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1192]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1193]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1194]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_edu_ustb_sei_mde_xmu_UnaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_UnaryExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_PrintStatement"
    // Xmu.g:7031:1: parse_edu_ustb_sei_mde_xmu_PrintStatement returns [edu.ustb.sei.mde.xmu.PrintStatement element = null] : a0= 'print' (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) ;
    public final edu.ustb.sei.mde.xmu.PrintStatement parse_edu_ustb_sei_mde_xmu_PrintStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.PrintStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_PrintStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu.BooleanOrExpr a1_0 =null;

        edu.ustb.sei.mde.xmu.BooleanAndExpr a1_1 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr a1_2 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr a1_3 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr a1_4 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr a1_5 =null;

        edu.ustb.sei.mde.xmu.AtomicExpr a1_6 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xmu.g:7034:2: (a0= 'print' (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr ) )
            // Xmu.g:7035:2: a0= 'print' (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6685); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1195]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1196]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1197]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1198]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1199]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1200]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1201]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getPrintStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1202]);
            	}

            // Xmu.g:7056:2: (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr |a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr |a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr )
            int alt62=7;
            switch ( input.LA(1) ) {
            case 51:
                {
                int LA62_1 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (synpred107_Xmu()) ) {
                    alt62=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA62_2 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (synpred107_Xmu()) ) {
                    alt62=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA62_3 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA62_4 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 4, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA62_5 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 5, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA62_6 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA62_7 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA62_8 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA62_9 = input.LA(2);

                if ( (synpred102_Xmu()) ) {
                    alt62=1;
                }
                else if ( (synpred103_Xmu()) ) {
                    alt62=2;
                }
                else if ( (synpred104_Xmu()) ) {
                    alt62=3;
                }
                else if ( (synpred105_Xmu()) ) {
                    alt62=4;
                }
                else if ( (synpred106_Xmu()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;

            }

            switch (alt62) {
                case 1 :
                    // Xmu.g:7057:3: a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6703);
                    a1_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRINT_STATEMENT__EXPR), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu.g:7076:6: a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6717);
                    a1_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRINT_STATEMENT__EXPR), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu.g:7095:6: a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6731);
                    a1_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRINT_STATEMENT__EXPR), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu.g:7114:6: a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6745);
                    a1_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRINT_STATEMENT__EXPR), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu.g:7133:6: a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6759);
                    a1_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRINT_STATEMENT__EXPR), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu.g:7152:6: a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6773);
                    a1_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRINT_STATEMENT__EXPR), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu.g:7171:6: a1_6= parse_edu_ustb_sei_mde_xmu_AtomicExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6787);
                    a1_6=parse_edu_ustb_sei_mde_xmu_AtomicExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createPrintStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_6 != null) {
                    				if (a1_6 != null) {
                    					Object value = a1_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.PRINT_STATEMENT__EXPR), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_37_0_0_1, a1_6, true);
                    				copyLocalizationInfos(a1_6, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1203]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1204]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1205]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1206]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1207]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1208]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1209]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_edu_ustb_sei_mde_xmu_PrintStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_PrintStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_AllInstanceExpr"
    // Xmu.g:7204:1: parse_edu_ustb_sei_mde_xmu_AllInstanceExpr returns [edu.ustb.sei.mde.xmu.AllInstanceExpr element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) a1= '//' (a2= NAME ) ;
    public final edu.ustb.sei.mde.xmu.AllInstanceExpr parse_edu_ustb_sei_mde_xmu_AllInstanceExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AllInstanceExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_AllInstanceExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu.StartRoot a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xmu.g:7207:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) a1= '//' (a2= NAME ) )
            // Xmu.g:7208:2: (a0_0= parse_edu_ustb_sei_mde_xmu_StartRoot ) a1= '//' (a2= NAME )
            {
            // Xmu.g:7208:2: (a0_0= parse_edu_ustb_sei_mde_xmu_StartRoot )
            // Xmu.g:7209:3: a0_0= parse_edu_ustb_sei_mde_xmu_StartRoot
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StartRoot_in_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr6824);
            a0_0=parse_edu_ustb_sei_mde_xmu_StartRoot();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAllInstanceExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ALL_INSTANCE_EXPR__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_38_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1210]);
            	}

            a1=(Token)match(input,27,FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr6842); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAllInstanceExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_38_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1211]);
            	}

            // Xmu.g:7248:2: (a2= NAME )
            // Xmu.g:7249:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr6860); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createAllInstanceExpr();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ALL_INSTANCE_EXPR__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClass proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.AllInstanceExpr, org.eclipse.emf.ecore.EClass>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getAllInstanceExprTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ALL_INSTANCE_EXPR__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.ALL_INSTANCE_EXPR__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_38_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1212]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1213]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1214]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1215]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1216]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_edu_ustb_sei_mde_xmu_AllInstanceExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_AllInstanceExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_InitialMappingStatement"
    // Xmu.g:7294:1: parse_edu_ustb_sei_mde_xmu_InitialMappingStatement returns [edu.ustb.sei.mde.xmu.InitialMappingStatement element = null] : ( (a0_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a0_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a0_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) )+ a1= '<->' (a2_0= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) ;
    public final edu.ustb.sei.mde.xmu.InitialMappingStatement parse_edu_ustb_sei_mde_xmu_InitialMappingStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.InitialMappingStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_InitialMappingStatement_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu.StringLiteral a0_0 =null;

        edu.ustb.sei.mde.xmu.IntegerLiteral a0_1 =null;

        edu.ustb.sei.mde.xmu.ObjectPathExpr a0_2 =null;

        edu.ustb.sei.mde.xmu.ObjectPathExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xmu.g:7297:2: ( ( (a0_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a0_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a0_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) )+ a1= '<->' (a2_0= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) )
            // Xmu.g:7298:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a0_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a0_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) )+ a1= '<->' (a2_0= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            {
            // Xmu.g:7298:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a0_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a0_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) )+
            int cnt64=0;
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0 >= NUMBER && LA64_0 <= OBJ_URI)||LA64_0==QUOTED_39_39_92) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // Xmu.g:7299:3: (a0_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a0_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a0_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            	    {
            	    // Xmu.g:7299:3: (a0_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a0_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a0_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            	    int alt63=3;
            	    switch ( input.LA(1) ) {
            	    case QUOTED_39_39_92:
            	        {
            	        alt63=1;
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        alt63=2;
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        alt63=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 63, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt63) {
            	        case 1 :
            	            // Xmu.g:7300:4: a0_0= parse_edu_ustb_sei_mde_xmu_StringLiteral
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6905);
            	            a0_0=parse_edu_ustb_sei_mde_xmu_StringLiteral();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createInitialMappingStatement();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a0_0 != null) {
            	            					if (a0_0 != null) {
            	            						Object value = a0_0;
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.INITIAL_MAPPING_STATEMENT__SOURCE, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_39_0_0_0, a0_0, true);
            	            					copyLocalizationInfos(a0_0, element);
            	            				}
            	            			}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:7319:8: a0_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6922);
            	            a0_1=parse_edu_ustb_sei_mde_xmu_IntegerLiteral();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createInitialMappingStatement();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a0_1 != null) {
            	            					if (a0_1 != null) {
            	            						Object value = a0_1;
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.INITIAL_MAPPING_STATEMENT__SOURCE, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_39_0_0_0, a0_1, true);
            	            					copyLocalizationInfos(a0_1, element);
            	            				}
            	            			}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu.g:7338:8: a0_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6939);
            	            a0_2=parse_edu_ustb_sei_mde_xmu_ObjectPathExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createInitialMappingStatement();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a0_2 != null) {
            	            					if (a0_2 != null) {
            	            						Object value = a0_2;
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.INITIAL_MAPPING_STATEMENT__SOURCE, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_39_0_0_0, a0_2, true);
            	            					copyLocalizationInfos(a0_2, element);
            	            				}
            	            			}

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt64 >= 1 ) break loop64;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(64, input);
                        throw eee;
                }
                cnt64++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1217]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1218]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1219]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1220]);
            	}

            a1=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6965); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createInitialMappingStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_39_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1221]);
            	}

            // Xmu.g:7381:2: (a2_0= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            // Xmu.g:7382:3: a2_0= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6983);
            a2_0=parse_edu_ustb_sei_mde_xmu_ObjectPathExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createInitialMappingStatement();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.INITIAL_MAPPING_STATEMENT__TARGET), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_39_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1222]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1223]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1224]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_edu_ustb_sei_mde_xmu_InitialMappingStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_InitialMappingStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_ObjectPathExpr"
    // Xmu.g:7411:1: parse_edu_ustb_sei_mde_xmu_ObjectPathExpr returns [edu.ustb.sei.mde.xmu.ObjectPathExpr element = null] : (a0= OBJ_URI ) ;
    public final edu.ustb.sei.mde.xmu.ObjectPathExpr parse_edu_ustb_sei_mde_xmu_ObjectPathExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.ObjectPathExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xmu.g:7414:2: ( (a0= OBJ_URI ) )
            // Xmu.g:7415:2: (a0= OBJ_URI )
            {
            // Xmu.g:7415:2: (a0= OBJ_URI )
            // Xmu.g:7416:3: a0= OBJ_URI
            {
            a0=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr7020); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createObjectPathExpr();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.OBJECT_PATH_EXPR__OBJECT), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EObject proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEObject();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.ObjectPathExpr, org.eclipse.emf.ecore.EObject>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectPathExprObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.OBJECT_PATH_EXPR__OBJECT), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.OBJECT_PATH_EXPR__OBJECT), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_40_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1225]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1226]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1227]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1228]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1229]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1230]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1231]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1232]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1233]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1234]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_ObjectPathExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_HelperMapping"
    // Xmu.g:7466:1: parse_edu_ustb_sei_mde_xmu_HelperMapping returns [edu.ustb.sei.mde.xmu.HelperMapping element = null] : (a0= NAME ) a1= ':' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) ) )+ a5= ';' ;
    public final edu.ustb.sei.mde.xmu.HelperMapping parse_edu_ustb_sei_mde_xmu_HelperMapping() throws RecognitionException {
        edu.ustb.sei.mde.xmu.HelperMapping element =  null;

        int parse_edu_ustb_sei_mde_xmu_HelperMapping_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu.StringLiteral a2_0 =null;

        edu.ustb.sei.mde.xmu.IntegerLiteral a2_1 =null;

        edu.ustb.sei.mde.xmu.ObjectPathExpr a2_2 =null;

        edu.ustb.sei.mde.xmu.StringLiteral a4_0 =null;

        edu.ustb.sei.mde.xmu.IntegerLiteral a4_1 =null;

        edu.ustb.sei.mde.xmu.ObjectPathExpr a4_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xmu.g:7469:2: ( (a0= NAME ) a1= ':' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) ) )+ a5= ';' )
            // Xmu.g:7470:2: (a0= NAME ) a1= ':' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) ) )+ a5= ';'
            {
            // Xmu.g:7470:2: (a0= NAME )
            // Xmu.g:7471:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7060); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1235]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7081); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1236]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1237]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1238]);
            	}

            // Xmu.g:7522:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) ) )+
            int cnt67=0;
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( ((LA67_0 >= NUMBER && LA67_0 <= OBJ_URI)||LA67_0==QUOTED_39_39_92) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // Xmu.g:7523:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) )
            	    {
            	    // Xmu.g:7523:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) )
            	    // Xmu.g:7524:4: (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr ) a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            	    {
            	    // Xmu.g:7524:4: (a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            	    int alt65=3;
            	    switch ( input.LA(1) ) {
            	    case QUOTED_39_39_92:
            	        {
            	        alt65=1;
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        alt65=2;
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        alt65=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 65, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt65) {
            	        case 1 :
            	            // Xmu.g:7525:5: a2_0= parse_edu_ustb_sei_mde_xmu_StringLiteral
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7110);
            	            a2_0=parse_edu_ustb_sei_mde_xmu_StringLiteral();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__LEFT, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_2_0_0_0, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:7544:10: a2_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7130);
            	            a2_1=parse_edu_ustb_sei_mde_xmu_IntegerLiteral();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__LEFT, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_2_0_0_0, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu.g:7563:10: a2_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7150);
            	            a2_2=parse_edu_ustb_sei_mde_xmu_ObjectPathExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__LEFT, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_2_0_0_0, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1239]);
            	    			}

            	    a3=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7178); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_2_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1240]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1241]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1242]);
            	    			}

            	    // Xmu.g:7604:4: (a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral |a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            	    int alt66=3;
            	    switch ( input.LA(1) ) {
            	    case QUOTED_39_39_92:
            	        {
            	        alt66=1;
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        alt66=2;
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        alt66=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 66, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt66) {
            	        case 1 :
            	            // Xmu.g:7605:5: a4_0= parse_edu_ustb_sei_mde_xmu_StringLiteral
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7204);
            	            a4_0=parse_edu_ustb_sei_mde_xmu_StringLiteral();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a4_0 != null) {
            	            						if (a4_0 != null) {
            	            							Object value = a4_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__RIGHT, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_2_0_0_2, a4_0, true);
            	            						copyLocalizationInfos(a4_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu.g:7624:10: a4_1= parse_edu_ustb_sei_mde_xmu_IntegerLiteral
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7224);
            	            a4_1=parse_edu_ustb_sei_mde_xmu_IntegerLiteral();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a4_1 != null) {
            	            						if (a4_1 != null) {
            	            							Object value = a4_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__RIGHT, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_2_0_0_2, a4_1, true);
            	            						copyLocalizationInfos(a4_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu.g:7643:10: a4_2= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7244);
            	            a4_2=parse_edu_ustb_sei_mde_xmu_ObjectPathExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a4_2 != null) {
            	            						if (a4_2 != null) {
            	            							Object value = a4_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu.XmuPackage.HELPER_MAPPING__RIGHT, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_2_0_0_2, a4_2, true);
            	            						copyLocalizationInfos(a4_2, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1243]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1244]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1245]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1246]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt67 >= 1 ) break loop67;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(67, input);
                        throw eee;
                }
                cnt67++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1247]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1248]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getHelperMapping(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1249]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1250]);
            	}

            a5=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7285); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_41_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1251]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getXMUModel(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1252]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_edu_ustb_sei_mde_xmu_HelperMapping_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_HelperMapping"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_HelperPath"
    // Xmu.g:7698:1: parse_edu_ustb_sei_mde_xmu_HelperPath returns [edu.ustb.sei.mde.xmu.HelperPath element = null] : a0= '.' a1= '#' (a2= NAME ) ;
    public final edu.ustb.sei.mde.xmu.HelperPath parse_edu_ustb_sei_mde_xmu_HelperPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu.HelperPath element =  null;

        int parse_edu_ustb_sei_mde_xmu_HelperPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xmu.g:7701:2: (a0= '.' a1= '#' (a2= NAME ) )
            // Xmu.g:7702:2: a0= '.' a1= '#' (a2= NAME )
            {
            a0=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_HelperPath7314); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_42_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1253]);
            	}

            a1=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu_HelperPath7328); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_42_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1254]);
            	}

            // Xmu.g:7730:2: (a2= NAME )
            // Xmu.g:7731:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_HelperPath7346); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuTerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperPath();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu.resource.xmu.IXmuTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.HELPER_PATH__HELPER), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu.HelperMapping proxy = edu.ustb.sei.mde.xmu.XmuFactory.eINSTANCE.createHelperMapping();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu.HelperPath, edu.ustb.sei.mde.xmu.HelperMapping>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getHelperPathHelperReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.HELPER_PATH__HELPER), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu.XmuPackage.HELPER_PATH__HELPER), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu.resource.xmu.grammar.XmuGrammarInformationProvider.XMU_42_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1255]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1256]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1257]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getVariableExp(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1258]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1259]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1260]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1261]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1262]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1263]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1264]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1265]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1266]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1267]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1268]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1269]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1270]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1271]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1272]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1273]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1274]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getForStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1275]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1276]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1277]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1278]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1279]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1280]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1281]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1282]);
            		addExpectedElement(edu.ustb.sei.mde.xmu.XmuPackage.eINSTANCE.getInitialMappingStatement(), edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1283]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1284]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu.resource.xmu.mopp.XmuExpectationConstants.EXPECTATIONS[1285]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_edu_ustb_sei_mde_xmu_HelperPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_HelperPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_Statement"
    // Xmu.g:7802:1: parse_edu_ustb_sei_mde_xmu_Statement returns [edu.ustb.sei.mde.xmu.Statement element = null] : (c0= parse_edu_ustb_sei_mde_xmu_ForStatement |c1= parse_edu_ustb_sei_mde_xmu_UpdatedStatement |c2= parse_edu_ustb_sei_mde_xmu_BlockStatement |c3= parse_edu_ustb_sei_mde_xmu_SwitchStatement |c4= parse_edu_ustb_sei_mde_xmu_RuleCallStatement |c5= parse_edu_ustb_sei_mde_xmu_UpdatePattern |c6= parse_edu_ustb_sei_mde_xmu_DeleteNode |c7= parse_edu_ustb_sei_mde_xmu_DeleteLink |c8= parse_edu_ustb_sei_mde_xmu_PrintStatement );
    public final edu.ustb.sei.mde.xmu.Statement parse_edu_ustb_sei_mde_xmu_Statement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.Statement element =  null;

        int parse_edu_ustb_sei_mde_xmu_Statement_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.ForStatement c0 =null;

        edu.ustb.sei.mde.xmu.UpdatedStatement c1 =null;

        edu.ustb.sei.mde.xmu.BlockStatement c2 =null;

        edu.ustb.sei.mde.xmu.SwitchStatement c3 =null;

        edu.ustb.sei.mde.xmu.RuleCallStatement c4 =null;

        edu.ustb.sei.mde.xmu.UpdatePattern c5 =null;

        edu.ustb.sei.mde.xmu.DeleteNode c6 =null;

        edu.ustb.sei.mde.xmu.DeleteLink c7 =null;

        edu.ustb.sei.mde.xmu.PrintStatement c8 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xmu.g:7803:2: (c0= parse_edu_ustb_sei_mde_xmu_ForStatement |c1= parse_edu_ustb_sei_mde_xmu_UpdatedStatement |c2= parse_edu_ustb_sei_mde_xmu_BlockStatement |c3= parse_edu_ustb_sei_mde_xmu_SwitchStatement |c4= parse_edu_ustb_sei_mde_xmu_RuleCallStatement |c5= parse_edu_ustb_sei_mde_xmu_UpdatePattern |c6= parse_edu_ustb_sei_mde_xmu_DeleteNode |c7= parse_edu_ustb_sei_mde_xmu_DeleteLink |c8= parse_edu_ustb_sei_mde_xmu_PrintStatement )
            int alt68=9;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt68=1;
                }
                break;
            case 63:
                {
                alt68=2;
                }
                break;
            case 68:
                {
                alt68=3;
                }
                break;
            case 59:
                {
                alt68=4;
                }
                break;
            case NAME:
                {
                alt68=5;
                }
                break;
            case 44:
                {
                alt68=6;
                }
                break;
            case 43:
                {
                int LA68_7 = input.LA(2);

                if ( (LA68_7==NAME) ) {
                    int LA68_9 = input.LA(3);

                    if ( (LA68_9==EOF||LA68_9==30||LA68_9==41||LA68_9==49||(LA68_9 >= 60 && LA68_9 <= 61)||LA68_9==70) ) {
                        alt68=7;
                    }
                    else if ( (LA68_9==25) ) {
                        alt68=8;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 68, 9, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 7, input);

                    throw nvae;

                }
                }
                break;
            case 54:
                {
                alt68=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;

            }

            switch (alt68) {
                case 1 :
                    // Xmu.g:7804:2: c0= parse_edu_ustb_sei_mde_xmu_ForStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ForStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7378);
                    c0=parse_edu_ustb_sei_mde_xmu_ForStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu.g:7805:4: c1= parse_edu_ustb_sei_mde_xmu_UpdatedStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7388);
                    c1=parse_edu_ustb_sei_mde_xmu_UpdatedStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu.g:7806:4: c2= parse_edu_ustb_sei_mde_xmu_BlockStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BlockStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7398);
                    c2=parse_edu_ustb_sei_mde_xmu_BlockStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu.g:7807:4: c3= parse_edu_ustb_sei_mde_xmu_SwitchStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7408);
                    c3=parse_edu_ustb_sei_mde_xmu_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu.g:7808:4: c4= parse_edu_ustb_sei_mde_xmu_RuleCallStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7418);
                    c4=parse_edu_ustb_sei_mde_xmu_RuleCallStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu.g:7809:4: c5= parse_edu_ustb_sei_mde_xmu_UpdatePattern
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatePattern_in_parse_edu_ustb_sei_mde_xmu_Statement7428);
                    c5=parse_edu_ustb_sei_mde_xmu_UpdatePattern();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu.g:7810:4: c6= parse_edu_ustb_sei_mde_xmu_DeleteNode
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_DeleteNode_in_parse_edu_ustb_sei_mde_xmu_Statement7438);
                    c6=parse_edu_ustb_sei_mde_xmu_DeleteNode();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu.g:7811:4: c7= parse_edu_ustb_sei_mde_xmu_DeleteLink
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_DeleteLink_in_parse_edu_ustb_sei_mde_xmu_Statement7448);
                    c7=parse_edu_ustb_sei_mde_xmu_DeleteLink();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xmu.g:7812:4: c8= parse_edu_ustb_sei_mde_xmu_PrintStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PrintStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7458);
                    c8=parse_edu_ustb_sei_mde_xmu_PrintStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_edu_ustb_sei_mde_xmu_Statement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_Statement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_AtomicExpr"
    // Xmu.g:7816:1: parse_edu_ustb_sei_mde_xmu_AtomicExpr returns [edu.ustb.sei.mde.xmu.AtomicExpr element = null] : (c0= parse_edu_ustb_sei_mde_xmu_VariableExp |c1= parse_edu_ustb_sei_mde_xmu_StringLiteral |c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral |c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral |c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral |c6= parse_edu_ustb_sei_mde_xmu_ParenExpr );
    public final edu.ustb.sei.mde.xmu.AtomicExpr parse_edu_ustb_sei_mde_xmu_AtomicExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AtomicExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_AtomicExpr_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.VariableExp c0 =null;

        edu.ustb.sei.mde.xmu.StringLiteral c1 =null;

        edu.ustb.sei.mde.xmu.EmptyLiteral c2 =null;

        edu.ustb.sei.mde.xmu.IntegerLiteral c3 =null;

        edu.ustb.sei.mde.xmu.BooleanLiteral c4 =null;

        edu.ustb.sei.mde.xmu.EnumLiteral c5 =null;

        edu.ustb.sei.mde.xmu.ParenExpr c6 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xmu.g:7817:2: (c0= parse_edu_ustb_sei_mde_xmu_VariableExp |c1= parse_edu_ustb_sei_mde_xmu_StringLiteral |c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral |c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral |c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral |c6= parse_edu_ustb_sei_mde_xmu_ParenExpr )
            int alt69=7;
            switch ( input.LA(1) ) {
            case NAME:
                {
                int LA69_1 = input.LA(2);

                if ( (LA69_1==EOF||(LA69_1 >= 18 && LA69_1 <= 26)||(LA69_1 >= 30 && LA69_1 <= 31)||(LA69_1 >= 33 && LA69_1 <= 36)||(LA69_1 >= 38 && LA69_1 <= 39)||LA69_1==41||LA69_1==49||LA69_1==53||(LA69_1 >= 60 && LA69_1 <= 61)||LA69_1==70) ) {
                    alt69=1;
                }
                else if ( (LA69_1==29) ) {
                    alt69=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                alt69=2;
                }
                break;
            case 50:
            case 52:
                {
                alt69=3;
                }
                break;
            case NUMBER:
                {
                alt69=4;
                }
                break;
            case BOOLEAN:
                {
                alt69=5;
                }
                break;
            case 17:
                {
                alt69=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;

            }

            switch (alt69) {
                case 1 :
                    // Xmu.g:7818:2: c0= parse_edu_ustb_sei_mde_xmu_VariableExp
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VariableExp_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7479);
                    c0=parse_edu_ustb_sei_mde_xmu_VariableExp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu.g:7819:4: c1= parse_edu_ustb_sei_mde_xmu_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7489);
                    c1=parse_edu_ustb_sei_mde_xmu_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu.g:7820:4: c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_EmptyLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7499);
                    c2=parse_edu_ustb_sei_mde_xmu_EmptyLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu.g:7821:4: c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7509);
                    c3=parse_edu_ustb_sei_mde_xmu_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu.g:7822:4: c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7519);
                    c4=parse_edu_ustb_sei_mde_xmu_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu.g:7823:4: c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_EnumLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7529);
                    c5=parse_edu_ustb_sei_mde_xmu_EnumLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu.g:7824:4: c6= parse_edu_ustb_sei_mde_xmu_ParenExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ParenExpr_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7539);
                    c6=parse_edu_ustb_sei_mde_xmu_ParenExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_edu_ustb_sei_mde_xmu_AtomicExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_AtomicExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_PatternExpr"
    // Xmu.g:7828:1: parse_edu_ustb_sei_mde_xmu_PatternExpr returns [edu.ustb.sei.mde.xmu.PatternExpr element = null] : (c0= parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr |c1= parse_edu_ustb_sei_mde_xmu_PatternEqualExpr );
    public final edu.ustb.sei.mde.xmu.PatternExpr parse_edu_ustb_sei_mde_xmu_PatternExpr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.PatternExpr element =  null;

        int parse_edu_ustb_sei_mde_xmu_PatternExpr_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.PatternReferenceExpr c0 =null;

        edu.ustb.sei.mde.xmu.PatternEqualExpr c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xmu.g:7829:2: (c0= parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr |c1= parse_edu_ustb_sei_mde_xmu_PatternEqualExpr )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==NAME) ) {
                int LA70_1 = input.LA(2);

                if ( (synpred130_Xmu()) ) {
                    alt70=1;
                }
                else if ( (true) ) {
                    alt70=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;

            }
            switch (alt70) {
                case 1 :
                    // Xmu.g:7830:2: c0= parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr_in_parse_edu_ustb_sei_mde_xmu_PatternExpr7560);
                    c0=parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu.g:7831:4: c1= parse_edu_ustb_sei_mde_xmu_PatternEqualExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr_in_parse_edu_ustb_sei_mde_xmu_PatternExpr7570);
                    c1=parse_edu_ustb_sei_mde_xmu_PatternEqualExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_edu_ustb_sei_mde_xmu_PatternExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_PatternExpr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_Path"
    // Xmu.g:7835:1: parse_edu_ustb_sei_mde_xmu_Path returns [edu.ustb.sei.mde.xmu.Path element = null] : (c0= parse_edu_ustb_sei_mde_xmu_FeaturePath |c1= parse_edu_ustb_sei_mde_xmu_LoopPath |c2= parse_edu_ustb_sei_mde_xmu_OperationPath |c3= parse_edu_ustb_sei_mde_xmu_HelperPath );
    public final edu.ustb.sei.mde.xmu.Path parse_edu_ustb_sei_mde_xmu_Path() throws RecognitionException {
        edu.ustb.sei.mde.xmu.Path element =  null;

        int parse_edu_ustb_sei_mde_xmu_Path_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.FeaturePath c0 =null;

        edu.ustb.sei.mde.xmu.LoopPath c1 =null;

        edu.ustb.sei.mde.xmu.OperationPath c2 =null;

        edu.ustb.sei.mde.xmu.HelperPath c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xmu.g:7836:2: (c0= parse_edu_ustb_sei_mde_xmu_FeaturePath |c1= parse_edu_ustb_sei_mde_xmu_LoopPath |c2= parse_edu_ustb_sei_mde_xmu_OperationPath |c3= parse_edu_ustb_sei_mde_xmu_HelperPath )
            int alt71=4;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==25) ) {
                int LA71_1 = input.LA(2);

                if ( (LA71_1==NAME) ) {
                    int LA71_3 = input.LA(3);

                    if ( (LA71_3==EOF||(LA71_3 >= NUMBER && LA71_3 <= OBJ_URI)||LA71_3==QUOTED_39_39_92||(LA71_3 >= 18 && LA71_3 <= 26)||(LA71_3 >= 30 && LA71_3 <= 36)||(LA71_3 >= 38 && LA71_3 <= 39)||LA71_3==41||LA71_3==49||LA71_3==53||(LA71_3 >= 60 && LA71_3 <= 61)||LA71_3==70) ) {
                        alt71=1;
                    }
                    else if ( (LA71_3==17) ) {
                        alt71=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 3, input);

                        throw nvae;

                    }
                }
                else if ( (LA71_1==16) ) {
                    alt71=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA71_0==24) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }
            switch (alt71) {
                case 1 :
                    // Xmu.g:7837:2: c0= parse_edu_ustb_sei_mde_xmu_FeaturePath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_FeaturePath_in_parse_edu_ustb_sei_mde_xmu_Path7591);
                    c0=parse_edu_ustb_sei_mde_xmu_FeaturePath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu.g:7838:4: c1= parse_edu_ustb_sei_mde_xmu_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_LoopPath_in_parse_edu_ustb_sei_mde_xmu_Path7601);
                    c1=parse_edu_ustb_sei_mde_xmu_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu.g:7839:4: c2= parse_edu_ustb_sei_mde_xmu_OperationPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_OperationPath_in_parse_edu_ustb_sei_mde_xmu_Path7611);
                    c2=parse_edu_ustb_sei_mde_xmu_OperationPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu.g:7840:4: c3= parse_edu_ustb_sei_mde_xmu_HelperPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_HelperPath_in_parse_edu_ustb_sei_mde_xmu_Path7621);
                    c3=parse_edu_ustb_sei_mde_xmu_HelperPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_edu_ustb_sei_mde_xmu_Path_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_Path"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_Variable"
    // Xmu.g:7844:1: parse_edu_ustb_sei_mde_xmu_Variable returns [edu.ustb.sei.mde.xmu.Variable element = null] : c0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable ;
    public final edu.ustb.sei.mde.xmu.Variable parse_edu_ustb_sei_mde_xmu_Variable() throws RecognitionException {
        edu.ustb.sei.mde.xmu.Variable element =  null;

        int parse_edu_ustb_sei_mde_xmu_Variable_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.PrimitiveVariable c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xmu.g:7845:2: (c0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable )
            // Xmu.g:7846:2: c0= parse_edu_ustb_sei_mde_xmu_PrimitiveVariable
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_in_parse_edu_ustb_sei_mde_xmu_Variable7642);
            c0=parse_edu_ustb_sei_mde_xmu_PrimitiveVariable();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_edu_ustb_sei_mde_xmu_Variable_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_Variable"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_Expr"
    // Xmu.g:7850:1: parse_edu_ustb_sei_mde_xmu_Expr returns [edu.ustb.sei.mde.xmu.Expr element = null] : (c0= parse_edu_ustb_sei_mde_xmu_VariableExp |c1= parse_edu_ustb_sei_mde_xmu_StringLiteral |c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral |c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral |c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral |c6= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |c7= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |c8= parse_edu_ustb_sei_mde_xmu_RelationalExpr |c9= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |c10= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |c11= parse_edu_ustb_sei_mde_xmu_ParenExpr |c12= parse_edu_ustb_sei_mde_xmu_UnaryExpr |c13= parse_edu_ustb_sei_mde_xmu_AllInstanceExpr |c14= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr );
    public final edu.ustb.sei.mde.xmu.Expr parse_edu_ustb_sei_mde_xmu_Expr() throws RecognitionException {
        edu.ustb.sei.mde.xmu.Expr element =  null;

        int parse_edu_ustb_sei_mde_xmu_Expr_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.VariableExp c0 =null;

        edu.ustb.sei.mde.xmu.StringLiteral c1 =null;

        edu.ustb.sei.mde.xmu.EmptyLiteral c2 =null;

        edu.ustb.sei.mde.xmu.IntegerLiteral c3 =null;

        edu.ustb.sei.mde.xmu.BooleanLiteral c4 =null;

        edu.ustb.sei.mde.xmu.EnumLiteral c5 =null;

        edu.ustb.sei.mde.xmu.BooleanOrExpr c6 =null;

        edu.ustb.sei.mde.xmu.BooleanAndExpr c7 =null;

        edu.ustb.sei.mde.xmu.RelationalExpr c8 =null;

        edu.ustb.sei.mde.xmu.AdditiveExpr c9 =null;

        edu.ustb.sei.mde.xmu.MultiplicativeExpr c10 =null;

        edu.ustb.sei.mde.xmu.ParenExpr c11 =null;

        edu.ustb.sei.mde.xmu.UnaryExpr c12 =null;

        edu.ustb.sei.mde.xmu.AllInstanceExpr c13 =null;

        edu.ustb.sei.mde.xmu.ObjectPathExpr c14 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xmu.g:7851:2: (c0= parse_edu_ustb_sei_mde_xmu_VariableExp |c1= parse_edu_ustb_sei_mde_xmu_StringLiteral |c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral |c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral |c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral |c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral |c6= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr |c7= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr |c8= parse_edu_ustb_sei_mde_xmu_RelationalExpr |c9= parse_edu_ustb_sei_mde_xmu_AdditiveExpr |c10= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr |c11= parse_edu_ustb_sei_mde_xmu_ParenExpr |c12= parse_edu_ustb_sei_mde_xmu_UnaryExpr |c13= parse_edu_ustb_sei_mde_xmu_AllInstanceExpr |c14= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr )
            int alt72=15;
            switch ( input.LA(1) ) {
            case NAME:
                {
                int LA72_1 = input.LA(2);

                if ( (synpred134_Xmu()) ) {
                    alt72=1;
                }
                else if ( (synpred139_Xmu()) ) {
                    alt72=6;
                }
                else if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA72_2 = input.LA(2);

                if ( (synpred135_Xmu()) ) {
                    alt72=2;
                }
                else if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 2, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA72_3 = input.LA(2);

                if ( (synpred136_Xmu()) ) {
                    alt72=3;
                }
                else if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 3, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA72_4 = input.LA(2);

                if ( (synpred136_Xmu()) ) {
                    alt72=3;
                }
                else if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 4, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA72_5 = input.LA(2);

                if ( (synpred137_Xmu()) ) {
                    alt72=4;
                }
                else if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 5, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA72_6 = input.LA(2);

                if ( (synpred138_Xmu()) ) {
                    alt72=5;
                }
                else if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 6, input);

                    throw nvae;

                }
                }
                break;
            case 51:
                {
                int LA72_7 = input.LA(2);

                if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else if ( (synpred146_Xmu()) ) {
                    alt72=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 7, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA72_8 = input.LA(2);

                if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else if ( (synpred146_Xmu()) ) {
                    alt72=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA72_9 = input.LA(2);

                if ( (synpred140_Xmu()) ) {
                    alt72=7;
                }
                else if ( (synpred141_Xmu()) ) {
                    alt72=8;
                }
                else if ( (synpred142_Xmu()) ) {
                    alt72=9;
                }
                else if ( (synpred143_Xmu()) ) {
                    alt72=10;
                }
                else if ( (synpred144_Xmu()) ) {
                    alt72=11;
                }
                else if ( (synpred145_Xmu()) ) {
                    alt72=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 9, input);

                    throw nvae;

                }
                }
                break;
            case 42:
            case 57:
            case 65:
                {
                alt72=14;
                }
                break;
            case OBJ_URI:
                {
                alt72=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;

            }

            switch (alt72) {
                case 1 :
                    // Xmu.g:7852:2: c0= parse_edu_ustb_sei_mde_xmu_VariableExp
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VariableExp_in_parse_edu_ustb_sei_mde_xmu_Expr7663);
                    c0=parse_edu_ustb_sei_mde_xmu_VariableExp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu.g:7853:4: c1= parse_edu_ustb_sei_mde_xmu_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7673);
                    c1=parse_edu_ustb_sei_mde_xmu_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu.g:7854:4: c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_EmptyLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7683);
                    c2=parse_edu_ustb_sei_mde_xmu_EmptyLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu.g:7855:4: c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7693);
                    c3=parse_edu_ustb_sei_mde_xmu_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu.g:7856:4: c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7703);
                    c4=parse_edu_ustb_sei_mde_xmu_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu.g:7857:4: c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_EnumLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7713);
                    c5=parse_edu_ustb_sei_mde_xmu_EnumLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu.g:7858:4: c6= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7723);
                    c6=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu.g:7859:4: c7= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7733);
                    c7=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xmu.g:7860:4: c8= parse_edu_ustb_sei_mde_xmu_RelationalExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7743);
                    c8=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xmu.g:7861:4: c9= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7753);
                    c9=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xmu.g:7862:4: c10= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7763);
                    c10=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xmu.g:7863:4: c11= parse_edu_ustb_sei_mde_xmu_ParenExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ParenExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7773);
                    c11=parse_edu_ustb_sei_mde_xmu_ParenExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xmu.g:7864:4: c12= parse_edu_ustb_sei_mde_xmu_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7783);
                    c12=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xmu.g:7865:4: c13= parse_edu_ustb_sei_mde_xmu_AllInstanceExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7793);
                    c13=parse_edu_ustb_sei_mde_xmu_AllInstanceExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xmu.g:7866:4: c14= parse_edu_ustb_sei_mde_xmu_ObjectPathExpr
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7803);
                    c14=parse_edu_ustb_sei_mde_xmu_ObjectPathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_edu_ustb_sei_mde_xmu_Expr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_Expr"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu_CaseSubStatement"
    // Xmu.g:7870:1: parse_edu_ustb_sei_mde_xmu_CaseSubStatement returns [edu.ustb.sei.mde.xmu.CaseSubStatement element = null] : (c0= parse_edu_ustb_sei_mde_xmu_CasePatternStatement |c1= parse_edu_ustb_sei_mde_xmu_CaseValueStatement );
    public final edu.ustb.sei.mde.xmu.CaseSubStatement parse_edu_ustb_sei_mde_xmu_CaseSubStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu.CaseSubStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu_CaseSubStatement_StartIndex = input.index();

        edu.ustb.sei.mde.xmu.CasePatternStatement c0 =null;

        edu.ustb.sei.mde.xmu.CaseValueStatement c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xmu.g:7871:2: (c0= parse_edu_ustb_sei_mde_xmu_CasePatternStatement |c1= parse_edu_ustb_sei_mde_xmu_CaseValueStatement )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==41) ) {
                switch ( input.LA(2) ) {
                case NAME:
                    {
                    int LA73_2 = input.LA(3);

                    if ( (LA73_2==28) ) {
                        alt73=1;
                    }
                    else if ( ((LA73_2 >= 19 && LA73_2 <= 21)||(LA73_2 >= 23 && LA73_2 <= 26)||LA73_2==29||LA73_2==31||(LA73_2 >= 33 && LA73_2 <= 36)||LA73_2==39||LA73_2==53) ) {
                        alt73=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 73, 2, input);

                        throw nvae;

                    }
                    }
                    break;
                case 44:
                    {
                    alt73=1;
                    }
                    break;
                case BOOLEAN:
                case NUMBER:
                case OBJ_URI:
                case QUOTED_39_39_92:
                case 17:
                case 23:
                case 42:
                case 50:
                case 51:
                case 52:
                case 57:
                case 65:
                    {
                    alt73=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 73, 1, input);

                    throw nvae;

                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;

            }
            switch (alt73) {
                case 1 :
                    // Xmu.g:7872:2: c0= parse_edu_ustb_sei_mde_xmu_CasePatternStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_CasePatternStatement_in_parse_edu_ustb_sei_mde_xmu_CaseSubStatement7824);
                    c0=parse_edu_ustb_sei_mde_xmu_CasePatternStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu.g:7873:4: c1= parse_edu_ustb_sei_mde_xmu_CaseValueStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_CaseValueStatement_in_parse_edu_ustb_sei_mde_xmu_CaseSubStatement7834);
                    c1=parse_edu_ustb_sei_mde_xmu_CaseValueStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_edu_ustb_sei_mde_xmu_CaseSubStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu_CaseSubStatement"

    // $ANTLR start synpred19_Xmu
    public final void synpred19_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.VStatement a11_0 =null;


        // Xmu.g:2029:6: ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )
        // Xmu.g:2029:6: ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) )
        {
        // Xmu.g:2029:6: ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) )
        // Xmu.g:2030:7: (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement )
        {
        // Xmu.g:2030:7: (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement )
        // Xmu.g:2031:8: a11_0= parse_edu_ustb_sei_mde_xmu_VStatement
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_synpred19_Xmu1893);
        a11_0=parse_edu_ustb_sei_mde_xmu_VStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

    }
    // $ANTLR end synpred19_Xmu

    // $ANTLR start synpred20_Xmu
    public final void synpred20_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.VStatement a10_0 =null;

        edu.ustb.sei.mde.xmu.VStatement a11_0 =null;


        // Xmu.g:1995:4: ( ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? ) )
        // Xmu.g:1995:4: ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? )
        {
        // Xmu.g:1995:4: ( (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )? )
        // Xmu.g:1996:5: (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )?
        {
        // Xmu.g:1996:5: (a10_0= parse_edu_ustb_sei_mde_xmu_VStatement )
        // Xmu.g:1997:6: a10_0= parse_edu_ustb_sei_mde_xmu_VStatement
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_synpred20_Xmu1836);
        a10_0=parse_edu_ustb_sei_mde_xmu_VStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        // Xmu.g:2028:5: ( ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) ) )?
        int alt79=2;
        int LA79_0 = input.LA(1);

        if ( (LA79_0==49||(LA79_0 >= 60 && LA79_0 <= 61)) ) {
            alt79=1;
        }
        switch (alt79) {
            case 1 :
                // Xmu.g:2029:6: ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) )
                {
                // Xmu.g:2029:6: ( (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement ) )
                // Xmu.g:2030:7: (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement )
                {
                // Xmu.g:2030:7: (a11_0= parse_edu_ustb_sei_mde_xmu_VStatement )
                // Xmu.g:2031:8: a11_0= parse_edu_ustb_sei_mde_xmu_VStatement
                {
                pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_synpred20_Xmu1893);
                a11_0=parse_edu_ustb_sei_mde_xmu_VStatement();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }

    }
    // $ANTLR end synpred20_Xmu

    // $ANTLR start synpred25_Xmu
    public final void synpred25_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanOrExpr a2_0 =null;


        // Xmu.g:2421:5: (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr )
        // Xmu.g:2421:5: a2_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred25_Xmu2321);
        a2_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred25_Xmu

    // $ANTLR start synpred26_Xmu
    public final void synpred26_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr a2_1 =null;


        // Xmu.g:2440:10: (a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr )
        // Xmu.g:2440:10: a2_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred26_Xmu2341);
        a2_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred26_Xmu

    // $ANTLR start synpred27_Xmu
    public final void synpred27_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a2_2 =null;


        // Xmu.g:2459:10: (a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:2459:10: a2_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred27_Xmu2361);
        a2_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred27_Xmu

    // $ANTLR start synpred28_Xmu
    public final void synpred28_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a2_3 =null;


        // Xmu.g:2478:10: (a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:2478:10: a2_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred28_Xmu2381);
        a2_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred28_Xmu

    // $ANTLR start synpred29_Xmu
    public final void synpred29_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a2_4 =null;


        // Xmu.g:2497:10: (a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:2497:10: a2_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred29_Xmu2401);
        a2_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred29_Xmu

    // $ANTLR start synpred30_Xmu
    public final void synpred30_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a2_5 =null;


        // Xmu.g:2516:10: (a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:2516:10: a2_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred30_Xmu2421);
        a2_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred30_Xmu

    // $ANTLR start synpred40_Xmu
    public final void synpred40_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanOrExpr a9_0 =null;


        // Xmu.g:3510:3: (a9_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr )
        // Xmu.g:3510:3: a9_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred40_Xmu3425);
        a9_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred40_Xmu

    // $ANTLR start synpred41_Xmu
    public final void synpred41_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr a9_1 =null;


        // Xmu.g:3529:6: (a9_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr )
        // Xmu.g:3529:6: a9_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred41_Xmu3439);
        a9_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred41_Xmu

    // $ANTLR start synpred42_Xmu
    public final void synpred42_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a9_2 =null;


        // Xmu.g:3548:6: (a9_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:3548:6: a9_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred42_Xmu3453);
        a9_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred42_Xmu

    // $ANTLR start synpred43_Xmu
    public final void synpred43_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a9_3 =null;


        // Xmu.g:3567:6: (a9_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:3567:6: a9_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred43_Xmu3467);
        a9_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Xmu

    // $ANTLR start synpred44_Xmu
    public final void synpred44_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a9_4 =null;


        // Xmu.g:3586:6: (a9_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:3586:6: a9_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred44_Xmu3481);
        a9_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred44_Xmu

    // $ANTLR start synpred45_Xmu
    public final void synpred45_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a9_5 =null;


        // Xmu.g:3605:6: (a9_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:3605:6: a9_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred45_Xmu3495);
        a9_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Xmu

    // $ANTLR start synpred58_Xmu
    public final void synpred58_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr a0_0 =null;


        // Xmu.g:5554:3: (a0_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr )
        // Xmu.g:5554:3: a0_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred58_Xmu5328);
        a0_0=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred58_Xmu

    // $ANTLR start synpred59_Xmu
    public final void synpred59_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a0_1 =null;


        // Xmu.g:5573:6: (a0_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:5573:6: a0_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred59_Xmu5342);
        a0_1=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred59_Xmu

    // $ANTLR start synpred60_Xmu
    public final void synpred60_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a0_2 =null;


        // Xmu.g:5592:6: (a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:5592:6: a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred60_Xmu5356);
        a0_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred60_Xmu

    // $ANTLR start synpred61_Xmu
    public final void synpred61_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr a2_0 =null;


        // Xmu.g:5660:5: (a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr )
        // Xmu.g:5660:5: a2_0= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred61_Xmu5423);
        a2_0=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred61_Xmu

    // $ANTLR start synpred62_Xmu
    public final void synpred62_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a2_1 =null;


        // Xmu.g:5679:10: (a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:5679:10: a2_1= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred62_Xmu5443);
        a2_1=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred62_Xmu

    // $ANTLR start synpred63_Xmu
    public final void synpred63_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a2_2 =null;


        // Xmu.g:5698:10: (a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:5698:10: a2_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred63_Xmu5463);
        a2_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred63_Xmu

    // $ANTLR start synpred65_Xmu
    public final void synpred65_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a0_0 =null;


        // Xmu.g:5786:3: (a0_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:5786:3: a0_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred65_Xmu5543);
        a0_0=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred65_Xmu

    // $ANTLR start synpred66_Xmu
    public final void synpred66_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a0_1 =null;


        // Xmu.g:5805:6: (a0_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:5805:6: a0_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred66_Xmu5557);
        a0_1=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred66_Xmu

    // $ANTLR start synpred67_Xmu
    public final void synpred67_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a0_2 =null;


        // Xmu.g:5824:6: (a0_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:5824:6: a0_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred67_Xmu5571);
        a0_2=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred67_Xmu

    // $ANTLR start synpred68_Xmu
    public final void synpred68_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a0_3 =null;


        // Xmu.g:5843:6: (a0_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:5843:6: a0_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred68_Xmu5585);
        a0_3=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred68_Xmu

    // $ANTLR start synpred69_Xmu
    public final void synpred69_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a2_0 =null;


        // Xmu.g:5911:5: (a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:5911:5: a2_0= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred69_Xmu5652);
        a2_0=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred69_Xmu

    // $ANTLR start synpred70_Xmu
    public final void synpred70_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a2_1 =null;


        // Xmu.g:5930:10: (a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:5930:10: a2_1= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred70_Xmu5672);
        a2_1=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred70_Xmu

    // $ANTLR start synpred71_Xmu
    public final void synpred71_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a2_2 =null;


        // Xmu.g:5949:10: (a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:5949:10: a2_2= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred71_Xmu5692);
        a2_2=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred71_Xmu

    // $ANTLR start synpred72_Xmu
    public final void synpred72_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a2_3 =null;


        // Xmu.g:5968:10: (a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:5968:10: a2_3= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred72_Xmu5712);
        a2_3=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred72_Xmu

    // $ANTLR start synpred74_Xmu
    public final void synpred74_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a0_0 =null;


        // Xmu.g:6058:3: (a0_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:6058:3: a0_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred74_Xmu5792);
        a0_0=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred74_Xmu

    // $ANTLR start synpred75_Xmu
    public final void synpred75_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a0_1 =null;


        // Xmu.g:6077:6: (a0_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:6077:6: a0_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred75_Xmu5806);
        a0_1=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred75_Xmu

    // $ANTLR start synpred76_Xmu
    public final void synpred76_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a0_2 =null;


        // Xmu.g:6096:6: (a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:6096:6: a0_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred76_Xmu5820);
        a0_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred76_Xmu

    // $ANTLR start synpred81_Xmu
    public final void synpred81_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a8_0 =null;


        // Xmu.g:6222:3: (a8_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:6222:3: a8_0= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred81_Xmu5946);
        a8_0=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred81_Xmu

    // $ANTLR start synpred82_Xmu
    public final void synpred82_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a8_1 =null;


        // Xmu.g:6241:6: (a8_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:6241:6: a8_1= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred82_Xmu5960);
        a8_1=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred82_Xmu

    // $ANTLR start synpred83_Xmu
    public final void synpred83_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a8_2 =null;


        // Xmu.g:6260:6: (a8_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:6260:6: a8_2= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred83_Xmu5974);
        a8_2=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred83_Xmu

    // $ANTLR start synpred84_Xmu
    public final void synpred84_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a0_0 =null;


        // Xmu.g:6327:3: (a0_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:6327:3: a0_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred84_Xmu6025);
        a0_0=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred84_Xmu

    // $ANTLR start synpred85_Xmu
    public final void synpred85_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a0_1 =null;


        // Xmu.g:6346:6: (a0_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:6346:6: a0_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred85_Xmu6039);
        a0_1=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred85_Xmu

    // $ANTLR start synpred88_Xmu
    public final void synpred88_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a6_0 =null;


        // Xmu.g:6448:5: (a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:6448:5: a6_0= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred88_Xmu6168);
        a6_0=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred88_Xmu

    // $ANTLR start synpred89_Xmu
    public final void synpred89_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a6_1 =null;


        // Xmu.g:6467:10: (a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:6467:10: a6_1= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred89_Xmu6188);
        a6_1=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred89_Xmu

    // $ANTLR start synpred95_Xmu
    public final void synpred95_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanOrExpr a1_0 =null;


        // Xmu.g:6763:3: (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr )
        // Xmu.g:6763:3: a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred95_Xmu6472);
        a1_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred95_Xmu

    // $ANTLR start synpred96_Xmu
    public final void synpred96_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr a1_1 =null;


        // Xmu.g:6782:6: (a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr )
        // Xmu.g:6782:6: a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred96_Xmu6486);
        a1_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred96_Xmu

    // $ANTLR start synpred97_Xmu
    public final void synpred97_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a1_2 =null;


        // Xmu.g:6801:6: (a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:6801:6: a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred97_Xmu6500);
        a1_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred97_Xmu

    // $ANTLR start synpred98_Xmu
    public final void synpred98_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a1_3 =null;


        // Xmu.g:6820:6: (a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:6820:6: a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred98_Xmu6514);
        a1_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred98_Xmu

    // $ANTLR start synpred99_Xmu
    public final void synpred99_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a1_4 =null;


        // Xmu.g:6839:6: (a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:6839:6: a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred99_Xmu6528);
        a1_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred99_Xmu

    // $ANTLR start synpred100_Xmu
    public final void synpred100_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a1_5 =null;


        // Xmu.g:6858:6: (a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:6858:6: a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred100_Xmu6542);
        a1_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred100_Xmu

    // $ANTLR start synpred102_Xmu
    public final void synpred102_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanOrExpr a1_0 =null;


        // Xmu.g:7057:3: (a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr )
        // Xmu.g:7057:3: a1_0= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred102_Xmu6703);
        a1_0=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred102_Xmu

    // $ANTLR start synpred103_Xmu
    public final void synpred103_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr a1_1 =null;


        // Xmu.g:7076:6: (a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr )
        // Xmu.g:7076:6: a1_1= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred103_Xmu6717);
        a1_1=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred103_Xmu

    // $ANTLR start synpred104_Xmu
    public final void synpred104_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr a1_2 =null;


        // Xmu.g:7095:6: (a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:7095:6: a1_2= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred104_Xmu6731);
        a1_2=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred104_Xmu

    // $ANTLR start synpred105_Xmu
    public final void synpred105_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr a1_3 =null;


        // Xmu.g:7114:6: (a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:7114:6: a1_3= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred105_Xmu6745);
        a1_3=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred105_Xmu

    // $ANTLR start synpred106_Xmu
    public final void synpred106_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr a1_4 =null;


        // Xmu.g:7133:6: (a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:7133:6: a1_4= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred106_Xmu6759);
        a1_4=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred106_Xmu

    // $ANTLR start synpred107_Xmu
    public final void synpred107_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr a1_5 =null;


        // Xmu.g:7152:6: (a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:7152:6: a1_5= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred107_Xmu6773);
        a1_5=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_Xmu

    // $ANTLR start synpred130_Xmu
    public final void synpred130_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.PatternReferenceExpr c0 =null;


        // Xmu.g:7830:2: (c0= parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr )
        // Xmu.g:7830:2: c0= parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr_in_synpred130_Xmu7560);
        c0=parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xmu

    // $ANTLR start synpred134_Xmu
    public final void synpred134_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.VariableExp c0 =null;


        // Xmu.g:7852:2: (c0= parse_edu_ustb_sei_mde_xmu_VariableExp )
        // Xmu.g:7852:2: c0= parse_edu_ustb_sei_mde_xmu_VariableExp
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_VariableExp_in_synpred134_Xmu7663);
        c0=parse_edu_ustb_sei_mde_xmu_VariableExp();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred134_Xmu

    // $ANTLR start synpred135_Xmu
    public final void synpred135_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.StringLiteral c1 =null;


        // Xmu.g:7853:4: (c1= parse_edu_ustb_sei_mde_xmu_StringLiteral )
        // Xmu.g:7853:4: c1= parse_edu_ustb_sei_mde_xmu_StringLiteral
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_synpred135_Xmu7673);
        c1=parse_edu_ustb_sei_mde_xmu_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred135_Xmu

    // $ANTLR start synpred136_Xmu
    public final void synpred136_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.EmptyLiteral c2 =null;


        // Xmu.g:7854:4: (c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral )
        // Xmu.g:7854:4: c2= parse_edu_ustb_sei_mde_xmu_EmptyLiteral
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_EmptyLiteral_in_synpred136_Xmu7683);
        c2=parse_edu_ustb_sei_mde_xmu_EmptyLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred136_Xmu

    // $ANTLR start synpred137_Xmu
    public final void synpred137_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.IntegerLiteral c3 =null;


        // Xmu.g:7855:4: (c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral )
        // Xmu.g:7855:4: c3= parse_edu_ustb_sei_mde_xmu_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_synpred137_Xmu7693);
        c3=parse_edu_ustb_sei_mde_xmu_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred137_Xmu

    // $ANTLR start synpred138_Xmu
    public final void synpred138_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanLiteral c4 =null;


        // Xmu.g:7856:4: (c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral )
        // Xmu.g:7856:4: c4= parse_edu_ustb_sei_mde_xmu_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanLiteral_in_synpred138_Xmu7703);
        c4=parse_edu_ustb_sei_mde_xmu_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred138_Xmu

    // $ANTLR start synpred139_Xmu
    public final void synpred139_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.EnumLiteral c5 =null;


        // Xmu.g:7857:4: (c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral )
        // Xmu.g:7857:4: c5= parse_edu_ustb_sei_mde_xmu_EnumLiteral
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_EnumLiteral_in_synpred139_Xmu7713);
        c5=parse_edu_ustb_sei_mde_xmu_EnumLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred139_Xmu

    // $ANTLR start synpred140_Xmu
    public final void synpred140_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanOrExpr c6 =null;


        // Xmu.g:7858:4: (c6= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr )
        // Xmu.g:7858:4: c6= parse_edu_ustb_sei_mde_xmu_BooleanOrExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred140_Xmu7723);
        c6=parse_edu_ustb_sei_mde_xmu_BooleanOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred140_Xmu

    // $ANTLR start synpred141_Xmu
    public final void synpred141_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.BooleanAndExpr c7 =null;


        // Xmu.g:7859:4: (c7= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr )
        // Xmu.g:7859:4: c7= parse_edu_ustb_sei_mde_xmu_BooleanAndExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred141_Xmu7733);
        c7=parse_edu_ustb_sei_mde_xmu_BooleanAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred141_Xmu

    // $ANTLR start synpred142_Xmu
    public final void synpred142_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.RelationalExpr c8 =null;


        // Xmu.g:7860:4: (c8= parse_edu_ustb_sei_mde_xmu_RelationalExpr )
        // Xmu.g:7860:4: c8= parse_edu_ustb_sei_mde_xmu_RelationalExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred142_Xmu7743);
        c8=parse_edu_ustb_sei_mde_xmu_RelationalExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred142_Xmu

    // $ANTLR start synpred143_Xmu
    public final void synpred143_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.AdditiveExpr c9 =null;


        // Xmu.g:7861:4: (c9= parse_edu_ustb_sei_mde_xmu_AdditiveExpr )
        // Xmu.g:7861:4: c9= parse_edu_ustb_sei_mde_xmu_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred143_Xmu7753);
        c9=parse_edu_ustb_sei_mde_xmu_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred143_Xmu

    // $ANTLR start synpred144_Xmu
    public final void synpred144_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.MultiplicativeExpr c10 =null;


        // Xmu.g:7862:4: (c10= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr )
        // Xmu.g:7862:4: c10= parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred144_Xmu7763);
        c10=parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred144_Xmu

    // $ANTLR start synpred145_Xmu
    public final void synpred145_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.ParenExpr c11 =null;


        // Xmu.g:7863:4: (c11= parse_edu_ustb_sei_mde_xmu_ParenExpr )
        // Xmu.g:7863:4: c11= parse_edu_ustb_sei_mde_xmu_ParenExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_ParenExpr_in_synpred145_Xmu7773);
        c11=parse_edu_ustb_sei_mde_xmu_ParenExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred145_Xmu

    // $ANTLR start synpred146_Xmu
    public final void synpred146_Xmu_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu.UnaryExpr c12 =null;


        // Xmu.g:7864:4: (c12= parse_edu_ustb_sei_mde_xmu_UnaryExpr )
        // Xmu.g:7864:4: c12= parse_edu_ustb_sei_mde_xmu_UnaryExpr
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred146_Xmu7783);
        c12=parse_edu_ustb_sei_mde_xmu_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred146_Xmu

    // Delegated rules

    public final boolean synpred130_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Xmu() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Xmu_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_XMUModel_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu_XMUModel124 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_URI_in_parse_edu_ustb_sei_mde_xmu_XMUModel150 = new BitSet(new long[]{0x0401800000000000L});
    public static final BitSet FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu_XMUModel205 = new BitSet(new long[]{0x0000000000000B00L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement_in_parse_edu_ustb_sei_mde_xmu_XMUModel231 = new BitSet(new long[]{0x0401000000000000L});
    public static final BitSet FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu_XMUModel281 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_HelperMapping_in_parse_edu_ustb_sei_mde_xmu_XMUModel307 = new BitSet(new long[]{0x0401000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StartStatement_in_parse_edu_ustb_sei_mde_xmu_XMUModel357 = new BitSet(new long[]{0x0480000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Rule_in_parse_edu_ustb_sei_mde_xmu_XMUModel392 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu_StartStatement433 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_StartStatement451 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_StartStatement472 = new BitSet(new long[]{0x0200040000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StartRoot_in_parse_edu_ustb_sei_mde_xmu_StartStatement490 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_StartStatement517 = new BitSet(new long[]{0x0200040000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StartRoot_in_parse_edu_ustb_sei_mde_xmu_StartStatement543 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_StartStatement584 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_StartStatement598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu_StartRoot636 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu_StartRoot651 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu_StartRoot666 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_StartRoot687 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu_StartRoot705 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_StartRoot726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu_Rule755 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_Rule773 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000010L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_Rule803 = new BitSet(new long[]{0x0200040000000080L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Parameter_in_parse_edu_ustb_sei_mde_xmu_Rule829 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_Rule870 = new BitSet(new long[]{0x0200040000000080L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Parameter_in_parse_edu_ustb_sei_mde_xmu_Rule904 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_Rule965 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_Rule998 = new BitSet(new long[]{0xC840180000000080L,0x0000000000000011L});
    public static final BitSet FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu_Rule1021 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_in_parse_edu_ustb_sei_mde_xmu_Rule1047 = new BitSet(new long[]{0xC840180000400080L,0x0000000000000010L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_Rule1088 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_in_parse_edu_ustb_sei_mde_xmu_Rule1122 = new BitSet(new long[]{0xC840180000400080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_Rule1200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_Rule1218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu_Parameter1256 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu_Parameter1271 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu_Parameter1286 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_Parameter1311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIMITIVE_in_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable1351 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable1376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu_ForStatement1412 = new BitSet(new long[]{0x0000100000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Pattern_in_parse_edu_ustb_sei_mde_xmu_ForStatement1430 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu_ForStatement1457 = new BitSet(new long[]{0x0000100000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Pattern_in_parse_edu_ustb_sei_mde_xmu_ForStatement1483 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu_ForStatement1524 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1558 = new BitSet(new long[]{0x0000010040000000L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_ForStatement1613 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1655 = new BitSet(new long[]{0x0000010040000000L});
    public static final BitSet FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu_ForStatement1772 = new BitSet(new long[]{0x3002000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1795 = new BitSet(new long[]{0x3002000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1836 = new BitSet(new long[]{0x3002000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_parse_edu_ustb_sei_mde_xmu_ForStatement1893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2004 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2018 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2041 = new BitSet(new long[]{0x0000000000400080L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2071 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2094 = new BitSet(new long[]{0x0000000000040080L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_UpdatedStatement2124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu_VStatement2162 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu_VStatement2177 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu_VStatement2192 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_VStatement2213 = new BitSet(new long[]{0xC840180000000080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_VStatement2231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternNode_in_parse_edu_ustb_sei_mde_xmu_Pattern2268 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_Pattern2295 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2321 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2341 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2361 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2381 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2401 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2421 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_Pattern2441 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_Pattern2469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatePattern_in_parse_edu_ustb_sei_mde_xmu_Pattern2507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternNode2536 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu_PatternNode2557 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternNode2575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_PatternNode2596 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternExpr_in_parse_edu_ustb_sei_mde_xmu_PatternNode2625 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000040L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_PatternNode2666 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternExpr_in_parse_edu_ustb_sei_mde_xmu_PatternNode2700 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_PatternNode2774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2807 = new BitSet(new long[]{0x0000002400000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2837 = new BitSet(new long[]{0x0014000000020990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2863 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2891 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2924 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternNode_in_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr2942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr2979 = new BitSet(new long[]{0x0000002400000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3009 = new BitSet(new long[]{0x0014000000020990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3035 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3063 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3096 = new BitSet(new long[]{0x0014000000020990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr3114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_VariableExp3151 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Path_in_parse_edu_ustb_sei_mde_xmu_VariableExp3187 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_FeaturePath3243 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_FeaturePath3261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_LoopPath3297 = new BitSet(new long[]{0x0100600000000000L});
    public static final BitSet FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu_LoopPath3320 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu_LoopPath3335 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu_LoopPath3350 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_LoopPath3371 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Variable_in_parse_edu_ustb_sei_mde_xmu_LoopPath3389 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu_LoopPath3407 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3425 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3439 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3453 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3467 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3481 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3495 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_LoopPath3509 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_LoopPath3527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_OperationPath3556 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_OperationPath3574 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_OperationPath3595 = new BitSet(new long[]{0x021C040000860B90L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_OperationPath3624 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_OperationPath3665 = new BitSet(new long[]{0x021C040000820B90L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_OperationPath3699 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_OperationPath3773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu_StringLiteral3806 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Path_in_parse_edu_ustb_sei_mde_xmu_StringLiteral3842 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu_EmptyLiteral3907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu_EmptyLiteral3922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu_IntegerLiteral3962 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Path_in_parse_edu_ustb_sei_mde_xmu_IntegerLiteral3998 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu_BooleanLiteral4058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_EnumLiteral4098 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu_EnumLiteral4119 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_EnumLiteral4137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4173 = new BitSet(new long[]{0xC840180000000080L,0x0000000000000050L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4202 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4243 = new BitSet(new long[]{0xC840180000000080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4277 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_BlockStatement4351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4380 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4398 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000014L});
    public static final BitSet FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4428 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4454 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4495 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4529 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4603 = new BitSet(new long[]{0x0000020000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_CaseSubStatement_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4626 = new BitSet(new long[]{0x0000020000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu_SwitchStatement4652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4681 = new BitSet(new long[]{0x0000100000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Pattern_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4699 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4717 = new BitSet(new long[]{0xC840180000000080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_CasePatternStatement4735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4768 = new BitSet(new long[]{0x021C040000820B90L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4786 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4804 = new BitSet(new long[]{0xC840180000000080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Statement_in_parse_edu_ustb_sei_mde_xmu_CaseValueStatement4822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4859 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4880 = new BitSet(new long[]{0x021C040000860B90L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4909 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4950 = new BitSet(new long[]{0x021C040000820B90L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_Expr_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement4984 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_RuleCallStatement5058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu_UpdatePattern5087 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternNode_in_parse_edu_ustb_sei_mde_xmu_UpdatePattern5105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu_DeleteNode5138 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteNode5156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5192 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5210 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5231 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5249 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5270 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_DeleteLink5288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5328 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5342 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5356 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5370 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5397 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5423 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5443 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5463 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr5483 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5543 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5557 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5571 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5585 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5599 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5626 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5652 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5672 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5692 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5712 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr5732 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5792 = new BitSet(new long[]{0x0000001E80000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5806 = new BitSet(new long[]{0x0000001E80000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5820 = new BitSet(new long[]{0x0000001E80000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5834 = new BitSet(new long[]{0x0000001E80000000L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5861 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5876 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5891 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5906 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5921 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_RelationalExpr5988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6025 = new BitSet(new long[]{0x0000000000B00000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6039 = new BitSet(new long[]{0x0000000000B00000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6053 = new BitSet(new long[]{0x0000000000B00000L});
    public static final BitSet FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6093 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6112 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6131 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6168 = new BitSet(new long[]{0x0000000000B00002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6188 = new BitSet(new long[]{0x0000000000B00002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_AdditiveExpr6208 = new BitSet(new long[]{0x0000000000B00002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6268 = new BitSet(new long[]{0x0000000004080000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6282 = new BitSet(new long[]{0x0000000004080000L});
    public static final BitSet FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6322 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6341 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6378 = new BitSet(new long[]{0x0000000004080002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr6398 = new BitSet(new long[]{0x0000000004080002L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6454 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6472 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6486 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6500 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6514 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6528 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6542 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6556 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu_ParenExpr6574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu_UnaryExpr6612 = new BitSet(new long[]{0x0014000000020990L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu_UnaryExpr6627 = new BitSet(new long[]{0x0014000000020990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_UnaryExpr6652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6685 = new BitSet(new long[]{0x001C000000820990L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AtomicExpr_in_parse_edu_ustb_sei_mde_xmu_PrintStatement6787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StartRoot_in_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr6824 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr6842 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr6860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6905 = new BitSet(new long[]{0x0000000100000B00L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6922 = new BitSet(new long[]{0x0000000100000B00L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6939 = new BitSet(new long[]{0x0000000100000B00L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6965 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_InitialMappingStatement6983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr7020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7060 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7081 = new BitSet(new long[]{0x0000000000000B00L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7110 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7130 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7150 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7178 = new BitSet(new long[]{0x0000000000000B00L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7204 = new BitSet(new long[]{0x0000000040000B00L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7224 = new BitSet(new long[]{0x0000000040000B00L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7244 = new BitSet(new long[]{0x0000000040000B00L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu_HelperMapping7285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu_HelperPath7314 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu_HelperPath7328 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu_HelperPath7346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ForStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatedStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BlockStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UpdatePattern_in_parse_edu_ustb_sei_mde_xmu_Statement7428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_DeleteNode_in_parse_edu_ustb_sei_mde_xmu_Statement7438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_DeleteLink_in_parse_edu_ustb_sei_mde_xmu_Statement7448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PrintStatement_in_parse_edu_ustb_sei_mde_xmu_Statement7458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VariableExp_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_EmptyLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_EnumLiteral_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ParenExpr_in_parse_edu_ustb_sei_mde_xmu_AtomicExpr7539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr_in_parse_edu_ustb_sei_mde_xmu_PatternExpr7560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternEqualExpr_in_parse_edu_ustb_sei_mde_xmu_PatternExpr7570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_FeaturePath_in_parse_edu_ustb_sei_mde_xmu_Path7591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_LoopPath_in_parse_edu_ustb_sei_mde_xmu_Path7601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_OperationPath_in_parse_edu_ustb_sei_mde_xmu_Path7611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_HelperPath_in_parse_edu_ustb_sei_mde_xmu_Path7621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PrimitiveVariable_in_parse_edu_ustb_sei_mde_xmu_Variable7642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VariableExp_in_parse_edu_ustb_sei_mde_xmu_Expr7663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_EmptyLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_EnumLiteral_in_parse_edu_ustb_sei_mde_xmu_Expr7713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ParenExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AllInstanceExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ObjectPathExpr_in_parse_edu_ustb_sei_mde_xmu_Expr7803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_CasePatternStatement_in_parse_edu_ustb_sei_mde_xmu_CaseSubStatement7824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_CaseValueStatement_in_parse_edu_ustb_sei_mde_xmu_CaseSubStatement7834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_synpred19_Xmu1893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_synpred20_Xmu1836 = new BitSet(new long[]{0x3002000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VStatement_in_synpred20_Xmu1893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred25_Xmu2321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred26_Xmu2341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred27_Xmu2361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred28_Xmu2381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred29_Xmu2401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred30_Xmu2421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred40_Xmu3425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred41_Xmu3439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred42_Xmu3453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred43_Xmu3467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred44_Xmu3481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred45_Xmu3495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred58_Xmu5328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred59_Xmu5342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred60_Xmu5356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred61_Xmu5423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred62_Xmu5443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred63_Xmu5463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred65_Xmu5543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred66_Xmu5557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred67_Xmu5571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred68_Xmu5585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred69_Xmu5652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred70_Xmu5672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred71_Xmu5692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred72_Xmu5712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred74_Xmu5792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred75_Xmu5806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred76_Xmu5820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred81_Xmu5946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred82_Xmu5960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred83_Xmu5974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred84_Xmu6025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred85_Xmu6039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred88_Xmu6168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred89_Xmu6188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred95_Xmu6472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred96_Xmu6486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred97_Xmu6500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred98_Xmu6514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred99_Xmu6528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred100_Xmu6542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred102_Xmu6703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred103_Xmu6717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred104_Xmu6731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred105_Xmu6745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred106_Xmu6759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred107_Xmu6773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_PatternReferenceExpr_in_synpred130_Xmu7560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_VariableExp_in_synpred134_Xmu7663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_StringLiteral_in_synpred135_Xmu7673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_EmptyLiteral_in_synpred136_Xmu7683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_IntegerLiteral_in_synpred137_Xmu7693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanLiteral_in_synpred138_Xmu7703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_EnumLiteral_in_synpred139_Xmu7713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanOrExpr_in_synpred140_Xmu7723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_BooleanAndExpr_in_synpred141_Xmu7733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_RelationalExpr_in_synpred142_Xmu7743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_AdditiveExpr_in_synpred143_Xmu7753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_MultiplicativeExpr_in_synpred144_Xmu7763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_ParenExpr_in_synpred145_Xmu7773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu_UnaryExpr_in_synpred146_Xmu7783 = new BitSet(new long[]{0x0000000000000002L});

}