/**
 * generated by Xtext 2.14.0
 */
package edu.ustb.sei.mde.bxcore.dsl.bXCore.impl;

import edu.ustb.sei.mde.bxcore.dsl.bXCore.BXCoreFactory;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BXCorePackage;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BXFunctionDefinition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BXProgram;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BiGULReplace;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BiGULSkip;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BiGULStatement;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ContextAwareCondition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ContextAwareUnidirectionalAction;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ContextType;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ContextTypeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.Conversion;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.DefinedContextTypeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.Definition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.EcoreTypeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.EmptyContextTypeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.FeatureTypeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ImportSection;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.IndexDefinition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.IndexPart;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.Pattern;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PatternDefinition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PatternDefinitionReference;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PatternEdge;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PatternNode;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PatternNodeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PatternValueCondition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PrimitiveTypeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.TypeDefinition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.TypeRef;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.TypeVar;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.VarMapping;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreAlign;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreCompositionChildStatement;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreExpandSource;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreExpandView;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreFork;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreForkBranch;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreFunctionCall;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreGraphReplace;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreIndex;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreMatchSource;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreMatchView;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreParallelComposition;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreStatement;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreSwitch;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreSwitchAdaption;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreSwitchBranch;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.xtext.common.types.TypesPackage;

import org.eclipse.xtext.xbase.XbasePackage;

import org.eclipse.xtext.xtype.XtypePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BXCorePackageImpl extends EPackageImpl implements BXCorePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bxProgramEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importSectionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bxFunctionDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeVarEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass indexDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternEdgeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternValueConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternNodeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contextTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contextTypeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternDefinitionReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreCompositionChildStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreMatchSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreMatchViewEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreExpandSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreExpandViewEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass varMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreGraphReplaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreParallelCompositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreSwitchEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreSwitchBranchEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreSwitchAdaptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conversionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreForkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreForkBranchEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreAlignEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreFunctionCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmuCoreIndexEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass indexPartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contextAwareConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contextAwareUnidirectionalActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass biGULStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass biGULReplaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass biGULSkipEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ecoreTypeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass featureTypeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveTypeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass definedContextTypeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass emptyContextTypeRefEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see edu.ustb.sei.mde.bxcore.dsl.bXCore.BXCorePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BXCorePackageImpl()
  {
    super(eNS_URI, BXCoreFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link BXCorePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BXCorePackage init()
  {
    if (isInited) return (BXCorePackage)EPackage.Registry.INSTANCE.getEPackage(BXCorePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredBXCorePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    BXCorePackageImpl theBXCorePackage = registeredBXCorePackage instanceof BXCorePackageImpl ? (BXCorePackageImpl)registeredBXCorePackage : new BXCorePackageImpl();

    isInited = true;

    // Initialize simple dependencies
    XbasePackage.eINSTANCE.eClass();
    XtypePackage.eINSTANCE.eClass();
    TypesPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theBXCorePackage.createPackageContents();

    // Initialize created meta-data
    theBXCorePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBXCorePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BXCorePackage.eNS_URI, theBXCorePackage);
    return theBXCorePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBXProgram()
  {
    return bxProgramEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBXProgram_Imports()
  {
    return (EReference)bxProgramEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBXProgram_JavaImports()
  {
    return (EReference)bxProgramEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBXProgram_Definitions()
  {
    return (EReference)bxProgramEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImportSection()
  {
    return importSectionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getImportSection_Metamodel()
  {
    return (EReference)importSectionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImportSection_ShortName()
  {
    return (EAttribute)importSectionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefinition()
  {
    return definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDefinition_Name()
  {
    return (EAttribute)definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBXFunctionDefinition()
  {
    return bxFunctionDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBXFunctionDefinition_SourceType()
  {
    return (EReference)bxFunctionDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBXFunctionDefinition_ViewType()
  {
    return (EReference)bxFunctionDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBXFunctionDefinition_Statement()
  {
    return (EReference)bxFunctionDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeDefinition()
  {
    return typeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTypeDefinition_TypeVars()
  {
    return (EReference)typeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeVar()
  {
    return typeVarEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeVar_Name()
  {
    return (EAttribute)typeVarEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTypeVar_Type()
  {
    return (EReference)typeVarEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeRef()
  {
    return typeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPatternDefinition()
  {
    return patternDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPatternDefinition_Root()
  {
    return (EReference)patternDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPatternDefinition_Type()
  {
    return (EAttribute)patternDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIndexDefinition()
  {
    return indexDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexDefinition_SourceType()
  {
    return (EReference)indexDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexDefinition_ViewType()
  {
    return (EReference)indexDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPatternNode()
  {
    return patternNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPatternNode_Name()
  {
    return (EAttribute)patternNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPatternNode_Type()
  {
    return (EReference)patternNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPatternNode_Edges()
  {
    return (EReference)patternNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPatternEdge()
  {
    return patternEdgeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPatternEdge_Name()
  {
    return (EAttribute)patternEdgeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPatternEdge_Feature()
  {
    return (EReference)patternEdgeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPatternEdge_Operator()
  {
    return (EAttribute)patternEdgeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPatternEdge_Value()
  {
    return (EReference)patternEdgeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPatternValueCondition()
  {
    return patternValueConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPatternNodeRef()
  {
    return patternNodeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPatternNodeRef_Node()
  {
    return (EReference)patternNodeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPattern()
  {
    return patternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContextType()
  {
    return contextTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContextTypeRef()
  {
    return contextTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPatternDefinitionReference()
  {
    return patternDefinitionReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPatternDefinitionReference_Pattern()
  {
    return (EReference)patternDefinitionReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreStatement()
  {
    return xmuCoreStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreCompositionChildStatement()
  {
    return xmuCoreCompositionChildStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreMatchSource()
  {
    return xmuCoreMatchSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreMatchSource_SourceType()
  {
    return (EReference)xmuCoreMatchSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreMatchSource_Pattern()
  {
    return (EReference)xmuCoreMatchSourceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreMatchSource_Body()
  {
    return (EReference)xmuCoreMatchSourceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreMatchView()
  {
    return xmuCoreMatchViewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreMatchView_ViewType()
  {
    return (EReference)xmuCoreMatchViewEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreMatchView_Pattern()
  {
    return (EReference)xmuCoreMatchViewEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreMatchView_Body()
  {
    return (EReference)xmuCoreMatchViewEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreExpandSource()
  {
    return xmuCoreExpandSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreExpandSource_Pattern()
  {
    return (EReference)xmuCoreExpandSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreExpandSource_Mappings()
  {
    return (EReference)xmuCoreExpandSourceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreExpandSource_Body()
  {
    return (EReference)xmuCoreExpandSourceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreExpandView()
  {
    return xmuCoreExpandViewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreExpandView_Pattern()
  {
    return (EReference)xmuCoreExpandViewEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreExpandView_Mappings()
  {
    return (EReference)xmuCoreExpandViewEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreExpandView_Body()
  {
    return (EReference)xmuCoreExpandViewEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getVarMapping()
  {
    return varMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getVarMapping_From()
  {
    return (EAttribute)varMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getVarMapping_To()
  {
    return (EAttribute)varMappingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreGraphReplace()
  {
    return xmuCoreGraphReplaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreGraphReplace_Source()
  {
    return (EReference)xmuCoreGraphReplaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreGraphReplace_View()
  {
    return (EReference)xmuCoreGraphReplaceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreGraphReplace_Conversions()
  {
    return (EReference)xmuCoreGraphReplaceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreParallelComposition()
  {
    return xmuCoreParallelCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreParallelComposition_SourceType()
  {
    return (EReference)xmuCoreParallelCompositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreParallelComposition_ViewType()
  {
    return (EReference)xmuCoreParallelCompositionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreParallelComposition_Bodies()
  {
    return (EReference)xmuCoreParallelCompositionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreSwitch()
  {
    return xmuCoreSwitchEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitch_SourceType()
  {
    return (EReference)xmuCoreSwitchEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitch_ViewType()
  {
    return (EReference)xmuCoreSwitchEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitch_Branches()
  {
    return (EReference)xmuCoreSwitchEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitch_Adaptions()
  {
    return (EReference)xmuCoreSwitchEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreSwitchBranch()
  {
    return xmuCoreSwitchBranchEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitchBranch_Condition()
  {
    return (EReference)xmuCoreSwitchBranchEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitchBranch_Action()
  {
    return (EReference)xmuCoreSwitchBranchEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreSwitchAdaption()
  {
    return xmuCoreSwitchAdaptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitchAdaption_Condition()
  {
    return (EReference)xmuCoreSwitchAdaptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreSwitchAdaption_Action()
  {
    return (EReference)xmuCoreSwitchAdaptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConversion()
  {
    return conversionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConversion_Bigul()
  {
    return (EReference)conversionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConversion_Source()
  {
    return (EAttribute)conversionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConversion_View()
  {
    return (EAttribute)conversionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreFork()
  {
    return xmuCoreForkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreFork_SourceType()
  {
    return (EReference)xmuCoreForkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreFork_ViewType()
  {
    return (EReference)xmuCoreForkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreFork_Forks()
  {
    return (EReference)xmuCoreForkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreForkBranch()
  {
    return xmuCoreForkBranchEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreForkBranch_SourceMappings()
  {
    return (EReference)xmuCoreForkBranchEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreForkBranch_ViewMappings()
  {
    return (EReference)xmuCoreForkBranchEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreForkBranch_Body()
  {
    return (EReference)xmuCoreForkBranchEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreAlign()
  {
    return xmuCoreAlignEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_SourceType()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_ViewType()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_SourcePattern()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_ViewPattern()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_Alignment()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_Match()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_UnmatchS()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreAlign_UnmatchV()
  {
    return (EReference)xmuCoreAlignEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreFunctionCall()
  {
    return xmuCoreFunctionCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreFunctionCall_SourceMappings()
  {
    return (EReference)xmuCoreFunctionCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreFunctionCall_ViewMappings()
  {
    return (EReference)xmuCoreFunctionCallEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreFunctionCall_Target()
  {
    return (EReference)xmuCoreFunctionCallEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXmuCoreIndex()
  {
    return xmuCoreIndexEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreIndex_Parts()
  {
    return (EReference)xmuCoreIndexEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXmuCoreIndex_Body()
  {
    return (EReference)xmuCoreIndexEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIndexPart()
  {
    return indexPartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexPart_Signature()
  {
    return (EReference)indexPartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIndexPart_SourceKeys()
  {
    return (EAttribute)indexPartEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIndexPart_ViewKeys()
  {
    return (EAttribute)indexPartEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContextAwareCondition()
  {
    return contextAwareConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getContextAwareCondition_Condition()
  {
    return (EReference)contextAwareConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContextAwareUnidirectionalAction()
  {
    return contextAwareUnidirectionalActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getContextAwareUnidirectionalAction_Action()
  {
    return (EReference)contextAwareUnidirectionalActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBiGULStatement()
  {
    return biGULStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBiGULReplace()
  {
    return biGULReplaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBiGULSkip()
  {
    return biGULSkipEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEcoreTypeRef()
  {
    return ecoreTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEcoreTypeRef_Type()
  {
    return (EReference)ecoreTypeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFeatureTypeRef()
  {
    return featureTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFeatureTypeRef_Type()
  {
    return (EReference)featureTypeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFeatureTypeRef_Feature()
  {
    return (EReference)featureTypeRefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrimitiveTypeRef()
  {
    return primitiveTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveTypeRef_Type()
  {
    return (EAttribute)primitiveTypeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefinedContextTypeRef()
  {
    return definedContextTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDefinedContextTypeRef_Type()
  {
    return (EReference)definedContextTypeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEmptyContextTypeRef()
  {
    return emptyContextTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BXCoreFactory getBXCoreFactory()
  {
    return (BXCoreFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    bxProgramEClass = createEClass(BX_PROGRAM);
    createEReference(bxProgramEClass, BX_PROGRAM__IMPORTS);
    createEReference(bxProgramEClass, BX_PROGRAM__JAVA_IMPORTS);
    createEReference(bxProgramEClass, BX_PROGRAM__DEFINITIONS);

    importSectionEClass = createEClass(IMPORT_SECTION);
    createEReference(importSectionEClass, IMPORT_SECTION__METAMODEL);
    createEAttribute(importSectionEClass, IMPORT_SECTION__SHORT_NAME);

    definitionEClass = createEClass(DEFINITION);
    createEAttribute(definitionEClass, DEFINITION__NAME);

    bxFunctionDefinitionEClass = createEClass(BX_FUNCTION_DEFINITION);
    createEReference(bxFunctionDefinitionEClass, BX_FUNCTION_DEFINITION__SOURCE_TYPE);
    createEReference(bxFunctionDefinitionEClass, BX_FUNCTION_DEFINITION__VIEW_TYPE);
    createEReference(bxFunctionDefinitionEClass, BX_FUNCTION_DEFINITION__STATEMENT);

    typeDefinitionEClass = createEClass(TYPE_DEFINITION);
    createEReference(typeDefinitionEClass, TYPE_DEFINITION__TYPE_VARS);

    typeVarEClass = createEClass(TYPE_VAR);
    createEAttribute(typeVarEClass, TYPE_VAR__NAME);
    createEReference(typeVarEClass, TYPE_VAR__TYPE);

    typeRefEClass = createEClass(TYPE_REF);

    patternDefinitionEClass = createEClass(PATTERN_DEFINITION);
    createEReference(patternDefinitionEClass, PATTERN_DEFINITION__ROOT);
    createEAttribute(patternDefinitionEClass, PATTERN_DEFINITION__TYPE);

    indexDefinitionEClass = createEClass(INDEX_DEFINITION);
    createEReference(indexDefinitionEClass, INDEX_DEFINITION__SOURCE_TYPE);
    createEReference(indexDefinitionEClass, INDEX_DEFINITION__VIEW_TYPE);

    patternNodeEClass = createEClass(PATTERN_NODE);
    createEAttribute(patternNodeEClass, PATTERN_NODE__NAME);
    createEReference(patternNodeEClass, PATTERN_NODE__TYPE);
    createEReference(patternNodeEClass, PATTERN_NODE__EDGES);

    patternEdgeEClass = createEClass(PATTERN_EDGE);
    createEAttribute(patternEdgeEClass, PATTERN_EDGE__NAME);
    createEReference(patternEdgeEClass, PATTERN_EDGE__FEATURE);
    createEAttribute(patternEdgeEClass, PATTERN_EDGE__OPERATOR);
    createEReference(patternEdgeEClass, PATTERN_EDGE__VALUE);

    patternValueConditionEClass = createEClass(PATTERN_VALUE_CONDITION);

    patternNodeRefEClass = createEClass(PATTERN_NODE_REF);
    createEReference(patternNodeRefEClass, PATTERN_NODE_REF__NODE);

    patternEClass = createEClass(PATTERN);

    contextTypeEClass = createEClass(CONTEXT_TYPE);

    contextTypeRefEClass = createEClass(CONTEXT_TYPE_REF);

    patternDefinitionReferenceEClass = createEClass(PATTERN_DEFINITION_REFERENCE);
    createEReference(patternDefinitionReferenceEClass, PATTERN_DEFINITION_REFERENCE__PATTERN);

    xmuCoreStatementEClass = createEClass(XMU_CORE_STATEMENT);

    xmuCoreCompositionChildStatementEClass = createEClass(XMU_CORE_COMPOSITION_CHILD_STATEMENT);

    xmuCoreMatchSourceEClass = createEClass(XMU_CORE_MATCH_SOURCE);
    createEReference(xmuCoreMatchSourceEClass, XMU_CORE_MATCH_SOURCE__SOURCE_TYPE);
    createEReference(xmuCoreMatchSourceEClass, XMU_CORE_MATCH_SOURCE__PATTERN);
    createEReference(xmuCoreMatchSourceEClass, XMU_CORE_MATCH_SOURCE__BODY);

    xmuCoreMatchViewEClass = createEClass(XMU_CORE_MATCH_VIEW);
    createEReference(xmuCoreMatchViewEClass, XMU_CORE_MATCH_VIEW__VIEW_TYPE);
    createEReference(xmuCoreMatchViewEClass, XMU_CORE_MATCH_VIEW__PATTERN);
    createEReference(xmuCoreMatchViewEClass, XMU_CORE_MATCH_VIEW__BODY);

    xmuCoreExpandSourceEClass = createEClass(XMU_CORE_EXPAND_SOURCE);
    createEReference(xmuCoreExpandSourceEClass, XMU_CORE_EXPAND_SOURCE__PATTERN);
    createEReference(xmuCoreExpandSourceEClass, XMU_CORE_EXPAND_SOURCE__MAPPINGS);
    createEReference(xmuCoreExpandSourceEClass, XMU_CORE_EXPAND_SOURCE__BODY);

    xmuCoreExpandViewEClass = createEClass(XMU_CORE_EXPAND_VIEW);
    createEReference(xmuCoreExpandViewEClass, XMU_CORE_EXPAND_VIEW__PATTERN);
    createEReference(xmuCoreExpandViewEClass, XMU_CORE_EXPAND_VIEW__MAPPINGS);
    createEReference(xmuCoreExpandViewEClass, XMU_CORE_EXPAND_VIEW__BODY);

    varMappingEClass = createEClass(VAR_MAPPING);
    createEAttribute(varMappingEClass, VAR_MAPPING__FROM);
    createEAttribute(varMappingEClass, VAR_MAPPING__TO);

    xmuCoreGraphReplaceEClass = createEClass(XMU_CORE_GRAPH_REPLACE);
    createEReference(xmuCoreGraphReplaceEClass, XMU_CORE_GRAPH_REPLACE__SOURCE);
    createEReference(xmuCoreGraphReplaceEClass, XMU_CORE_GRAPH_REPLACE__VIEW);
    createEReference(xmuCoreGraphReplaceEClass, XMU_CORE_GRAPH_REPLACE__CONVERSIONS);

    xmuCoreParallelCompositionEClass = createEClass(XMU_CORE_PARALLEL_COMPOSITION);
    createEReference(xmuCoreParallelCompositionEClass, XMU_CORE_PARALLEL_COMPOSITION__SOURCE_TYPE);
    createEReference(xmuCoreParallelCompositionEClass, XMU_CORE_PARALLEL_COMPOSITION__VIEW_TYPE);
    createEReference(xmuCoreParallelCompositionEClass, XMU_CORE_PARALLEL_COMPOSITION__BODIES);

    xmuCoreSwitchEClass = createEClass(XMU_CORE_SWITCH);
    createEReference(xmuCoreSwitchEClass, XMU_CORE_SWITCH__SOURCE_TYPE);
    createEReference(xmuCoreSwitchEClass, XMU_CORE_SWITCH__VIEW_TYPE);
    createEReference(xmuCoreSwitchEClass, XMU_CORE_SWITCH__BRANCHES);
    createEReference(xmuCoreSwitchEClass, XMU_CORE_SWITCH__ADAPTIONS);

    xmuCoreSwitchBranchEClass = createEClass(XMU_CORE_SWITCH_BRANCH);
    createEReference(xmuCoreSwitchBranchEClass, XMU_CORE_SWITCH_BRANCH__CONDITION);
    createEReference(xmuCoreSwitchBranchEClass, XMU_CORE_SWITCH_BRANCH__ACTION);

    xmuCoreSwitchAdaptionEClass = createEClass(XMU_CORE_SWITCH_ADAPTION);
    createEReference(xmuCoreSwitchAdaptionEClass, XMU_CORE_SWITCH_ADAPTION__CONDITION);
    createEReference(xmuCoreSwitchAdaptionEClass, XMU_CORE_SWITCH_ADAPTION__ACTION);

    conversionEClass = createEClass(CONVERSION);
    createEReference(conversionEClass, CONVERSION__BIGUL);
    createEAttribute(conversionEClass, CONVERSION__SOURCE);
    createEAttribute(conversionEClass, CONVERSION__VIEW);

    xmuCoreForkEClass = createEClass(XMU_CORE_FORK);
    createEReference(xmuCoreForkEClass, XMU_CORE_FORK__SOURCE_TYPE);
    createEReference(xmuCoreForkEClass, XMU_CORE_FORK__VIEW_TYPE);
    createEReference(xmuCoreForkEClass, XMU_CORE_FORK__FORKS);

    xmuCoreForkBranchEClass = createEClass(XMU_CORE_FORK_BRANCH);
    createEReference(xmuCoreForkBranchEClass, XMU_CORE_FORK_BRANCH__SOURCE_MAPPINGS);
    createEReference(xmuCoreForkBranchEClass, XMU_CORE_FORK_BRANCH__VIEW_MAPPINGS);
    createEReference(xmuCoreForkBranchEClass, XMU_CORE_FORK_BRANCH__BODY);

    xmuCoreAlignEClass = createEClass(XMU_CORE_ALIGN);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__SOURCE_TYPE);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__VIEW_TYPE);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__SOURCE_PATTERN);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__VIEW_PATTERN);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__ALIGNMENT);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__MATCH);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__UNMATCH_S);
    createEReference(xmuCoreAlignEClass, XMU_CORE_ALIGN__UNMATCH_V);

    xmuCoreFunctionCallEClass = createEClass(XMU_CORE_FUNCTION_CALL);
    createEReference(xmuCoreFunctionCallEClass, XMU_CORE_FUNCTION_CALL__SOURCE_MAPPINGS);
    createEReference(xmuCoreFunctionCallEClass, XMU_CORE_FUNCTION_CALL__VIEW_MAPPINGS);
    createEReference(xmuCoreFunctionCallEClass, XMU_CORE_FUNCTION_CALL__TARGET);

    xmuCoreIndexEClass = createEClass(XMU_CORE_INDEX);
    createEReference(xmuCoreIndexEClass, XMU_CORE_INDEX__PARTS);
    createEReference(xmuCoreIndexEClass, XMU_CORE_INDEX__BODY);

    indexPartEClass = createEClass(INDEX_PART);
    createEReference(indexPartEClass, INDEX_PART__SIGNATURE);
    createEAttribute(indexPartEClass, INDEX_PART__SOURCE_KEYS);
    createEAttribute(indexPartEClass, INDEX_PART__VIEW_KEYS);

    contextAwareConditionEClass = createEClass(CONTEXT_AWARE_CONDITION);
    createEReference(contextAwareConditionEClass, CONTEXT_AWARE_CONDITION__CONDITION);

    contextAwareUnidirectionalActionEClass = createEClass(CONTEXT_AWARE_UNIDIRECTIONAL_ACTION);
    createEReference(contextAwareUnidirectionalActionEClass, CONTEXT_AWARE_UNIDIRECTIONAL_ACTION__ACTION);

    biGULStatementEClass = createEClass(BI_GUL_STATEMENT);

    biGULReplaceEClass = createEClass(BI_GUL_REPLACE);

    biGULSkipEClass = createEClass(BI_GUL_SKIP);

    ecoreTypeRefEClass = createEClass(ECORE_TYPE_REF);
    createEReference(ecoreTypeRefEClass, ECORE_TYPE_REF__TYPE);

    featureTypeRefEClass = createEClass(FEATURE_TYPE_REF);
    createEReference(featureTypeRefEClass, FEATURE_TYPE_REF__TYPE);
    createEReference(featureTypeRefEClass, FEATURE_TYPE_REF__FEATURE);

    primitiveTypeRefEClass = createEClass(PRIMITIVE_TYPE_REF);
    createEAttribute(primitiveTypeRefEClass, PRIMITIVE_TYPE_REF__TYPE);

    definedContextTypeRefEClass = createEClass(DEFINED_CONTEXT_TYPE_REF);
    createEReference(definedContextTypeRefEClass, DEFINED_CONTEXT_TYPE_REF__TYPE);

    emptyContextTypeRefEClass = createEClass(EMPTY_CONTEXT_TYPE_REF);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    XtypePackage theXtypePackage = (XtypePackage)EPackage.Registry.INSTANCE.getEPackage(XtypePackage.eNS_URI);
    XbasePackage theXbasePackage = (XbasePackage)EPackage.Registry.INSTANCE.getEPackage(XbasePackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    bxFunctionDefinitionEClass.getESuperTypes().add(this.getDefinition());
    typeDefinitionEClass.getESuperTypes().add(this.getDefinition());
    typeDefinitionEClass.getESuperTypes().add(this.getContextType());
    patternDefinitionEClass.getESuperTypes().add(this.getDefinition());
    patternDefinitionEClass.getESuperTypes().add(this.getPattern());
    patternDefinitionEClass.getESuperTypes().add(this.getContextType());
    indexDefinitionEClass.getESuperTypes().add(this.getDefinition());
    patternNodeEClass.getESuperTypes().add(this.getPatternValueCondition());
    patternNodeRefEClass.getESuperTypes().add(this.getPatternValueCondition());
    patternDefinitionReferenceEClass.getESuperTypes().add(this.getPattern());
    xmuCoreCompositionChildStatementEClass.getESuperTypes().add(this.getXmuCoreStatement());
    xmuCoreMatchSourceEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreMatchViewEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreExpandSourceEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreExpandViewEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreGraphReplaceEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreParallelCompositionEClass.getESuperTypes().add(this.getXmuCoreStatement());
    xmuCoreSwitchEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreForkEClass.getESuperTypes().add(this.getXmuCoreStatement());
    xmuCoreAlignEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreFunctionCallEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    xmuCoreIndexEClass.getESuperTypes().add(this.getXmuCoreCompositionChildStatement());
    biGULReplaceEClass.getESuperTypes().add(this.getBiGULStatement());
    biGULSkipEClass.getESuperTypes().add(this.getBiGULStatement());
    ecoreTypeRefEClass.getESuperTypes().add(this.getTypeRef());
    featureTypeRefEClass.getESuperTypes().add(this.getTypeRef());
    primitiveTypeRefEClass.getESuperTypes().add(this.getTypeRef());
    definedContextTypeRefEClass.getESuperTypes().add(this.getContextTypeRef());
    emptyContextTypeRefEClass.getESuperTypes().add(this.getContextTypeRef());

    // Initialize classes and features; add operations and parameters
    initEClass(bxProgramEClass, BXProgram.class, "BXProgram", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBXProgram_Imports(), this.getImportSection(), null, "imports", null, 0, -1, BXProgram.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBXProgram_JavaImports(), theXtypePackage.getXImportSection(), null, "javaImports", null, 0, 1, BXProgram.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBXProgram_Definitions(), this.getDefinition(), null, "definitions", null, 0, -1, BXProgram.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importSectionEClass, ImportSection.class, "ImportSection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getImportSection_Metamodel(), ecorePackage.getEPackage(), null, "metamodel", null, 0, 1, ImportSection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getImportSection_ShortName(), ecorePackage.getEString(), "shortName", null, 0, 1, ImportSection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(definitionEClass, Definition.class, "Definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, Definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bxFunctionDefinitionEClass, BXFunctionDefinition.class, "BXFunctionDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBXFunctionDefinition_SourceType(), this.getContextTypeRef(), null, "sourceType", null, 0, 1, BXFunctionDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBXFunctionDefinition_ViewType(), this.getContextTypeRef(), null, "viewType", null, 0, 1, BXFunctionDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBXFunctionDefinition_Statement(), this.getXmuCoreStatement(), null, "statement", null, 0, 1, BXFunctionDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeDefinitionEClass, TypeDefinition.class, "TypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTypeDefinition_TypeVars(), this.getTypeVar(), null, "typeVars", null, 0, -1, TypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeVarEClass, TypeVar.class, "TypeVar", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeVar_Name(), ecorePackage.getEString(), "name", null, 0, 1, TypeVar.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTypeVar_Type(), this.getTypeRef(), null, "type", null, 0, 1, TypeVar.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeRefEClass, TypeRef.class, "TypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(patternDefinitionEClass, PatternDefinition.class, "PatternDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPatternDefinition_Root(), this.getPatternNode(), null, "root", null, 0, 1, PatternDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPatternDefinition_Type(), ecorePackage.getEString(), "type", null, 0, 1, PatternDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(indexDefinitionEClass, IndexDefinition.class, "IndexDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIndexDefinition_SourceType(), this.getContextTypeRef(), null, "sourceType", null, 0, 1, IndexDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIndexDefinition_ViewType(), this.getContextTypeRef(), null, "viewType", null, 0, 1, IndexDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(patternNodeEClass, PatternNode.class, "PatternNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPatternNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, PatternNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPatternNode_Type(), this.getTypeRef(), null, "type", null, 0, 1, PatternNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPatternNode_Edges(), this.getPatternEdge(), null, "edges", null, 0, -1, PatternNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(patternEdgeEClass, PatternEdge.class, "PatternEdge", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPatternEdge_Name(), ecorePackage.getEString(), "name", null, 0, 1, PatternEdge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPatternEdge_Feature(), ecorePackage.getEStructuralFeature(), null, "feature", null, 0, 1, PatternEdge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPatternEdge_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, PatternEdge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPatternEdge_Value(), this.getPatternValueCondition(), null, "value", null, 0, 1, PatternEdge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(patternValueConditionEClass, PatternValueCondition.class, "PatternValueCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(patternNodeRefEClass, PatternNodeRef.class, "PatternNodeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPatternNodeRef_Node(), this.getPatternNode(), null, "node", null, 0, 1, PatternNodeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(patternEClass, Pattern.class, "Pattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(contextTypeEClass, ContextType.class, "ContextType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(contextTypeRefEClass, ContextTypeRef.class, "ContextTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(patternDefinitionReferenceEClass, PatternDefinitionReference.class, "PatternDefinitionReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPatternDefinitionReference_Pattern(), this.getPatternDefinition(), null, "pattern", null, 0, 1, PatternDefinitionReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreStatementEClass, XmuCoreStatement.class, "XmuCoreStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(xmuCoreCompositionChildStatementEClass, XmuCoreCompositionChildStatement.class, "XmuCoreCompositionChildStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(xmuCoreMatchSourceEClass, XmuCoreMatchSource.class, "XmuCoreMatchSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreMatchSource_SourceType(), this.getContextTypeRef(), null, "sourceType", null, 0, 1, XmuCoreMatchSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreMatchSource_Pattern(), this.getPattern(), null, "pattern", null, 0, 1, XmuCoreMatchSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreMatchSource_Body(), this.getXmuCoreStatement(), null, "body", null, 0, 1, XmuCoreMatchSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreMatchViewEClass, XmuCoreMatchView.class, "XmuCoreMatchView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreMatchView_ViewType(), this.getContextTypeRef(), null, "viewType", null, 0, 1, XmuCoreMatchView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreMatchView_Pattern(), this.getPattern(), null, "pattern", null, 0, 1, XmuCoreMatchView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreMatchView_Body(), this.getXmuCoreStatement(), null, "body", null, 0, 1, XmuCoreMatchView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreExpandSourceEClass, XmuCoreExpandSource.class, "XmuCoreExpandSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreExpandSource_Pattern(), this.getPattern(), null, "pattern", null, 0, 1, XmuCoreExpandSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreExpandSource_Mappings(), this.getVarMapping(), null, "mappings", null, 0, -1, XmuCoreExpandSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreExpandSource_Body(), this.getXmuCoreStatement(), null, "body", null, 0, 1, XmuCoreExpandSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreExpandViewEClass, XmuCoreExpandView.class, "XmuCoreExpandView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreExpandView_Pattern(), this.getPattern(), null, "pattern", null, 0, 1, XmuCoreExpandView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreExpandView_Mappings(), this.getVarMapping(), null, "mappings", null, 0, -1, XmuCoreExpandView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreExpandView_Body(), this.getXmuCoreStatement(), null, "body", null, 0, 1, XmuCoreExpandView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(varMappingEClass, VarMapping.class, "VarMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVarMapping_From(), ecorePackage.getEString(), "from", null, 0, 1, VarMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVarMapping_To(), ecorePackage.getEString(), "to", null, 0, 1, VarMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreGraphReplaceEClass, XmuCoreGraphReplace.class, "XmuCoreGraphReplace", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreGraphReplace_Source(), this.getPattern(), null, "source", null, 0, 1, XmuCoreGraphReplace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreGraphReplace_View(), this.getPattern(), null, "view", null, 0, 1, XmuCoreGraphReplace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreGraphReplace_Conversions(), this.getConversion(), null, "conversions", null, 0, -1, XmuCoreGraphReplace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreParallelCompositionEClass, XmuCoreParallelComposition.class, "XmuCoreParallelComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreParallelComposition_SourceType(), this.getContextTypeRef(), null, "sourceType", null, 0, 1, XmuCoreParallelComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreParallelComposition_ViewType(), this.getContextTypeRef(), null, "viewType", null, 0, 1, XmuCoreParallelComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreParallelComposition_Bodies(), this.getXmuCoreCompositionChildStatement(), null, "bodies", null, 0, -1, XmuCoreParallelComposition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreSwitchEClass, XmuCoreSwitch.class, "XmuCoreSwitch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreSwitch_SourceType(), this.getContextTypeRef(), null, "sourceType", null, 0, 1, XmuCoreSwitch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreSwitch_ViewType(), this.getContextTypeRef(), null, "viewType", null, 0, 1, XmuCoreSwitch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreSwitch_Branches(), this.getXmuCoreSwitchBranch(), null, "branches", null, 0, -1, XmuCoreSwitch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreSwitch_Adaptions(), this.getXmuCoreSwitchAdaption(), null, "adaptions", null, 0, -1, XmuCoreSwitch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreSwitchBranchEClass, XmuCoreSwitchBranch.class, "XmuCoreSwitchBranch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreSwitchBranch_Condition(), this.getContextAwareCondition(), null, "condition", null, 0, 1, XmuCoreSwitchBranch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreSwitchBranch_Action(), this.getXmuCoreStatement(), null, "action", null, 0, 1, XmuCoreSwitchBranch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreSwitchAdaptionEClass, XmuCoreSwitchAdaption.class, "XmuCoreSwitchAdaption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreSwitchAdaption_Condition(), this.getContextAwareCondition(), null, "condition", null, 0, 1, XmuCoreSwitchAdaption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreSwitchAdaption_Action(), this.getContextAwareUnidirectionalAction(), null, "action", null, 0, 1, XmuCoreSwitchAdaption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conversionEClass, Conversion.class, "Conversion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConversion_Bigul(), this.getBiGULStatement(), null, "bigul", null, 0, 1, Conversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConversion_Source(), ecorePackage.getEString(), "source", null, 0, -1, Conversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConversion_View(), ecorePackage.getEString(), "view", null, 0, -1, Conversion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreForkEClass, XmuCoreFork.class, "XmuCoreFork", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreFork_SourceType(), this.getContextTypeRef(), null, "sourceType", null, 0, 1, XmuCoreFork.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreFork_ViewType(), this.getContextTypeRef(), null, "viewType", null, 0, 1, XmuCoreFork.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreFork_Forks(), this.getXmuCoreForkBranch(), null, "forks", null, 0, -1, XmuCoreFork.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreForkBranchEClass, XmuCoreForkBranch.class, "XmuCoreForkBranch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreForkBranch_SourceMappings(), this.getVarMapping(), null, "sourceMappings", null, 0, -1, XmuCoreForkBranch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreForkBranch_ViewMappings(), this.getVarMapping(), null, "viewMappings", null, 0, -1, XmuCoreForkBranch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreForkBranch_Body(), this.getXmuCoreStatement(), null, "body", null, 0, 1, XmuCoreForkBranch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreAlignEClass, XmuCoreAlign.class, "XmuCoreAlign", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreAlign_SourceType(), this.getContextTypeRef(), null, "sourceType", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreAlign_ViewType(), this.getContextTypeRef(), null, "viewType", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreAlign_SourcePattern(), this.getPattern(), null, "sourcePattern", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreAlign_ViewPattern(), this.getPattern(), null, "viewPattern", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreAlign_Alignment(), this.getContextAwareCondition(), null, "alignment", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreAlign_Match(), this.getXmuCoreStatement(), null, "match", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreAlign_UnmatchS(), this.getContextAwareUnidirectionalAction(), null, "unmatchS", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreAlign_UnmatchV(), this.getContextAwareUnidirectionalAction(), null, "unmatchV", null, 0, 1, XmuCoreAlign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreFunctionCallEClass, XmuCoreFunctionCall.class, "XmuCoreFunctionCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreFunctionCall_SourceMappings(), this.getVarMapping(), null, "sourceMappings", null, 0, -1, XmuCoreFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreFunctionCall_ViewMappings(), this.getVarMapping(), null, "viewMappings", null, 0, -1, XmuCoreFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreFunctionCall_Target(), this.getBXFunctionDefinition(), null, "target", null, 0, 1, XmuCoreFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmuCoreIndexEClass, XmuCoreIndex.class, "XmuCoreIndex", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXmuCoreIndex_Parts(), this.getIndexPart(), null, "parts", null, 0, -1, XmuCoreIndex.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXmuCoreIndex_Body(), this.getXmuCoreStatement(), null, "body", null, 0, 1, XmuCoreIndex.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(indexPartEClass, IndexPart.class, "IndexPart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIndexPart_Signature(), this.getIndexDefinition(), null, "signature", null, 0, 1, IndexPart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIndexPart_SourceKeys(), ecorePackage.getEString(), "sourceKeys", null, 0, -1, IndexPart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIndexPart_ViewKeys(), ecorePackage.getEString(), "viewKeys", null, 0, -1, IndexPart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contextAwareConditionEClass, ContextAwareCondition.class, "ContextAwareCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContextAwareCondition_Condition(), theXbasePackage.getXExpression(), null, "condition", null, 0, 1, ContextAwareCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contextAwareUnidirectionalActionEClass, ContextAwareUnidirectionalAction.class, "ContextAwareUnidirectionalAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContextAwareUnidirectionalAction_Action(), theXbasePackage.getXExpression(), null, "action", null, 0, 1, ContextAwareUnidirectionalAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(biGULStatementEClass, BiGULStatement.class, "BiGULStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(biGULReplaceEClass, BiGULReplace.class, "BiGULReplace", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(biGULSkipEClass, BiGULSkip.class, "BiGULSkip", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ecoreTypeRefEClass, EcoreTypeRef.class, "EcoreTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEcoreTypeRef_Type(), ecorePackage.getEClassifier(), null, "type", null, 0, 1, EcoreTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(featureTypeRefEClass, FeatureTypeRef.class, "FeatureTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFeatureTypeRef_Type(), ecorePackage.getEClassifier(), null, "type", null, 0, 1, FeatureTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFeatureTypeRef_Feature(), ecorePackage.getEStructuralFeature(), null, "feature", null, 0, 1, FeatureTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primitiveTypeRefEClass, PrimitiveTypeRef.class, "PrimitiveTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPrimitiveTypeRef_Type(), ecorePackage.getEString(), "type", null, 0, 1, PrimitiveTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(definedContextTypeRefEClass, DefinedContextTypeRef.class, "DefinedContextTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDefinedContextTypeRef_Type(), this.getContextType(), null, "type", null, 0, 1, DefinedContextTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(emptyContextTypeRefEClass, EmptyContextTypeRef.class, "EmptyContextTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //BXCorePackageImpl
