/*
 * generated by Xtext 2.10.0
 */
package edu.ustb.sei.mde.xmuxtext.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.emf.common.util.URI
import edu.ustb.sei.mde.xmu2.util.AnalysisUtil
import edu.ustb.sei.mde.xmu2.runtime.build.BXCodeGenerator
import edu.ustb.sei.mde.xmu2.TransformationModel
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl
import org.eclipse.emf.ecore.resource.ResourceSet
import edu.ustb.sei.mde.modeling.ui.ConsoleUtil

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class Xmu2Generator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))

		var ResourceSet set = new ResourceSetImpl();
		AnalysisUtil.initializeResourceSet(set);
		
		var URI uri = getBuildFileURI(resource.getURI());
		var Resource res = set.createResource(uri);
		
		try {
			var BXCodeGenerator bxcg = new BXCodeGenerator();
			var TransformationModel tm = resource.getContents().get(0) as TransformationModel;
			res.getContents().add(bxcg.build(tm));
			res.save(null);
		} catch(Exception e) {
			e.printStackTrace();
			ConsoleUtil.printToConsole(e.toString(), "XMU2", true);
		}

	}
	
	def static public URI getBuildFileURI(URI uri) {
		return uri.trimFileExtension().appendFileExtension(AnalysisUtil.CORE_EXTENSION);
	}
	
}
