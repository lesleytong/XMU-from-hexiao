/*
 * generated by Xtext 2.14.0
 */
package edu.ustb.sei.mde.bxcore.dsl.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.xbase.ui.labeling.XbaseLabelProvider
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BXProgram
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ImportSection
import edu.ustb.sei.mde.bxcore.dsl.bXCore.TypeDefinition
import edu.ustb.sei.mde.bxcore.dsl.bXCore.PatternDefinition
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BXFunctionDefinition
import edu.ustb.sei.mde.bxcore.dsl.bXCore.IndexDefinition
import edu.ustb.sei.mde.bxcore.dsl.bXCore.XmuCoreStatement
import edu.ustb.sei.mde.bxcore.dsl.bXCore.BiGULStatement
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ContextAwareCondition
import edu.ustb.sei.mde.bxcore.dsl.bXCore.ContextAwareUnidirectionalAction
import org.eclipse.emf.ecore.EObject

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class BXCoreLabelProvider extends XbaseLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	def text(BXProgram p) {
		'Program '+p.eResource.URI.lastSegment
	}
	
	def text(ImportSection i) {
		'Load '+i.shortName
	}
	
	def text(TypeDefinition e){
		'Type '+e.name
	}
	
	def text(PatternDefinition e) {
		if(e.name===null) 'Pattern (Unnamed)'
		else 'Pattern '+e.name
	}
	
	def text(BXFunctionDefinition e) {
		'Function '+e.name
	}
	
	def text(IndexDefinition e) {
		'Index '+e.name
	}
	
	def text(XmuCoreStatement e) {
		e.eClass.name
	}
	
	def text(BiGULStatement e) {
		e.eClass.name
	}
	
	def text(ContextAwareCondition e) {
		'Condition'
	}
	
	def text(ContextAwareUnidirectionalAction e) {
		'Unidirectional Action'
	}
	
	def text(EObject e) {
		e.eClass.name
	}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
