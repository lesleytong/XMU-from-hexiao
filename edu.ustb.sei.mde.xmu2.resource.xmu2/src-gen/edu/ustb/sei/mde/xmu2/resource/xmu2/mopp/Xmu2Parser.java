// $ANTLR 3.4

	package edu.ustb.sei.mde.xmu2.resource.xmu2.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xmu2Parser extends Xmu2ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "BOOLEAN", "LINEBREAK", "ML_COMMENT", "NAME", "NUMBER", "OBJ_URI", "QUOTED_39_39_92", "QUOTED_60_62_92", "SL_COMMENT", "TEXT", "TYPE", "WHITESPACE", "'('", "')'", "'*'", "'+'", "'++'", "','", "'-'", "'->'", "'.'", "'/'", "':'", "'::'", "'::='", "';'", "'<'", "'<='", "'='", "'>'", "'>='", "'?'", "'['", "']'", "'and'", "'at'", "'by'", "'case'", "'default'", "'delete'", "'enforce'", "'entry'", "'exists'", "'first'", "'forAll'", "'foreach'", "'function'", "'import'", "'last'", "'match'", "'module'", "'not'", "'null'", "'or'", "'otherwise'", "'rule'", "'select'", "'skip'", "'source'", "'switch'", "'top'", "'undefined'", "'unmatchs'", "'unmatchv'", "'update'", "'view'", "'with'", "'{'", "'|'", "'}'"
    };

    public static final int EOF=-1;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int BOOLEAN=4;
    public static final int LINEBREAK=5;
    public static final int ML_COMMENT=6;
    public static final int NAME=7;
    public static final int NUMBER=8;
    public static final int OBJ_URI=9;
    public static final int QUOTED_39_39_92=10;
    public static final int QUOTED_60_62_92=11;
    public static final int SL_COMMENT=12;
    public static final int TEXT=13;
    public static final int TYPE=14;
    public static final int WHITESPACE=15;

    // delegates
    public Xmu2ANTLRParserBase[] getDelegates() {
        return new Xmu2ANTLRParserBase[] {};
    }

    // delegators


    public Xmu2Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xmu2Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(244 + 1);
         

    }

    public String[] getTokenNames() { return Xmu2Parser.tokenNames; }
    public String getGrammarFileName() { return "Xmu2.g"; }


    	private edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolverFactory tokenResolverFactory = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> expectedElements = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Problem() {
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity getSeverity() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity.ERROR;
    					}
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType getType() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement terminal = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.TERMINALS[terminalID];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[] containmentFeatures = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.LINKS[ids[i]];
    		}
    		edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xmu2Parser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.TransformationModel.class) {
    				return parse_edu_ustb_sei_mde_xmu2_TransformationModel();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryPoint.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryPoint();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryData.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryData();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ModelRule.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ModelRule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ArithmeticRule.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ArithmeticRule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.VariableDeclaration.class) {
    				return parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.Parameter.class) {
    				return parse_edu_ustb_sei_mde_xmu2_Parameter();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.Pattern.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PatternNode.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.LoopPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.FeaturePath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.OperationPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PositionPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.VariableExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PathExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EmptyExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ParenExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.UnaryExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.AdditiveExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.RelationalExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.BlockStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.SwitchStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.PatternCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ForEachStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.RuleCallStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.Skip.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_Skip();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.AssignStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement();
    			}
    		}
    		throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>>();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult parseResult = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> newFollowSet = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 207;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]> newFollowerPair : newFollowers) {
    							edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(null, newFollowerPair.getRight());
    							edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal newFollowTerminal = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xmu2.g:628:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.TransformationModel c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xmu2.g:629:2: ( (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF )
            // Xmu2.g:630:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[0]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xmu2.g:635:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel )
            // Xmu2.g:636:3: c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82);
            c0=parse_edu_ustb_sei_mde_xmu2_TransformationModel();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_TransformationModel"
    // Xmu2.g:644:1: parse_edu_ustb_sei_mde_xmu2_TransformationModel returns [edu.ustb.sei.mde.xmu2.TransformationModel element = null] : a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* ;
    public final edu.ustb.sei.mde.xmu2.TransformationModel parse_edu_ustb_sei_mde_xmu2_TransformationModel() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.TransformationModel element =  null;

        int parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.EntryPoint a4_0 =null;

        edu.ustb.sei.mde.xmu2.AbstractRule a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xmu2.g:647:2: (a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* )
            // Xmu2.g:648:2: a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1]);
            	}

            // Xmu2.g:662:2: (a1= NAME )
            // Xmu2.g:663:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[3]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[5]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[6]);
            	}

            // Xmu2.g:702:2: ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==51) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // Xmu2.g:703:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    {
            	    // Xmu2.g:703:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    // Xmu2.g:704:4: a2= 'import' (a3= QUOTED_60_62_92 )
            	    {
            	    a2=(Token)match(input,51,FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[7]);
            	    			}

            	    // Xmu2.g:718:4: (a3= QUOTED_60_62_92 )
            	    // Xmu2.g:719:5: a3= QUOTED_60_62_92
            	    {
            	    a3=(Token)match(input,QUOTED_60_62_92,FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3 != null) {
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_60_62_92");
            	    						tokenResolver.setOptions(getOptions());
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            	    						tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), result);
            	    						Object resolvedObject = result.getResolvedToken();
            	    						if (resolvedObject == null) {
            	    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            	    						}
            	    						String resolved = (String) resolvedObject;
            	    						org.eclipse.emf.ecore.EPackage proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEPackage();
            	    						collectHiddenTokens(element);
            	    						registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TransformationModel, org.eclipse.emf.ecore.EPackage>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTransformationModelPackagesReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), resolved, proxy);
            	    						if (proxy != null) {
            	    							Object value = proxy;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES, value);
            	    							completedElement(value, false);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_1, proxy, true);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[8]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[9]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[10]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[11]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[12]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[14]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[15]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[16]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[17]);
            	}

            // Xmu2.g:773:2: ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==45) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // Xmu2.g:774:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    {
            	    // Xmu2.g:774:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    // Xmu2.g:775:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    {
            	    // Xmu2.g:775:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    // Xmu2.g:776:5: a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250);
            	    a4_0=parse_edu_ustb_sei_mde_xmu2_EntryPoint();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a4_0 != null) {
            	    						if (a4_0 != null) {
            	    							Object value = a4_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__ENTRY_POINTS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_3_0_0_0, a4_0, true);
            	    						copyLocalizationInfos(a4_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[18]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[19]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[20]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[21]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[22]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[23]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[24]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[25]);
            	}

            // Xmu2.g:814:2: ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==50||LA3_0==59||LA3_0==64) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // Xmu2.g:815:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    {
            	    // Xmu2.g:815:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    // Xmu2.g:816:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    {
            	    // Xmu2.g:816:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    // Xmu2.g:817:5: a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_AbstractRule();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__RULES, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_4_0_0_0, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[26]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[27]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[28]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[29]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[30]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[31]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_TransformationModel"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryPoint"
    // Xmu2.g:855:1: parse_edu_ustb_sei_mde_xmu2_EntryPoint returns [edu.ustb.sei.mde.xmu2.EntryPoint element = null] : a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.EntryPoint parse_edu_ustb_sei_mde_xmu2_EntryPoint() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryPoint element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.EntryData a3_0 =null;

        edu.ustb.sei.mde.xmu2.EntryData a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xmu2.g:858:2: (a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' )
            // Xmu2.g:859:2: a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')'
            {
            a0=(Token)match(input,45,FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[32]);
            	}

            // Xmu2.g:873:2: (a1= NAME )
            // Xmu2.g:874:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.ModelRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.EntryPoint, edu.ustb.sei.mde.xmu2.ModelRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEntryPointRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[33]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[34]);
            	}

            // Xmu2.g:927:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            // Xmu2.g:928:3: a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419);
            a3_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[35]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[36]);
            	}

            // Xmu2.g:954:2: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==21) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xmu2.g:955:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    {
            	    // Xmu2.g:955:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    // Xmu2.g:956:4: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    {
            	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[37]);
            	    			}

            	    // Xmu2.g:970:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    // Xmu2.g:971:5: a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[38]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[39]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[40]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[41]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[42]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[43]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[44]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[45]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryPoint"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryData"
    // Xmu2.g:1024:1: parse_edu_ustb_sei_mde_xmu2_EntryData returns [edu.ustb.sei.mde.xmu2.EntryData element = null] : ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' ;
    public final edu.ustb.sei.mde.xmu2.EntryData parse_edu_ustb_sei_mde_xmu2_EntryData() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryData element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xmu2.g:1027:2: ( ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' )
            // Xmu2.g:1028:2: ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']'
            {
            // Xmu2.g:1028:2: ( (a0= 'source' |a1= 'view' ) )
            // Xmu2.g:1029:3: (a0= 'source' |a1= 'view' )
            {
            // Xmu2.g:1029:3: (a0= 'source' |a1= 'view' )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==62) ) {
                alt5=1;
            }
            else if ( (LA5_0==69) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }
            switch (alt5) {
                case 1 :
                    // Xmu2.g:1030:4: a0= 'source'
                    {
                    a0=(Token)match(input,62,FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_EntryData551); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1043:8: a1= 'view'
                    {
                    a1=(Token)match(input,69,FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_EntryData566); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[46]);
            	}

            a4=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_EntryData587); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[47]);
            	}

            // Xmu2.g:1077:2: (a5= NUMBER )
            // Xmu2.g:1078:3: a5= NUMBER
            {
            a5=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            				startIncompleteElement(element);
            			}
            			if (a5 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[48]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[49]);
            	}

            // Xmu2.g:1114:2: ( ( (a6= OBJ_URI ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==OBJ_URI) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // Xmu2.g:1115:3: ( (a6= OBJ_URI ) )
                    {
                    // Xmu2.g:1115:3: ( (a6= OBJ_URI ) )
                    // Xmu2.g:1116:4: (a6= OBJ_URI )
                    {
                    // Xmu2.g:1116:4: (a6= OBJ_URI )
                    // Xmu2.g:1117:5: a6= OBJ_URI
                    {
                    a6=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    						startIncompleteElement(element);
                    					}
                    					if (a6 != null) {
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
                    						tokenResolver.setOptions(getOptions());
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
                    						}
                    						java.lang.String resolved = (java.lang.String) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_3_0_0_0, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[50]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[51]);
            	}

            a7=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_EntryData687); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[52]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[53]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryData"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ModelRule"
    // Xmu2.g:1176:1: parse_edu_ustb_sei_mde_xmu2_ModelRule returns [edu.ustb.sei.mde.xmu2.ModelRule element = null] : ( (a0= 'top' )? ) a3= 'rule' (a4= NAME ) a5= '(' ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a9= ')' a10= '{' ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )* ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a14= '}' ;
    public final edu.ustb.sei.mde.xmu2.ModelRule parse_edu_ustb_sei_mde_xmu2_ModelRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ModelRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a12=null;
        Token a14=null;
        edu.ustb.sei.mde.xmu2.Parameter a6_0 =null;

        edu.ustb.sei.mde.xmu2.Parameter a8_0 =null;

        edu.ustb.sei.mde.xmu2.VariableDeclaration a11_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a13_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xmu2.g:1179:2: ( ( (a0= 'top' )? ) a3= 'rule' (a4= NAME ) a5= '(' ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a9= ')' a10= '{' ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )* ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a14= '}' )
            // Xmu2.g:1180:2: ( (a0= 'top' )? ) a3= 'rule' (a4= NAME ) a5= '(' ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a9= ')' a10= '{' ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )* ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a14= '}'
            {
            // Xmu2.g:1180:2: ( (a0= 'top' )? )
            // Xmu2.g:1181:3: (a0= 'top' )?
            {
            // Xmu2.g:1181:3: (a0= 'top' )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==64) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // Xmu2.g:1182:4: a0= 'top'
                    {
                    a0=(Token)match(input,64,FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_ModelRule725); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_0, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[54]);
            	}

            a3=(Token)match(input,59,FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_ModelRule746); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[55]);
            	}

            // Xmu2.g:1225:2: (a4= NAME )
            // Xmu2.g:1226:3: a4= NAME
            {
            a4=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule764); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            				}
            			}
            			if (a4 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[56]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ModelRule785); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[57]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[58]);
            	}

            // Xmu2.g:1286:2: ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==NAME||LA9_0==62||LA9_0==69) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // Xmu2.g:1287:3: ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    {
                    // Xmu2.g:1287:3: ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    // Xmu2.g:1288:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    {
                    // Xmu2.g:1288:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    // Xmu2.g:1289:5: a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule814);
                    a6_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    						}
                    					}
                    					if (a6_0 != null) {
                    						if (a6_0 != null) {
                    							Object value = a6_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4_0_0_0, a6_0, true);
                    						copyLocalizationInfos(a6_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[59]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[60]);
                    			}

                    // Xmu2.g:1320:4: ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==21) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // Xmu2.g:1321:5: (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    {
                    	    // Xmu2.g:1321:5: (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    // Xmu2.g:1322:6: a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    {
                    	    a7=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ModelRule855); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    							startIncompleteElement(element);
                    	    							// initialize boolean attribute
                    	    							{
                    	    								Object value = false;
                    	    								element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    	    							}
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[61]);
                    	    					}

                    	    // Xmu2.g:1341:6: (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    // Xmu2.g:1342:7: a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule889);
                    	    a8_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    								startIncompleteElement(element);
                    	    								// initialize boolean attribute
                    	    								{
                    	    									Object value = false;
                    	    									element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    	    								}
                    	    							}
                    	    							if (a8_0 != null) {
                    	    								if (a8_0 != null) {
                    	    									Object value = a8_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4_0_0_1_0_0_1, a8_0, true);
                    	    								copyLocalizationInfos(a8_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[62]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[63]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[64]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[65]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[66]);
            	}

            a9=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule963); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[67]);
            	}

            a10=(Token)match(input,71,FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_ModelRule977); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[68]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[69]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[70]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[71]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[72]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[73]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[74]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[75]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[76]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[77]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[78]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[79]);
            	}

            // Xmu2.g:1437:2: ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==NAME) ) {
                    int LA10_2 = input.LA(2);

                    if ( (LA10_2==26) ) {
                        alt10=1;
                    }


                }


                switch (alt10) {
            	case 1 :
            	    // Xmu2.g:1438:3: ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' )
            	    {
            	    // Xmu2.g:1438:3: ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' )
            	    // Xmu2.g:1439:4: (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';'
            	    {
            	    // Xmu2.g:1439:4: (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            	    // Xmu2.g:1440:5: a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1006);
            	    a11_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    						startIncompleteElement(element);
            	    						// initialize boolean attribute
            	    						{
            	    							Object value = false;
            	    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            	    						}
            	    					}
            	    					if (a11_0 != null) {
            	    						if (a11_0 != null) {
            	    							Object value = a11_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__VARIABLE_DECLARATIONS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_7_0_0_0, a11_0, true);
            	    						copyLocalizationInfos(a11_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[80]);
            	    			}

            	    a12=(Token)match(input,29,FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1034); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    					startIncompleteElement(element);
            	    					// initialize boolean attribute
            	    					{
            	    						Object value = false;
            	    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            	    					}
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_7_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a12, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[81]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[82]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[83]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[84]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[85]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[86]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[87]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[88]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[89]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[90]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[91]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[92]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[93]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[94]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[95]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[96]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[97]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[98]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[99]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[100]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[101]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[102]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[103]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[104]);
            	}

            // Xmu2.g:1518:2: ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==NAME||(LA11_0 >= 43 && LA11_0 <= 44)||LA11_0==49||LA11_0==61||LA11_0==63||LA11_0==68||LA11_0==71) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // Xmu2.g:1519:3: (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    {
                    // Xmu2.g:1519:3: (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:1520:4: a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1076);
                    a13_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    					}
                    				}
                    				if (a13_0 != null) {
                    					if (a13_0 != null) {
                    						Object value = a13_0;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__STATEMENT), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_8, a13_0, true);
                    					copyLocalizationInfos(a13_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[105]);
            	}

            a14=(Token)match(input,73,FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1102); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_9, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a14, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[106]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[108]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ModelRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ArithmeticRule"
    // Xmu2.g:1574:1: parse_edu_ustb_sei_mde_xmu2_ArithmeticRule returns [edu.ustb.sei.mde.xmu2.ArithmeticRule element = null] : a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}' ;
    public final edu.ustb.sei.mde.xmu2.ArithmeticRule parse_edu_ustb_sei_mde_xmu2_ArithmeticRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ArithmeticRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        edu.ustb.sei.mde.xmu2.Parameter a3_0 =null;

        edu.ustb.sei.mde.xmu2.Parameter a5_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a8_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xmu2.g:1577:2: (a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}' )
            // Xmu2.g:1578:2: a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}'
            {
            a0=(Token)match(input,50,FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1131); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[109]);
            	}

            // Xmu2.g:1592:2: (a1= NAME )
            // Xmu2.g:1593:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1149); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[110]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1170); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[111]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[112]);
            	}

            // Xmu2.g:1643:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==NAME||LA13_0==62||LA13_0==69) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // Xmu2.g:1644:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    {
                    // Xmu2.g:1644:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    // Xmu2.g:1645:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    {
                    // Xmu2.g:1645:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    // Xmu2.g:1646:5: a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1199);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[113]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[114]);
                    			}

                    // Xmu2.g:1672:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==21) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // Xmu2.g:1673:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    {
                    	    // Xmu2.g:1673:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    // Xmu2.g:1674:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    {
                    	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1240); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[115]);
                    	    					}

                    	    // Xmu2.g:1688:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    // Xmu2.g:1689:7: a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1274);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[116]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[117]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[118]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[119]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[120]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1348); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[121]);
            	}

            a7=(Token)match(input,71,FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1362); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[122]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[124]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[127]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[129]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[130]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[131]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[132]);
            	}

            // Xmu2.g:1768:2: ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==NAME||(LA14_0 >= 43 && LA14_0 <= 44)||LA14_0==49||LA14_0==61||LA14_0==63||LA14_0==68||LA14_0==71) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // Xmu2.g:1769:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            	    {
            	    // Xmu2.g:1769:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            	    // Xmu2.g:1770:4: a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1385);
            	    a8_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a8_0 != null) {
            	    					if (a8_0 != null) {
            	    						Object value = a8_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__STATEMENTS, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_6, a8_0, true);
            	    					copyLocalizationInfos(a8_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[133]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[134]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[135]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[136]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[137]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[138]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[139]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[140]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[141]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[142]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[143]);
            	}

            a9=(Token)match(input,73,FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1411); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_7, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[144]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[145]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[146]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ArithmeticRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_VariableDeclaration"
    // Xmu2.g:1824:1: parse_edu_ustb_sei_mde_xmu2_VariableDeclaration returns [edu.ustb.sei.mde.xmu2.VariableDeclaration element = null] : (a0= NAME ) a1= ':' (a2= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.VariableDeclaration parse_edu_ustb_sei_mde_xmu2_VariableDeclaration() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.VariableDeclaration element =  null;

        int parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xmu2.g:1827:2: ( (a0= NAME ) a1= ':' (a2= TYPE ) )
            // Xmu2.g:1828:2: (a0= NAME ) a1= ':' (a2= TYPE )
            {
            // Xmu2.g:1828:2: (a0= NAME )
            // Xmu2.g:1829:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1444); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[147]);
            	}

            a1=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1465); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[148]);
            	}

            // Xmu2.g:1878:2: (a2= TYPE )
            // Xmu2.g:1879:3: a2= TYPE
            {
            a2=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1483); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[149]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[152]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[153]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[156]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[157]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[159]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[160]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[161]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[162]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[163]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[165]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[166]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[167]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[168]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[169]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[170]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[171]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_VariableDeclaration"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_Parameter"
    // Xmu2.g:1942:1: parse_edu_ustb_sei_mde_xmu2_Parameter returns [edu.ustb.sei.mde.xmu2.Parameter element = null] : ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.Parameter parse_edu_ustb_sei_mde_xmu2_Parameter() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.Parameter element =  null;

        int parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xmu2.g:1945:2: ( ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) )
            // Xmu2.g:1946:2: ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE )
            {
            // Xmu2.g:1946:2: ( (a0= 'source' |a1= 'view' )? )
            // Xmu2.g:1947:3: (a0= 'source' |a1= 'view' )?
            {
            // Xmu2.g:1947:3: (a0= 'source' |a1= 'view' )?
            int alt15=3;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==62) ) {
                alt15=1;
            }
            else if ( (LA15_0==69) ) {
                alt15=2;
            }
            switch (alt15) {
                case 1 :
                    // Xmu2.g:1948:4: a0= 'source'
                    {
                    a0=(Token)match(input,62,FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_Parameter1528); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1964:8: a1= 'view'
                    {
                    a1=(Token)match(input,69,FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_Parameter1543); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[172]);
            	}

            // Xmu2.g:1986:2: (a4= NAME )
            // Xmu2.g:1987:3: a4= NAME
            {
            a4=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1568); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a4 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[173]);
            	}

            a5=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_Parameter1589); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            			startIncompleteElement(element);
            			// initialize enumeration attribute
            			Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            			element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[174]);
            	}

            // Xmu2.g:2042:2: (a6= TYPE )
            // Xmu2.g:2043:3: a6= TYPE
            {
            a6=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1607); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a6 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_3, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[175]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[176]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[177]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[178]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_Parameter"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"
    // Xmu2.g:2090:1: parse_edu_ustb_sei_mde_xmu2_pattern_Pattern returns [edu.ustb.sei.mde.xmu2.pattern.Pattern element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.Pattern parse_edu_ustb_sei_mde_xmu2_pattern_Pattern() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.Pattern element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternNode a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xmu2.g:2093:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? )
            // Xmu2.g:2094:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            {
            // Xmu2.g:2094:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:2095:3: a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1647);
            a0_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[179]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[180]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[181]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[182]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[183]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[184]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[185]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[187]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[188]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[189]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[190]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[191]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[192]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[194]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[195]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[196]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[197]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[199]);
            	}

            // Xmu2.g:2140:2: ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==36) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // Xmu2.g:2141:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    {
                    // Xmu2.g:2141:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    // Xmu2.g:2142:4: a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']'
                    {
                    a1=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1674); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[200]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[201]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[202]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[203]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[204]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[205]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[206]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[207]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[208]);
                    			}

                    // Xmu2.g:2164:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt16=8;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        int LA16_1 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt16=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA16_2 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt16=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA16_3 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA16_4 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 65:
                        {
                        int LA16_5 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA16_6 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA16_7 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA16_8 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA16_9 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA16_10 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA16_11 = input.LA(2);

                        if ( (synpred17_Xmu2()) ) {
                            alt16=1;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt16=2;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt16=3;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt16=4;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt16=5;
                        }
                        else if ( (synpred23_Xmu2()) ) {
                            alt16=7;
                        }
                        else if ( (true) ) {
                            alt16=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 16, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 16, 0, input);

                        throw nvae;

                    }

                    switch (alt16) {
                        case 1 :
                            // Xmu2.g:2165:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1700);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:2184:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1720);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:2203:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1740);
                            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_2 != null) {
                            						if (a2_2 != null) {
                            							Object value = a2_2;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_2, true);
                            						copyLocalizationInfos(a2_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:2222:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1760);
                            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_3 != null) {
                            						if (a2_3 != null) {
                            							Object value = a2_3;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_3, true);
                            						copyLocalizationInfos(a2_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:2241:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1780);
                            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_4 != null) {
                            						if (a2_4 != null) {
                            							Object value = a2_4;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_4, true);
                            						copyLocalizationInfos(a2_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:2260:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1800);
                            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_5 != null) {
                            						if (a2_5 != null) {
                            							Object value = a2_5;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_5, true);
                            						copyLocalizationInfos(a2_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:2279:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1820);
                            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_6 != null) {
                            						if (a2_6 != null) {
                            							Object value = a2_6;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_6, true);
                            						copyLocalizationInfos(a2_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:2298:10: a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1840);
                            a2_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_7 != null) {
                            						if (a2_7 != null) {
                            							Object value = a2_7;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_7, true);
                            						copyLocalizationInfos(a2_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[209]);
                    			}

                    a3=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1868); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[210]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[211]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[212]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[213]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[214]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[215]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[216]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[217]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[218]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[219]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[220]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[221]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[222]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[223]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[224]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[225]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[226]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[227]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[228]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[229]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[230]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[231]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[232]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[233]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[234]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[235]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[236]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[237]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[238]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[239]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[240]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[241]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[242]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[243]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[244]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[245]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[246]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[247]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[248]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[249]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"
    // Xmu2.g:2384:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode returns [edu.ustb.sei.mde.xmu2.pattern.PatternNode element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.PatternNode parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternNode element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.VariableDeclaration a0_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xmu2.g:2387:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? )
            // Xmu2.g:2388:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
            {
            // Xmu2.g:2388:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            // Xmu2.g:2389:3: a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1920);
            a0_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[250]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[251]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[252]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[253]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[254]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[255]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[256]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[258]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[259]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[260]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[261]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[262]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[263]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[264]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[265]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[266]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[267]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[268]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[269]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[270]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[271]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[272]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[273]);
            	}

            // Xmu2.g:2437:2: ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==71) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==NAME) ) {
                    int LA20_3 = input.LA(3);

                    if ( (LA20_3==23||LA20_3==32) ) {
                        alt20=1;
                    }
                }
                else if ( (LA20_1==73) ) {
                    int LA20_4 = input.LA(3);

                    if ( (synpred27_Xmu2()) ) {
                        alt20=1;
                    }
                }
            }
            switch (alt20) {
                case 1 :
                    // Xmu2.g:2438:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                    {
                    // Xmu2.g:2438:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                    // Xmu2.g:2439:4: a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}'
                    {
                    a1=(Token)match(input,71,FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1947); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[274]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[275]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[276]);
                    			}

                    // Xmu2.g:2455:4: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
                    int alt19=2;
                    int LA19_0 = input.LA(1);

                    if ( (LA19_0==NAME) ) {
                        alt19=1;
                    }
                    switch (alt19) {
                        case 1 :
                            // Xmu2.g:2456:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            {
                            // Xmu2.g:2456:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            // Xmu2.g:2457:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            {
                            // Xmu2.g:2457:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            // Xmu2.g:2458:7: a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1988);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            							if (terminateParsing) {
                            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            							}
                            							if (element == null) {
                            								element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            								startIncompleteElement(element);
                            							}
                            							if (a2_0 != null) {
                            								if (a2_0 != null) {
                            									Object value = a2_0;
                            									addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                            									completedElement(value, true);
                            								}
                            								collectHiddenTokens(element);
                            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_0, a2_0, true);
                            								copyLocalizationInfos(a2_0, element);
                            							}
                            						}

                            }


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[277]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[278]);
                            					}

                            // Xmu2.g:2484:6: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            loop18:
                            do {
                                int alt18=2;
                                int LA18_0 = input.LA(1);

                                if ( (LA18_0==21) ) {
                                    alt18=1;
                                }


                                switch (alt18) {
                            	case 1 :
                            	    // Xmu2.g:2485:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    {
                            	    // Xmu2.g:2485:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    // Xmu2.g:2486:8: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    {
                            	    a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2043); if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    								if (element == null) {
                            	    									element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            	    									startIncompleteElement(element);
                            	    								}
                            	    								collectHiddenTokens(element);
                            	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_1_0_0_0, null, true);
                            	    								copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                            	    							}

                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[279]);
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[280]);
                            	    							}

                            	    // Xmu2.g:2501:8: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    // Xmu2.g:2502:9: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            	    {
                            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2085);
                            	    a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            	    state._fsp--;
                            	    if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    									if (terminateParsing) {
                            	    										throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            	    									}
                            	    									if (element == null) {
                            	    										element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            	    										startIncompleteElement(element);
                            	    									}
                            	    									if (a4_0 != null) {
                            	    										if (a4_0 != null) {
                            	    											Object value = a4_0;
                            	    											addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                            	    											completedElement(value, true);
                            	    										}
                            	    										collectHiddenTokens(element);
                            	    										retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_1_0_0_1, a4_0, true);
                            	    										copyLocalizationInfos(a4_0, element);
                            	    									}
                            	    								}

                            	    }


                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[281]);
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[282]);
                            	    							}

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop18;
                                }
                            } while (true);


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[283]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[284]);
                            					}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[285]);
                    			}

                    a5=(Token)match(input,73,FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2189); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[286]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[287]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[288]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[289]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[290]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[291]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[292]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[293]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[294]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[295]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[296]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[297]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[298]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[299]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[300]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[301]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[302]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[303]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[304]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[305]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[306]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[307]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[308]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[309]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[310]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[311]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[312]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[313]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[314]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[315]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[316]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[317]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[318]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[319]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[320]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[321]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[322]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[323]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[324]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[325]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[326]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[327]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[328]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[329]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[330]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[331]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"
    // Xmu2.g:2610:1: parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element = null] : (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternNode a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xmu2.g:2613:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) )
            // Xmu2.g:2614:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            {
            // Xmu2.g:2614:2: (a0= NAME )
            // Xmu2.g:2615:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2241); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            				}
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[332]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[333]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[334]);
            	}

            // Xmu2.g:2661:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==23) ) {
                int LA21_1 = input.LA(2);

                if ( (LA21_1==46||LA21_1==48||LA21_1==60) ) {
                    alt21=1;
                }
            }
            switch (alt21) {
                case 1 :
                    // Xmu2.g:2662:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:2662:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:2663:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:2663:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:2664:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2277);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[335]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[336]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[337]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[338]);
            	}

            // Xmu2.g:2703:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==23) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // Xmu2.g:2704:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:2704:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:2705:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:2705:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:2706:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2333);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[339]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[340]);
            	}

            a3=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2374); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[341]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[342]);
            	}

            // Xmu2.g:2763:2: ( (a4= '?' )? )
            // Xmu2.g:2764:3: (a4= '?' )?
            {
            // Xmu2.g:2764:3: (a4= '?' )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==35) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // Xmu2.g:2765:4: a4= '?'
                    {
                    a4=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2397); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[343]);
            	}

            // Xmu2.g:2789:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:2790:3: a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2422);
            a7_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            				}
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__TARGET_NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_5, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[344]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[345]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"
    // Xmu2.g:2823:1: parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element = null] : (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a7_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xmu2.g:2826:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:2827:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:2827:2: (a0= NAME )
            // Xmu2.g:2828:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2459); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
            				}
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[346]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[347]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[348]);
            	}

            // Xmu2.g:2874:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==23) ) {
                int LA24_1 = input.LA(2);

                if ( (LA24_1==46||LA24_1==48||LA24_1==60) ) {
                    alt24=1;
                }
            }
            switch (alt24) {
                case 1 :
                    // Xmu2.g:2875:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:2875:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:2876:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:2876:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:2877:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2495);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[349]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[350]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[351]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[352]);
            	}

            // Xmu2.g:2916:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==23) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // Xmu2.g:2917:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:2917:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:2918:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:2918:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:2919:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2551);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[353]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[354]);
            	}

            a3=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2592); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[355]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[356]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[357]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[358]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[359]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[360]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[361]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[362]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[363]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[364]);
            	}

            // Xmu2.g:2984:2: ( (a4= '?' )? )
            // Xmu2.g:2985:3: (a4= '?' )?
            {
            // Xmu2.g:2985:3: (a4= '?' )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==35) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // Xmu2.g:2986:4: a4= '?'
                    {
                    a4=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2615); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_4, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[365]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[366]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[367]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[368]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[369]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[370]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[371]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[372]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[373]);
            	}

            // Xmu2.g:3018:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt27=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA27_1 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt27=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA27_2 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt27=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA27_3 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA27_4 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA27_5 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA27_6 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA27_7 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA27_8 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA27_9 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA27_10 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA27_11 = input.LA(2);

                if ( (synpred34_Xmu2()) ) {
                    alt27=1;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt27=2;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt27=3;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt27=4;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt27=5;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt27=7;
                }
                else if ( (true) ) {
                    alt27=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;

            }

            switch (alt27) {
                case 1 :
                    // Xmu2.g:3019:3: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2640);
                    a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_0 != null) {
                    				if (a7_0 != null) {
                    					Object value = a7_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_0, true);
                    				copyLocalizationInfos(a7_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3043:6: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2654);
                    a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_1 != null) {
                    				if (a7_1 != null) {
                    					Object value = a7_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_1, true);
                    				copyLocalizationInfos(a7_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3067:6: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2668);
                    a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_2 != null) {
                    				if (a7_2 != null) {
                    					Object value = a7_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_2, true);
                    				copyLocalizationInfos(a7_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:3091:6: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2682);
                    a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_3 != null) {
                    				if (a7_3 != null) {
                    					Object value = a7_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_3, true);
                    				copyLocalizationInfos(a7_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:3115:6: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2696);
                    a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_4 != null) {
                    				if (a7_4 != null) {
                    					Object value = a7_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_4, true);
                    				copyLocalizationInfos(a7_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:3139:6: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2710);
                    a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_5 != null) {
                    				if (a7_5 != null) {
                    					Object value = a7_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_5, true);
                    				copyLocalizationInfos(a7_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:3163:6: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2724);
                    a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_6 != null) {
                    				if (a7_6 != null) {
                    					Object value = a7_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_6, true);
                    				copyLocalizationInfos(a7_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:3187:6: a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2738);
                    a7_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_7 != null) {
                    				if (a7_7 != null) {
                    					Object value = a7_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_7, true);
                    				copyLocalizationInfos(a7_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[374]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[375]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"
    // Xmu2.g:3220:1: parse_edu_ustb_sei_mde_xmu2_expression_LoopPath returns [edu.ustb.sei.mde.xmu2.expression.LoopPath element = null] : a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.LoopPath parse_edu_ustb_sei_mde_xmu2_expression_LoopPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.LoopPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        Token a10=null;
        edu.ustb.sei.mde.xmu2.VariableDeclaration a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a9_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xmu2.g:3223:2: (a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' )
            // Xmu2.g:3224:2: a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')'
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2771); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[376]);
            	}

            // Xmu2.g:3238:2: ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) )
            // Xmu2.g:3239:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            {
            // Xmu2.g:3239:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            int alt28=3;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt28=1;
                }
                break;
            case 48:
                {
                alt28=2;
                }
                break;
            case 46:
                {
                alt28=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;

            }

            switch (alt28) {
                case 1 :
                    // Xmu2.g:3240:4: a1= 'select'
                    {
                    a1=(Token)match(input,60,FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2794); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.SELECT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3253:8: a2= 'forAll'
                    {
                    a2=(Token)match(input,48,FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2809); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.FOR_ALL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3266:8: a3= 'exists'
                    {
                    a3=(Token)match(input,46,FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2824); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.EXISTS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[377]);
            	}

            a6=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2845); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[378]);
            	}

            // Xmu2.g:3300:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            // Xmu2.g:3301:3: a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2863);
            a7_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_3, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[379]);
            	}

            a8=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2881); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[380]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[381]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[382]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[383]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[384]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[385]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[386]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[387]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[388]);
            	}

            // Xmu2.g:3348:2: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt29=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA29_1 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt29=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA29_2 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt29=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA29_3 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA29_4 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA29_5 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA29_6 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA29_7 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA29_8 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA29_9 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA29_10 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA29_11 = input.LA(2);

                if ( (synpred43_Xmu2()) ) {
                    alt29=1;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt29=2;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt29=3;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt29=4;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt29=5;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt29=7;
                }
                else if ( (true) ) {
                    alt29=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;

            }

            switch (alt29) {
                case 1 :
                    // Xmu2.g:3349:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2899);
                    a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_0 != null) {
                    				if (a9_0 != null) {
                    					Object value = a9_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_0, true);
                    				copyLocalizationInfos(a9_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3368:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2913);
                    a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_1 != null) {
                    				if (a9_1 != null) {
                    					Object value = a9_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_1, true);
                    				copyLocalizationInfos(a9_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3387:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2927);
                    a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_2 != null) {
                    				if (a9_2 != null) {
                    					Object value = a9_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_2, true);
                    				copyLocalizationInfos(a9_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:3406:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2941);
                    a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_3 != null) {
                    				if (a9_3 != null) {
                    					Object value = a9_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_3, true);
                    				copyLocalizationInfos(a9_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:3425:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2955);
                    a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_4 != null) {
                    				if (a9_4 != null) {
                    					Object value = a9_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_4, true);
                    				copyLocalizationInfos(a9_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:3444:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2969);
                    a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_5 != null) {
                    				if (a9_5 != null) {
                    					Object value = a9_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_5, true);
                    				copyLocalizationInfos(a9_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:3463:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2983);
                    a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_6 != null) {
                    				if (a9_6 != null) {
                    					Object value = a9_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_6, true);
                    				copyLocalizationInfos(a9_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:3482:6: a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2997);
                    a9_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_7 != null) {
                    				if (a9_7 != null) {
                    					Object value = a9_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_7, true);
                    				copyLocalizationInfos(a9_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[389]);
            	}

            a10=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath3015); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[390]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[391]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[392]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[393]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[394]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[395]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[396]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[397]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[398]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[399]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[400]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[401]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[402]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[403]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[404]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[405]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[406]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[407]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[408]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[409]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[410]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[413]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[414]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[415]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[416]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[417]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[418]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[419]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[420]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[426]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[428]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"
    // Xmu2.g:3561:1: parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath returns [edu.ustb.sei.mde.xmu2.expression.FeaturePath element = null] : a0= '.' (a1= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.FeaturePath parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.FeaturePath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xmu2.g:3564:2: (a0= '.' (a1= NAME ) )
            // Xmu2.g:3565:2: a0= '.' (a1= NAME )
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3044); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[429]);
            	}

            // Xmu2.g:3579:2: (a1= NAME )
            // Xmu2.g:3580:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3062); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[430]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[431]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[432]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[433]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[434]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[435]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[436]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[437]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[438]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[439]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[443]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[452]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[456]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[457]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[458]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[459]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[460]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[461]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[462]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[463]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[464]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[465]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[466]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[467]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[468]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"
    // Xmu2.g:3655:1: parse_edu_ustb_sei_mde_xmu2_expression_OperationPath returns [edu.ustb.sei.mde.xmu2.expression.OperationPath element = null] : a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.OperationPath parse_edu_ustb_sei_mde_xmu2_expression_OperationPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.OperationPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a3_7 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xmu2.g:3658:2: (a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' )
            // Xmu2.g:3659:2: a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')'
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3098); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[469]);
            	}

            // Xmu2.g:3673:2: (a1= NAME )
            // Xmu2.g:3674:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3116); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[470]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3137); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[471]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[472]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[473]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[474]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[475]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[476]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[477]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[478]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[479]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[480]);
            	}

            // Xmu2.g:3732:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==BOOLEAN||(LA33_0 >= NAME && LA33_0 <= QUOTED_39_39_92)||LA33_0==TYPE||LA33_0==16||LA33_0==22||(LA33_0 >= 55 && LA33_0 <= 56)||LA33_0==65) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // Xmu2.g:3733:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:3733:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:3734:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:3734:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt30=8;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        int LA30_1 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt30=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA30_2 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt30=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA30_3 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA30_4 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 65:
                        {
                        int LA30_5 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA30_6 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA30_7 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA30_8 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA30_9 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA30_10 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA30_11 = input.LA(2);

                        if ( (synpred50_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                        throw nvae;

                    }

                    switch (alt30) {
                        case 1 :
                            // Xmu2.g:3735:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3166);
                            a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_0 != null) {
                            						if (a3_0 != null) {
                            							Object value = a3_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_0, true);
                            						copyLocalizationInfos(a3_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:3754:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3186);
                            a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_1 != null) {
                            						if (a3_1 != null) {
                            							Object value = a3_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_1, true);
                            						copyLocalizationInfos(a3_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:3773:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3206);
                            a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_2 != null) {
                            						if (a3_2 != null) {
                            							Object value = a3_2;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_2, true);
                            						copyLocalizationInfos(a3_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:3792:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3226);
                            a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_3 != null) {
                            						if (a3_3 != null) {
                            							Object value = a3_3;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_3, true);
                            						copyLocalizationInfos(a3_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:3811:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3246);
                            a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_4 != null) {
                            						if (a3_4 != null) {
                            							Object value = a3_4;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_4, true);
                            						copyLocalizationInfos(a3_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:3830:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3266);
                            a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_5 != null) {
                            						if (a3_5 != null) {
                            							Object value = a3_5;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_5, true);
                            						copyLocalizationInfos(a3_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:3849:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3286);
                            a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_6 != null) {
                            						if (a3_6 != null) {
                            							Object value = a3_6;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_6, true);
                            						copyLocalizationInfos(a3_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:3868:10: a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3306);
                            a3_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_7 != null) {
                            						if (a3_7 != null) {
                            							Object value = a3_7;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_7, true);
                            						copyLocalizationInfos(a3_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[481]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[482]);
                    			}

                    // Xmu2.g:3894:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==21) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // Xmu2.g:3895:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:3895:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:3896:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3347); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[483]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[484]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[485]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[486]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[487]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[488]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[489]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[490]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[491]);
                    	    					}

                    	    // Xmu2.g:3918:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt31=8;
                    	    switch ( input.LA(1) ) {
                    	    case 55:
                    	        {
                    	        int LA31_1 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt31=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 22:
                    	        {
                    	        int LA31_2 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt31=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NAME:
                    	        {
                    	        int LA31_3 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 56:
                    	        {
                    	        int LA31_4 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        int LA31_5 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA31_6 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA31_7 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA31_8 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA31_9 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA31_10 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 10, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 16:
                    	        {
                    	        int LA31_11 = input.LA(2);

                    	        if ( (synpred57_Xmu2()) ) {
                    	            alt31=1;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt31=2;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt31=3;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt31=4;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt31=5;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt31=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt31=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 31, 11, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 31, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt31) {
                    	        case 1 :
                    	            // Xmu2.g:3919:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3381);
                    	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_0 != null) {
                    	            								if (a5_0 != null) {
                    	            									Object value = a5_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	            								copyLocalizationInfos(a5_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:3938:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3407);
                    	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_1 != null) {
                    	            								if (a5_1 != null) {
                    	            									Object value = a5_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_1, true);
                    	            								copyLocalizationInfos(a5_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 3 :
                    	            // Xmu2.g:3957:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3433);
                    	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_2 != null) {
                    	            								if (a5_2 != null) {
                    	            									Object value = a5_2;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_2, true);
                    	            								copyLocalizationInfos(a5_2, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 4 :
                    	            // Xmu2.g:3976:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3459);
                    	            a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_3 != null) {
                    	            								if (a5_3 != null) {
                    	            									Object value = a5_3;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_3, true);
                    	            								copyLocalizationInfos(a5_3, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 5 :
                    	            // Xmu2.g:3995:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3485);
                    	            a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_4 != null) {
                    	            								if (a5_4 != null) {
                    	            									Object value = a5_4;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_4, true);
                    	            								copyLocalizationInfos(a5_4, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 6 :
                    	            // Xmu2.g:4014:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3511);
                    	            a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_5 != null) {
                    	            								if (a5_5 != null) {
                    	            									Object value = a5_5;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_5, true);
                    	            								copyLocalizationInfos(a5_5, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 7 :
                    	            // Xmu2.g:4033:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3537);
                    	            a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_6 != null) {
                    	            								if (a5_6 != null) {
                    	            									Object value = a5_6;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_6, true);
                    	            								copyLocalizationInfos(a5_6, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 8 :
                    	            // Xmu2.g:4052:14: a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3563);
                    	            a5_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_7 != null) {
                    	            								if (a5_7 != null) {
                    	            									Object value = a5_7;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_7, true);
                    	            								copyLocalizationInfos(a5_7, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[492]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[493]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[494]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[495]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[496]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3637); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[497]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[498]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[499]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[500]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[501]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[502]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[503]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[504]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[505]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[506]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[507]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[508]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[509]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[510]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[511]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[512]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[513]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[514]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[515]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[516]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[517]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[518]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[519]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[520]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[521]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[522]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[523]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[524]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[525]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[526]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[527]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[528]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[529]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[530]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[531]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[532]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[533]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[534]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[535]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"
    // Xmu2.g:4147:1: parse_edu_ustb_sei_mde_xmu2_expression_PositionPath returns [edu.ustb.sei.mde.xmu2.expression.PositionPath element = null] : a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.PositionPath parse_edu_ustb_sei_mde_xmu2_expression_PositionPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PositionPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a7_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xmu2.g:4150:2: (a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' )
            // Xmu2.g:4151:2: a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')'
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3666); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[536]);
            	}

            // Xmu2.g:4165:2: ( (a1= 'first' |a2= 'last' |a3= 'at' ) )
            // Xmu2.g:4166:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            {
            // Xmu2.g:4166:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            int alt34=3;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt34=1;
                }
                break;
            case 52:
                {
                alt34=2;
                }
                break;
            case 39:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;

            }

            switch (alt34) {
                case 1 :
                    // Xmu2.g:4167:4: a1= 'first'
                    {
                    a1=(Token)match(input,47,FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3689); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.FIRST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4180:8: a2= 'last'
                    {
                    a2=(Token)match(input,52,FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3704); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.LAST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4193:8: a3= 'at'
                    {
                    a3=(Token)match(input,39,FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3719); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.AT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[537]);
            	}

            a6=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3740); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[538]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[539]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[540]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[541]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[542]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[543]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[544]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[546]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[547]);
            	}

            // Xmu2.g:4236:2: ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==BOOLEAN||(LA36_0 >= NAME && LA36_0 <= QUOTED_39_39_92)||LA36_0==TYPE||LA36_0==16||LA36_0==22||(LA36_0 >= 55 && LA36_0 <= 56)||LA36_0==65) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // Xmu2.g:4237:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    {
                    // Xmu2.g:4237:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt35=8;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        int LA35_1 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt35=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA35_2 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt35=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA35_3 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA35_4 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 65:
                        {
                        int LA35_5 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA35_6 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA35_7 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA35_8 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA35_9 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA35_10 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA35_11 = input.LA(2);

                        if ( (synpred68_Xmu2()) ) {
                            alt35=1;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt35=2;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt35=3;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt35=4;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt35=5;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt35=7;
                        }
                        else if ( (true) ) {
                            alt35=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 35, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 35, 0, input);

                        throw nvae;

                    }

                    switch (alt35) {
                        case 1 :
                            // Xmu2.g:4238:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3763);
                            a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_0 != null) {
                            					if (a7_0 != null) {
                            						Object value = a7_0;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_0, true);
                            					copyLocalizationInfos(a7_0, element);
                            				}
                            			}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:4257:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3780);
                            a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_1 != null) {
                            					if (a7_1 != null) {
                            						Object value = a7_1;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_1, true);
                            					copyLocalizationInfos(a7_1, element);
                            				}
                            			}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:4276:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3797);
                            a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_2 != null) {
                            					if (a7_2 != null) {
                            						Object value = a7_2;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_2, true);
                            					copyLocalizationInfos(a7_2, element);
                            				}
                            			}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:4295:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3814);
                            a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_3 != null) {
                            					if (a7_3 != null) {
                            						Object value = a7_3;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_3, true);
                            					copyLocalizationInfos(a7_3, element);
                            				}
                            			}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:4314:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3831);
                            a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_4 != null) {
                            					if (a7_4 != null) {
                            						Object value = a7_4;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_4, true);
                            					copyLocalizationInfos(a7_4, element);
                            				}
                            			}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:4333:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3848);
                            a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_5 != null) {
                            					if (a7_5 != null) {
                            						Object value = a7_5;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_5, true);
                            					copyLocalizationInfos(a7_5, element);
                            				}
                            			}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:4352:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3865);
                            a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_6 != null) {
                            					if (a7_6 != null) {
                            						Object value = a7_6;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_6, true);
                            					copyLocalizationInfos(a7_6, element);
                            				}
                            			}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:4371:8: a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3882);
                            a7_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_7 != null) {
                            					if (a7_7 != null) {
                            						Object value = a7_7;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_7, true);
                            					copyLocalizationInfos(a7_7, element);
                            				}
                            			}

                            }
                            break;

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[548]);
            	}

            a8=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3908); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[549]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[550]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[551]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[552]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[553]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[554]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[555]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[556]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[557]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[558]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[559]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[560]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[561]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[562]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[563]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[564]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[565]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[566]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[567]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[568]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[569]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[570]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[571]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[572]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[573]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[574]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[575]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[576]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[577]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[578]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[579]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[580]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[581]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[582]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[583]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[584]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[585]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[586]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[587]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"
    // Xmu2.g:4451:1: parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression returns [edu.ustb.sei.mde.xmu2.expression.VariableExpression element = null] : (a0= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.VariableExpression parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.VariableExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xmu2.g:4454:2: ( (a0= NAME ) )
            // Xmu2.g:4455:2: (a0= NAME )
            {
            // Xmu2.g:4455:2: (a0= NAME )
            // Xmu2.g:4456:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3941); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createVariableExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_15_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[588]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[589]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[590]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[591]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[592]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[593]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[594]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[595]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[596]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[597]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[598]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[599]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[600]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[601]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[602]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[603]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[604]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[605]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[606]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[607]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[608]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[609]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[610]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[611]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[612]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[613]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[614]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[615]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[616]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[617]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[618]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[619]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[620]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[621]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[626]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"
    // Xmu2.g:4531:1: parse_edu_ustb_sei_mde_xmu2_expression_PathExpression returns [edu.ustb.sei.mde.xmu2.expression.PathExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.PathExpression parse_edu_ustb_sei_mde_xmu2_expression_PathExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.ConstantExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.Path a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xmu2.g:4534:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ )
            // Xmu2.g:4535:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            {
            // Xmu2.g:4535:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt37=3;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt37=1;
                }
                break;
            case BOOLEAN:
            case NUMBER:
            case OBJ_URI:
            case QUOTED_39_39_92:
            case TYPE:
            case 56:
            case 65:
                {
                alt37=2;
                }
                break;
            case 16:
                {
                alt37=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;

            }

            switch (alt37) {
                case 1 :
                    // Xmu2.g:4536:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3981);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4555:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3995);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4574:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4009);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[627]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[630]);
            	}

            // Xmu2.g:4602:2: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            int cnt38=0;
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==23) ) {
                    int LA38_2 = input.LA(2);

                    if ( (LA38_2==39||(LA38_2 >= 46 && LA38_2 <= 48)||LA38_2==52||LA38_2==60) ) {
                        alt38=1;
                    }


                }
                else if ( (LA38_0==24) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // Xmu2.g:4603:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    {
            	    // Xmu2.g:4603:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    // Xmu2.g:4604:4: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4036);
            	    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_Path();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__PATH, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt38 >= 1 ) break loop38;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(38, input);
                        throw eee;
                }
                cnt38++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[632]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[633]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[636]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[637]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[638]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[639]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[641]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[642]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[643]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[644]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[645]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[646]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[647]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[648]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[649]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[650]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[651]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[652]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[653]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[654]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[655]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[656]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[657]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[658]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[659]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[660]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[661]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[662]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[663]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[664]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[665]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[666]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[667]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[668]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[669]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"
    // Xmu2.g:4670:1: parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression returns [edu.ustb.sei.mde.xmu2.expression.EmptyExpression element = null] : ( (a0= 'null' |a1= 'undefined' ) ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EmptyExpression parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EmptyExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xmu2.g:4673:2: ( ( (a0= 'null' |a1= 'undefined' ) ) )
            // Xmu2.g:4674:2: ( (a0= 'null' |a1= 'undefined' ) )
            {
            // Xmu2.g:4674:2: ( (a0= 'null' |a1= 'undefined' ) )
            // Xmu2.g:4675:3: (a0= 'null' |a1= 'undefined' )
            {
            // Xmu2.g:4675:3: (a0= 'null' |a1= 'undefined' )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==56) ) {
                alt39=1;
            }
            else if ( (LA39_0==65) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }
            switch (alt39) {
                case 1 :
                    // Xmu2.g:4676:4: a0= 'null'
                    {
                    a0=(Token)match(input,56,FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4086); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_17_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.NULL_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4689:8: a1= 'undefined'
                    {
                    a1=(Token)match(input,65,FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4101); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_17_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.EMPTY_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[670]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[671]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[672]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[673]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[674]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[675]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[676]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[677]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[678]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[679]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[680]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[681]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[682]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[683]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[684]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[685]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[686]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[687]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[688]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[689]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[690]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[691]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[692]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[693]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[694]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[695]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[696]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[697]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[698]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[699]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[700]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[701]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[702]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[703]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[704]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[705]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[706]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[707]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[708]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"
    // Xmu2.g:4749:1: parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element = null] : (a0= QUOTED_39_39_92 ) ;
    public final edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xmu2.g:4752:2: ( (a0= QUOTED_39_39_92 ) )
            // Xmu2.g:4753:2: (a0= QUOTED_39_39_92 )
            {
            // Xmu2.g:4753:2: (a0= QUOTED_39_39_92 )
            // Xmu2.g:4754:3: a0= QUOTED_39_39_92
            {
            a0=(Token)match(input,QUOTED_39_39_92,FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression4141); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createStringLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_39_39_92");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_18_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[709]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[710]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[711]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[712]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[713]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[714]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[715]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[716]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[717]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[718]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[719]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[720]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[721]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[722]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[723]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[726]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[736]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[737]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[738]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[739]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[740]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[741]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[742]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[743]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[744]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[745]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[746]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[747]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"
    // Xmu2.g:4829:1: parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element = null] : (a0= NUMBER ) ;
    public final edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xmu2.g:4832:2: ( (a0= NUMBER ) )
            // Xmu2.g:4833:2: (a0= NUMBER )
            {
            // Xmu2.g:4833:2: (a0= NUMBER )
            // Xmu2.g:4834:3: a0= NUMBER
            {
            a0=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression4181); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createIntegerLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_19_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[748]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[749]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[750]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[751]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[752]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[753]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[754]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[755]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[756]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[757]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[758]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[770]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[771]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[772]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[773]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[774]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[775]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[776]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[780]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[782]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[783]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[784]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[785]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[786]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"
    // Xmu2.g:4909:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element = null] : (a0= BOOLEAN ) ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xmu2.g:4912:2: ( (a0= BOOLEAN ) )
            // Xmu2.g:4913:2: (a0= BOOLEAN )
            {
            // Xmu2.g:4913:2: (a0= BOOLEAN )
            // Xmu2.g:4914:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression4221); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_20_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[787]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[788]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[789]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[790]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[791]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[792]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[793]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[794]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[795]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[796]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[797]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[798]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[799]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[800]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[801]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[802]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[803]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[804]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[805]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[806]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[807]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[808]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[809]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[810]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[811]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[812]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[813]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[814]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[815]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[816]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[817]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[820]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[823]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[824]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[825]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"
    // Xmu2.g:4989:1: parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element = null] : (a0= TYPE ) a1= '::' (a2= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xmu2.g:4992:2: ( (a0= TYPE ) a1= '::' (a2= NAME ) )
            // Xmu2.g:4993:2: (a0= TYPE ) a1= '::' (a2= NAME )
            {
            // Xmu2.g:4993:2: (a0= TYPE )
            // Xmu2.g:4994:3: a0= TYPE
            {
            a0=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4261); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnum proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnum();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnum>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[826]);
            	}

            a1=(Token)match(input,27,FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4282); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[827]);
            	}

            // Xmu2.g:5047:2: (a2= NAME )
            // Xmu2.g:5048:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4300); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnumLiteral proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnumLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnumLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionValueReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[828]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[829]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[830]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[831]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[832]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[833]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[834]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[835]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[836]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[837]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[838]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[839]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[840]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[841]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[842]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[843]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[845]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[846]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[847]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[848]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[849]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[853]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[854]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[855]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[856]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[863]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[864]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[865]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[866]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"
    // Xmu2.g:5127:1: parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression returns [edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element = null] : (a0= OBJ_URI ) ;
    public final edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xmu2.g:5130:2: ( (a0= OBJ_URI ) )
            // Xmu2.g:5131:2: (a0= OBJ_URI )
            {
            // Xmu2.g:5131:2: (a0= OBJ_URI )
            // Xmu2.g:5132:3: a0= OBJ_URI
            {
            a0=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression4340); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createObjectURIExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EObject proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEObject();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression, org.eclipse.emf.ecore.EObject>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectURIExpressionObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[868]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[869]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[870]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[871]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[872]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[873]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[874]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[875]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[876]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[879]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[880]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[884]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[885]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[886]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[887]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[888]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[889]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[890]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[891]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[892]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[893]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[894]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[895]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[896]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[897]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[900]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[901]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[902]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[903]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[904]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[905]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"
    // Xmu2.g:5211:1: parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression returns [edu.ustb.sei.mde.xmu2.expression.ParenExpression element = null] : a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.ParenExpression parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ParenExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xmu2.g:5214:2: (a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' )
            // Xmu2.g:5215:2: a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')'
            {
            a0=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4376); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[906]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[907]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[908]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[911]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[912]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[913]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[914]);
            	}

            // Xmu2.g:5237:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt40=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA40_1 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt40=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA40_2 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt40=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA40_3 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA40_4 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA40_5 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA40_6 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA40_7 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA40_8 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA40_9 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA40_10 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA40_11 = input.LA(2);

                if ( (synpred80_Xmu2()) ) {
                    alt40=1;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt40=2;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt40=3;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt40=4;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt40=5;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt40=7;
                }
                else if ( (true) ) {
                    alt40=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }

            switch (alt40) {
                case 1 :
                    // Xmu2.g:5238:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4394);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5257:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4408);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5276:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4422);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5295:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4436);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:5314:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4450);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:5333:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4464);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:5352:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4478);
                    a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_6 != null) {
                    				if (a1_6 != null) {
                    					Object value = a1_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_6, true);
                    				copyLocalizationInfos(a1_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:5371:6: a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4492);
                    a1_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_7 != null) {
                    				if (a1_7 != null) {
                    					Object value = a1_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_7, true);
                    				copyLocalizationInfos(a1_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[915]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4510); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[916]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[917]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[919]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[920]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[922]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[923]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[924]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[925]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[926]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[927]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[935]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[937]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[938]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[939]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[943]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[945]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[946]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[947]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[948]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[949]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[950]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[951]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[952]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[953]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[954]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"
    // Xmu2.g:5450:1: parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression returns [edu.ustb.sei.mde.xmu2.expression.UnaryExpression element = null] : ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.UnaryExpression parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xmu2.g:5453:2: ( ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:5454:2: ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:5454:2: ( (a0= 'not' |a1= '-' ) )
            // Xmu2.g:5455:3: (a0= 'not' |a1= '-' )
            {
            // Xmu2.g:5455:3: (a0= 'not' |a1= '-' )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==55) ) {
                alt41=1;
            }
            else if ( (LA41_0==22) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;

            }
            switch (alt41) {
                case 1 :
                    // Xmu2.g:5456:4: a0= 'not'
                    {
                    a0=(Token)match(input,55,FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4548); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.NOT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5469:8: a1= '-'
                    {
                    a1=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4563); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.MINUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[955]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[956]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[957]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[958]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[959]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[961]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[962]);
            	}

            // Xmu2.g:5496:2: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt42=2;
            switch ( input.LA(1) ) {
            case NAME:
                {
                int LA42_1 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA42_2 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA42_3 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA42_4 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 4, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA42_5 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 5, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA42_6 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 6, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA42_7 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 7, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA42_8 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 8, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA42_9 = input.LA(2);

                if ( (synpred88_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // Xmu2.g:5497:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4588);
                    a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5516:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4602);
                    a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[975]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[976]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[982]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[984]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[985]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[986]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[987]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[988]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[989]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[990]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[991]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[992]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[993]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[994]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[995]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"
    // Xmu2.g:5575:1: parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression returns [edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xmu2.g:5578:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5579:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5579:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt43=3;
            switch ( input.LA(1) ) {
            case 22:
            case 55:
                {
                alt43=1;
                }
                break;
            case NAME:
                {
                int LA43_3 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA43_4 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA43_5 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA43_6 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA43_7 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA43_8 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA43_9 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA43_10 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA43_11 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }

            switch (alt43) {
                case 1 :
                    // Xmu2.g:5580:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4639);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5599:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4653);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5618:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4667);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[996]);
            	}

            // Xmu2.g:5643:2: ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt46=0;
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==18||LA46_0==25) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // Xmu2.g:5644:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:5644:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:5645:4: ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:5645:4: ( (a1= '*' |a2= '/' ) )
            	    // Xmu2.g:5646:5: (a1= '*' |a2= '/' )
            	    {
            	    // Xmu2.g:5646:5: (a1= '*' |a2= '/' )
            	    int alt44=2;
            	    int LA44_0 = input.LA(1);

            	    if ( (LA44_0==18) ) {
            	        alt44=1;
            	    }
            	    else if ( (LA44_0==25) ) {
            	        alt44=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt44) {
            	        case 1 :
            	            // Xmu2.g:5647:6: a1= '*'
            	            {
            	            a1=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4707); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.MUL_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5660:12: a2= '/'
            	            {
            	            a2=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4726); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.DIV_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[997]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[998]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[999]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1000]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1001]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1002]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1003]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1004]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1005]);
            	    			}

            	    // Xmu2.g:5688:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt45=3;
            	    switch ( input.LA(1) ) {
            	    case 22:
            	    case 55:
            	        {
            	        alt45=1;
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA45_3 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA45_4 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 65:
            	        {
            	        int LA45_5 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA45_6 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA45_7 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA45_8 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA45_9 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA45_10 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA45_11 = input.LA(2);

            	        if ( (synpred93_Xmu2()) ) {
            	            alt45=2;
            	        }
            	        else if ( (true) ) {
            	            alt45=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 45, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 45, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt45) {
            	        case 1 :
            	            // Xmu2.g:5689:5: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4763);
            	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_0 != null) {
            	            						if (a5_0 != null) {
            	            							Object value = a5_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_0, true);
            	            						copyLocalizationInfos(a5_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5708:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4783);
            	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_1 != null) {
            	            						if (a5_1 != null) {
            	            							Object value = a5_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_1, true);
            	            						copyLocalizationInfos(a5_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5727:10: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4803);
            	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_2 != null) {
            	            						if (a5_2 != null) {
            	            							Object value = a5_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_2, true);
            	            						copyLocalizationInfos(a5_2, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1006]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1007]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1008]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1009]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1010]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1011]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1012]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1013]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1014]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1015]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1016]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1017]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1018]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1019]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1020]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1021]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1022]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1023]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1024]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1025]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1026]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1027]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1028]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1029]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1030]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1031]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1032]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1033]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1034]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1035]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1036]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1037]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt46 >= 1 ) break loop46;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(46, input);
                        throw eee;
                }
                cnt46++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1043]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1044]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1045]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1046]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1047]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1048]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1049]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1050]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1051]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1052]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1053]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1054]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1055]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1056]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1057]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1058]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1059]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1060]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1061]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1062]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1063]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1064]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1065]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1066]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1067]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1068]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1069]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"
    // Xmu2.g:5823:1: parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression returns [edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.AdditiveExpression parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a6_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xmu2.g:5826:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5827:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5827:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt47=4;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA47_1 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA47_2 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA47_3 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA47_4 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA47_5 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA47_6 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA47_7 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA47_8 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA47_9 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA47_10 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA47_11 = input.LA(2);

                if ( (synpred95_Xmu2()) ) {
                    alt47=1;
                }
                else if ( (synpred97_Xmu2()) ) {
                    alt47=3;
                }
                else if ( (true) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;

            }

            switch (alt47) {
                case 1 :
                    // Xmu2.g:5828:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4863);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5847:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4877);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5866:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4891);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5885:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4905);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1070]);
            	}

            // Xmu2.g:5910:2: ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt50=0;
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( ((LA50_0 >= 19 && LA50_0 <= 20)||LA50_0==22) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // Xmu2.g:5911:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:5911:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:5912:4: ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:5912:4: ( (a1= '+' |a2= '-' |a3= '++' ) )
            	    // Xmu2.g:5913:5: (a1= '+' |a2= '-' |a3= '++' )
            	    {
            	    // Xmu2.g:5913:5: (a1= '+' |a2= '-' |a3= '++' )
            	    int alt48=3;
            	    switch ( input.LA(1) ) {
            	    case 19:
            	        {
            	        alt48=1;
            	        }
            	        break;
            	    case 22:
            	        {
            	        alt48=2;
            	        }
            	        break;
            	    case 20:
            	        {
            	        alt48=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 48, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt48) {
            	        case 1 :
            	            // Xmu2.g:5914:6: a1= '+'
            	            {
            	            a1=(Token)match(input,19,FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4945); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.ADD_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5927:12: a2= '-'
            	            {
            	            a2=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4964); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.SUB_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5940:12: a3= '++'
            	            {
            	            a3=(Token)match(input,20,FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4983); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.APPEND_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1071]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1072]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1073]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1074]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1075]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1076]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1077]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1078]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1079]);
            	    			}

            	    // Xmu2.g:5968:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt49=4;
            	    switch ( input.LA(1) ) {
            	    case 55:
            	        {
            	        int LA49_1 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt49=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA49_2 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt49=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA49_3 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA49_4 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 65:
            	        {
            	        int LA49_5 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA49_6 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA49_7 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA49_8 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA49_9 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA49_10 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA49_11 = input.LA(2);

            	        if ( (synpred100_Xmu2()) ) {
            	            alt49=1;
            	        }
            	        else if ( (synpred102_Xmu2()) ) {
            	            alt49=3;
            	        }
            	        else if ( (true) ) {
            	            alt49=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 49, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 49, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt49) {
            	        case 1 :
            	            // Xmu2.g:5969:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5020);
            	            a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_0 != null) {
            	            						if (a6_0 != null) {
            	            							Object value = a6_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_0, true);
            	            						copyLocalizationInfos(a6_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5988:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5040);
            	            a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_1 != null) {
            	            						if (a6_1 != null) {
            	            							Object value = a6_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_1, true);
            	            						copyLocalizationInfos(a6_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6007:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5060);
            	            a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_2 != null) {
            	            						if (a6_2 != null) {
            	            							Object value = a6_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_2, true);
            	            						copyLocalizationInfos(a6_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:6026:10: a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5080);
            	            a6_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_3 != null) {
            	            						if (a6_3 != null) {
            	            							Object value = a6_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_3, true);
            	            						copyLocalizationInfos(a6_3, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1080]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1081]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1082]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1083]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1084]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1085]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1086]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1087]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1088]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1089]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1090]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1091]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1092]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1093]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1094]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1095]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1096]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1097]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1098]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1099]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1100]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1101]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1102]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1103]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1104]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1105]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1106]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1107]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1108]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1109]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1110]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt50 >= 1 ) break loop50;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(50, input);
                        throw eee;
                }
                cnt50++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1111]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1112]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1113]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1114]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1115]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1116]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1117]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1124]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1126]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1127]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1128]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1129]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1130]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1131]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1132]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1133]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1134]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1135]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1136]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1137]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1138]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1139]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1140]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1141]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"
    // Xmu2.g:6120:1: parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression returns [edu.ustb.sei.mde.xmu2.expression.RelationalExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.RelationalExpression parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a8_4 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xmu2.g:6123:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:6124:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:6124:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt51=5;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA51_1 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt51=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA51_2 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt51=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA51_3 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA51_4 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA51_5 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA51_6 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA51_7 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA51_8 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA51_9 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA51_10 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA51_11 = input.LA(2);

                if ( (synpred104_Xmu2()) ) {
                    alt51=1;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt51=2;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt51=4;
                }
                else if ( (true) ) {
                    alt51=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;

            }

            switch (alt51) {
                case 1 :
                    // Xmu2.g:6125:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5140);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6144:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5154);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6163:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5168);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6182:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5182);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6201:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5196);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1142]);
            	}

            // Xmu2.g:6226:2: ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xmu2.g:6227:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xmu2.g:6227:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt52=5;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt52=1;
                }
                break;
            case 30:
                {
                alt52=2;
                }
                break;
            case 31:
                {
                alt52=3;
                }
                break;
            case 33:
                {
                alt52=4;
                }
                break;
            case 34:
                {
                alt52=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }

            switch (alt52) {
                case 1 :
                    // Xmu2.g:6228:4: a1= '='
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5223); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6241:8: a2= '<'
                    {
                    a2=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5238); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6254:8: a3= '<='
                    {
                    a3=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5253); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6267:8: a4= '>'
                    {
                    a4=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5268); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6280:8: a5= '>='
                    {
                    a5=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5283); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1143]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1144]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1145]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1146]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1147]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1148]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1149]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1150]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1151]);
            	}

            // Xmu2.g:6308:2: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt53=5;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA53_1 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt53=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA53_2 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt53=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA53_3 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA53_4 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA53_5 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA53_6 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA53_7 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA53_8 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA53_9 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA53_10 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA53_11 = input.LA(2);

                if ( (synpred112_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;

            }

            switch (alt53) {
                case 1 :
                    // Xmu2.g:6309:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5308);
                    a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6328:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5322);
                    a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6347:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5336);
                    a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6366:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5350);
                    a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6385:6: a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5364);
                    a8_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_4 != null) {
                    				if (a8_4 != null) {
                    					Object value = a8_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_4, true);
                    				copyLocalizationInfos(a8_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1152]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1153]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1154]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1155]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1156]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1157]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1158]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1159]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1160]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1161]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1162]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1163]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1164]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1165]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1166]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1167]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1168]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1169]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1170]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1171]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1172]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1173]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1174]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1175]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1176]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1177]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1178]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1179]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1180]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1181]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"
    // Xmu2.g:6441:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_5 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xmu2.g:6444:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:6445:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:6445:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt54=6;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA54_1 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt54=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA54_2 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt54=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA54_3 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA54_4 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA54_5 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA54_6 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA54_7 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA54_8 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA54_9 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA54_10 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA54_11 = input.LA(2);

                if ( (synpred116_Xmu2()) ) {
                    alt54=1;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt54=2;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt54=3;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt54=5;
                }
                else if ( (true) ) {
                    alt54=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;

            }

            switch (alt54) {
                case 1 :
                    // Xmu2.g:6446:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5401);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6465:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5415);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6484:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5429);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6503:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5443);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6522:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5457);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:6541:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5471);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1182]);
            	}

            // Xmu2.g:6566:2: ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt56=0;
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==38) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // Xmu2.g:6567:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:6567:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:6568:4: a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5498); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1183]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1184]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1185]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1186]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1187]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1188]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1189]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1190]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1191]);
            	    			}

            	    // Xmu2.g:6590:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt55=6;
            	    switch ( input.LA(1) ) {
            	    case 55:
            	        {
            	        int LA55_1 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt55=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA55_2 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt55=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA55_3 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA55_4 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 65:
            	        {
            	        int LA55_5 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA55_6 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA55_7 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA55_8 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA55_9 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA55_10 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA55_11 = input.LA(2);

            	        if ( (synpred121_Xmu2()) ) {
            	            alt55=1;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt55=2;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt55=3;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt55=5;
            	        }
            	        else if ( (true) ) {
            	            alt55=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 55, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 55, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt55) {
            	        case 1 :
            	            // Xmu2.g:6591:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5524);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6610:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5544);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6629:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5564);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:6648:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5584);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:6667:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5604);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:6686:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5624);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1192]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1193]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1194]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1195]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1196]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1197]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1198]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1199]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1200]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1201]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1202]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1203]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1204]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1205]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1206]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1207]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1208]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1209]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1210]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1211]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1212]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1213]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1214]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1215]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1216]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1217]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1218]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1219]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1220]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1221]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt56 >= 1 ) break loop56;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(56, input);
                        throw eee;
                }
                cnt56++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1222]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1223]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1224]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1225]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1226]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1227]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1228]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1229]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1230]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1231]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1232]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1233]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1234]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1235]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1236]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1237]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1238]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1239]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1240]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1241]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1242]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1243]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1244]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1245]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1246]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1247]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1248]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1249]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1250]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1251]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"
    // Xmu2.g:6778:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_6 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_6 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xmu2.g:6781:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:6782:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:6782:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt57=7;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA57_1 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt57=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA57_2 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt57=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA57_3 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA57_4 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA57_5 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA57_6 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA57_7 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA57_8 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA57_9 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA57_10 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA57_11 = input.LA(2);

                if ( (synpred127_Xmu2()) ) {
                    alt57=1;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt57=2;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt57=3;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt57=4;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt57=6;
                }
                else if ( (true) ) {
                    alt57=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;

            }

            switch (alt57) {
                case 1 :
                    // Xmu2.g:6783:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5684);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6802:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5698);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6821:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5712);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6840:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5726);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6859:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5740);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:6878:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5754);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:6897:6: a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5768);
                    a0_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_6 != null) {
                    				if (a0_6 != null) {
                    					Object value = a0_6;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_6, true);
                    				copyLocalizationInfos(a0_6, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1252]);
            	}

            // Xmu2.g:6922:2: ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt59=0;
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==57) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // Xmu2.g:6923:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:6923:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:6924:4: a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,57,FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5795); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1253]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1254]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1255]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1256]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1257]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1258]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1259]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1260]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1261]);
            	    			}

            	    // Xmu2.g:6946:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt58=7;
            	    switch ( input.LA(1) ) {
            	    case 55:
            	        {
            	        int LA58_1 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt58=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA58_2 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt58=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA58_3 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA58_4 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 65:
            	        {
            	        int LA58_5 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA58_6 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA58_7 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA58_8 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA58_9 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA58_10 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA58_11 = input.LA(2);

            	        if ( (synpred133_Xmu2()) ) {
            	            alt58=1;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt58=2;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt58=3;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt58=4;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt58=6;
            	        }
            	        else if ( (true) ) {
            	            alt58=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 58, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 58, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt58) {
            	        case 1 :
            	            // Xmu2.g:6947:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5821);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6966:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5841);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6985:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5861);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:7004:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5881);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:7023:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5901);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:7042:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5921);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 7 :
            	            // Xmu2.g:7061:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5941);
            	            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_6 != null) {
            	            						if (a2_6 != null) {
            	            							Object value = a2_6;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_6, true);
            	            						copyLocalizationInfos(a2_6, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1262]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1263]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1264]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1265]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1266]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1267]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1268]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1269]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1270]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1271]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1272]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1273]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1274]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1275]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1276]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1277]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1278]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1279]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1280]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1281]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1282]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1283]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1284]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1285]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1286]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1287]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1288]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1289]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1290]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt59 >= 1 ) break loop59;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(59, input);
                        throw eee;
                }
                cnt59++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1291]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1292]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1293]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1294]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1295]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1296]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1297]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1298]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1299]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1300]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1301]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1302]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1303]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1304]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1305]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1306]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1307]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1308]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1309]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1310]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1311]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1312]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1313]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1314]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1315]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1316]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1317]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1318]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1319]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"
    // Xmu2.g:7151:1: parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement returns [edu.ustb.sei.mde.xmu2.statement.BlockStatement element = null] : a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.BlockStatement parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.BlockStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xmu2.g:7154:2: (a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' )
            // Xmu2.g:7155:2: a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}'
            {
            a0=(Token)match(input,71,FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5997); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1320]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1321]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1322]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1323]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1324]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1325]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1326]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1327]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1328]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1329]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1330]);
            	}

            // Xmu2.g:7179:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==NAME||(LA61_0 >= 43 && LA61_0 <= 44)||LA61_0==49||LA61_0==61||LA61_0==63||LA61_0==68||LA61_0==71) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // Xmu2.g:7180:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    {
                    // Xmu2.g:7180:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    // Xmu2.g:7181:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    {
                    // Xmu2.g:7181:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:7182:5: a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6026);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1331]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1332]);
                    			}

                    // Xmu2.g:7208:4: ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==29) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // Xmu2.g:7209:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    {
                    	    // Xmu2.g:7209:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    // Xmu2.g:7210:6: a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    {
                    	    a2=(Token)match(input,29,FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6067); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1333]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1334]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1335]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1336]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1337]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1338]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1339]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1340]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1341]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1342]);
                    	    					}

                    	    // Xmu2.g:7233:6: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    // Xmu2.g:7234:7: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6101);
                    	    a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a3_0 != null) {
                    	    								if (a3_0 != null) {
                    	    									Object value = a3_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_1_0_0_1, a3_0, true);
                    	    								copyLocalizationInfos(a3_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1343]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1344]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1345]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1346]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1347]);
            	}

            a4=(Token)match(input,73,FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6175); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1348]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1349]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1350]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1351]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1352]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1353]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1354]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1355]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1356]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1357]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1358]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1359]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1360]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1361]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1362]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1363]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1364]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1365]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1366]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"
    // Xmu2.g:7309:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement returns [edu.ustb.sei.mde.xmu2.statement.UpdateStatement element = null] : a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateStatement parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.Pattern a3_0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xmu2.g:7312:2: (a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ )
            // Xmu2.g:7313:2: a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            {
            a0=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6204); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1367]);
            	}

            // Xmu2.g:7327:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7328:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6222);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1368]);
            	}

            a2=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6240); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1369]);
            	}

            // Xmu2.g:7367:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7368:3: a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6258);
            a3_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__VIEW), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1370]);
            	}

            a4=(Token)match(input,40,FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6276); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1371]);
            	}

            // Xmu2.g:7407:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            int cnt62=0;
            loop62:
            do {
                int alt62=2;
                switch ( input.LA(1) ) {
                case 53:
                    {
                    int LA62_2 = input.LA(2);

                    if ( (synpred142_Xmu2()) ) {
                        alt62=1;
                    }


                    }
                    break;
                case 66:
                    {
                    int LA62_3 = input.LA(2);

                    if ( (synpred142_Xmu2()) ) {
                        alt62=1;
                    }


                    }
                    break;
                case 67:
                    {
                    int LA62_4 = input.LA(2);

                    if ( (synpred142_Xmu2()) ) {
                        alt62=1;
                    }


                    }
                    break;
                case 42:
                    {
                    int LA62_5 = input.LA(2);

                    if ( (synpred142_Xmu2()) ) {
                        alt62=1;
                    }


                    }
                    break;

                }

                switch (alt62) {
            	case 1 :
            	    // Xmu2.g:7408:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    {
            	    // Xmu2.g:7408:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    // Xmu2.g:7409:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6299);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__CLAUSES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt62 >= 1 ) break loop62;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(62, input);
                        throw eee;
                }
                cnt62++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1372]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1373]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1374]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1375]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1376]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1377]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1378]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1379]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1380]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1381]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1382]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1383]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1384]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1385]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1386]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1387]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1388]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1389]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1390]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"
    // Xmu2.g:7455:1: parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement returns [edu.ustb.sei.mde.xmu2.statement.SwitchStatement element = null] : a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.SwitchStatement parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.SwitchStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.statement.CaseClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xmu2.g:7458:2: (a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' )
            // Xmu2.g:7459:2: a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}'
            {
            a0=(Token)match(input,63,FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6340); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1391]);
            	}

            a1=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6354); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1392]);
            	}

            // Xmu2.g:7487:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:7488:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6372);
            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1393]);
            	}

            a3=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6390); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1394]);
            	}

            a4=(Token)match(input,71,FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6404); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1395]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1396]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1397]);
            	}

            // Xmu2.g:7543:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+
            int cnt63=0;
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==41||LA63_0==58) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // Xmu2.g:7544:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    {
            	    // Xmu2.g:7544:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    // Xmu2.g:7545:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6427);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_CaseClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__CASES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt63 >= 1 ) break loop63;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(63, input);
                        throw eee;
                }
                cnt63++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1398]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1399]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1400]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1401]);
            	}

            a6=(Token)match(input,73,FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6453); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1402]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1403]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1404]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1405]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1406]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1407]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1408]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1409]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1410]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1411]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1412]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1413]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1414]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1415]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1416]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1417]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1418]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1419]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1420]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"
    // Xmu2.g:7608:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause returns [edu.ustb.sei.mde.xmu2.statement.UpdateClause element = null] : ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateClause parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xmu2.g:7611:2: ( ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7612:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            // Xmu2.g:7612:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) )
            // Xmu2.g:7613:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            {
            // Xmu2.g:7613:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            int alt64=4;
            switch ( input.LA(1) ) {
            case 53:
                {
                alt64=1;
                }
                break;
            case 66:
                {
                alt64=2;
                }
                break;
            case 67:
                {
                alt64=3;
                }
                break;
            case 42:
                {
                alt64=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;

            }

            switch (alt64) {
                case 1 :
                    // Xmu2.g:7614:4: a0= 'match'
                    {
                    a0=(Token)match(input,53,FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6491); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.MATCH_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:7627:8: a1= 'unmatchs'
                    {
                    a1=(Token)match(input,66,FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6506); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:7640:8: a2= 'unmatchv'
                    {
                    a2=(Token)match(input,67,FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6521); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHV_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:7653:8: a3= 'default'
                    {
                    a3=(Token)match(input,42,FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6536); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.DEFAULT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1421]);
            	}

            a6=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6557); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1422]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1423]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1424]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1425]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1426]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1427]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1428]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1429]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1430]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1431]);
            	}

            // Xmu2.g:7696:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7697:3: a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6575);
            a7_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_2, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1432]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1433]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1434]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1435]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1436]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1437]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1438]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1439]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1440]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1441]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1442]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1443]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1444]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1445]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1446]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1447]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1448]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1449]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1450]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"
    // Xmu2.g:7742:1: parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause returns [edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.PatternCaseClause parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xmu2.g:7745:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7746:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6608); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1451]);
            	}

            // Xmu2.g:7760:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7761:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6626);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__CONDITION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1452]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6644); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1453]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1454]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1455]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1456]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1457]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1458]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1459]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1460]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1461]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1462]);
            	}

            // Xmu2.g:7809:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7810:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6662);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1463]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1464]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1465]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1466]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"
    // Xmu2.g:7840:1: parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause returns [edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xmu2.g:7843:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7844:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6695); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1467]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1468]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1469]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1470]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1471]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1472]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1473]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1474]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1475]);
            	}

            // Xmu2.g:7866:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt65=6;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA65_1 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt65=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA65_2 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt65=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA65_3 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA65_4 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA65_5 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA65_6 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA65_7 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA65_8 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA65_9 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA65_10 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA65_11 = input.LA(2);

                if ( (synpred147_Xmu2()) ) {
                    alt65=1;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt65=3;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt65=5;
                }
                else if ( (true) ) {
                    alt65=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;

            }

            switch (alt65) {
                case 1 :
                    // Xmu2.g:7867:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6713);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:7886:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6727);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:7905:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6741);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:7924:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6755);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:7943:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6769);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:7962:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6783);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1476]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6801); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1477]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1478]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1479]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1480]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1481]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1482]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1483]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1484]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1485]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1486]);
            	}

            // Xmu2.g:8010:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:8011:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6819);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1487]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1488]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1489]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1490]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"
    // Xmu2.g:8041:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xmu2.g:8044:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) )
            // Xmu2.g:8045:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6852); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteNodeStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1491]);
            	}

            // Xmu2.g:8059:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:8060:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6870);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_NODE_STATEMENT__NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1492]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1493]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1494]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1495]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1496]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1497]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1498]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1499]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1500]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1501]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1502]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1503]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1504]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1505]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1506]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1507]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1508]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1509]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1510]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"
    // Xmu2.g:8105:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xmu2.g:8108:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:8109:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6903); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1511]);
            	}

            // Xmu2.g:8123:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:8124:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6921);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1512]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6939); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1513]);
            	}

            // Xmu2.g:8163:2: (a3= NAME )
            // Xmu2.g:8164:3: a3= NAME
            {
            a3=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6957); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            				startIncompleteElement(element);
            			}
            			if (a3 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_3, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1514]);
            	}

            a4=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6978); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1515]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1516]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1517]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1518]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1519]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1520]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1521]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1522]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1523]);
            	}

            // Xmu2.g:8221:2: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt66=3;
            switch ( input.LA(1) ) {
            case 22:
            case 55:
                {
                alt66=1;
                }
                break;
            case NAME:
                {
                int LA66_3 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA66_4 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA66_5 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA66_6 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA66_7 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA66_8 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA66_9 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA66_10 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA66_11 = input.LA(2);

                if ( (synpred153_Xmu2()) ) {
                    alt66=2;
                }
                else if ( (true) ) {
                    alt66=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }

            switch (alt66) {
                case 1 :
                    // Xmu2.g:8222:3: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6996);
                    a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_0 != null) {
                    				if (a5_0 != null) {
                    					Object value = a5_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_0, true);
                    				copyLocalizationInfos(a5_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:8241:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7010);
                    a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_1 != null) {
                    				if (a5_1 != null) {
                    					Object value = a5_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_1, true);
                    				copyLocalizationInfos(a5_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:8260:6: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7024);
                    a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_2 != null) {
                    				if (a5_2 != null) {
                    					Object value = a5_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_2, true);
                    				copyLocalizationInfos(a5_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1524]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1525]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1526]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1527]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1528]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1529]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1530]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1531]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1532]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1533]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1534]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1535]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1536]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1537]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1538]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1539]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1540]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1541]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1542]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"
    // Xmu2.g:8305:1: parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement returns [edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element = null] : a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) ;
    public final edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xmu2.g:8308:2: (a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) )
            // Xmu2.g:8309:2: a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7057); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getEnforcePatternStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1543]);
            	}

            // Xmu2.g:8323:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:8324:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7075);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ENFORCE_PATTERN_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1544]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1545]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1546]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1547]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1548]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1549]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1550]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1551]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1552]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1553]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1554]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1555]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1556]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1557]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1558]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1559]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1560]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1561]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1562]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"
    // Xmu2.g:8369:1: parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement returns [edu.ustb.sei.mde.xmu2.statement.ForEachStatement element = null] : a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ForEachStatement parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ForEachStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xmu2.g:8372:2: (a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:8373:2: a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7108); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1563]);
            	}

            // Xmu2.g:8387:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:8388:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7126);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1564]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7144); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1565]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1566]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1567]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1568]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1569]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1570]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1571]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1572]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1573]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1574]);
            	}

            // Xmu2.g:8436:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:8437:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7162);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1575]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1576]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1577]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1578]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1579]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1580]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1581]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1582]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1583]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1584]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1585]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1586]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1587]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1588]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1589]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1590]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1591]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1592]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1593]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"
    // Xmu2.g:8482:1: parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement returns [edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element = null] : (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' ;
    public final edu.ustb.sei.mde.xmu2.statement.RuleCallStatement parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xmu2.g:8485:2: ( (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' )
            // Xmu2.g:8486:2: (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')'
            {
            // Xmu2.g:8486:2: (a0= NAME )
            // Xmu2.g:8487:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7199); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.AbstractRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.statement.RuleCallStatement, edu.ustb.sei.mde.xmu2.AbstractRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getRuleCallStatementRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1594]);
            	}

            a1=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7220); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1595]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1596]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1597]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1598]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1599]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1600]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1601]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1602]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1603]);
            	}

            // Xmu2.g:8548:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==BOOLEAN||(LA70_0 >= NAME && LA70_0 <= QUOTED_39_39_92)||LA70_0==TYPE||LA70_0==16||LA70_0==56||LA70_0==65) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // Xmu2.g:8549:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:8549:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:8550:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:8550:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt67=2;
                    switch ( input.LA(1) ) {
                    case NAME:
                        {
                        int LA67_1 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA67_2 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 65:
                        {
                        int LA67_3 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA67_4 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA67_5 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA67_6 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA67_7 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA67_8 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA67_9 = input.LA(2);

                        if ( (synpred154_Xmu2()) ) {
                            alt67=1;
                        }
                        else if ( (true) ) {
                            alt67=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 67, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 67, 0, input);

                        throw nvae;

                    }

                    switch (alt67) {
                        case 1 :
                            // Xmu2.g:8551:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7249);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:8570:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7269);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_0, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1604]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1605]);
                    			}

                    // Xmu2.g:8596:4: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==21) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // Xmu2.g:8597:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:8597:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:8598:6: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7310); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1606]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1607]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1608]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1609]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1610]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1611]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1612]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1613]);
                    	    					}

                    	    // Xmu2.g:8619:6: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt68=2;
                    	    switch ( input.LA(1) ) {
                    	    case NAME:
                    	        {
                    	        int LA68_1 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 56:
                    	        {
                    	        int LA68_2 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        int LA68_3 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA68_4 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA68_5 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA68_6 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA68_7 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA68_8 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 16:
                    	        {
                    	        int LA68_9 = input.LA(2);

                    	        if ( (synpred155_Xmu2()) ) {
                    	            alt68=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt68=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 68, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 68, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt68) {
                    	        case 1 :
                    	            // Xmu2.g:8620:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7344);
                    	            a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_0 != null) {
                    	            								if (a4_0 != null) {
                    	            									Object value = a4_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	            								copyLocalizationInfos(a4_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:8639:14: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7370);
                    	            a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_1 != null) {
                    	            								if (a4_1 != null) {
                    	            									Object value = a4_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_1, a4_1, true);
                    	            								copyLocalizationInfos(a4_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1614]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1615]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1616]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1617]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1618]);
            	}

            a5=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7444); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1619]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1620]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1621]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1622]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1623]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1624]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1625]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1626]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1627]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1628]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1629]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1630]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1631]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1632]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1633]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1634]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1635]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1636]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1637]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Skip"
    // Xmu2.g:8714:1: parse_edu_ustb_sei_mde_xmu2_statement_Skip returns [edu.ustb.sei.mde.xmu2.statement.Skip element = null] : a0= 'skip' ;
    public final edu.ustb.sei.mde.xmu2.statement.Skip parse_edu_ustb_sei_mde_xmu2_statement_Skip() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Skip element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xmu2.g:8717:2: (a0= 'skip' )
            // Xmu2.g:8718:2: a0= 'skip'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7473); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSkip();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_41_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1638]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1639]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1640]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1641]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1642]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1643]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1644]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1645]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1646]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1647]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1648]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1649]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1650]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1651]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1652]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1653]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1654]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1655]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1656]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Skip"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"
    // Xmu2.g:8752:1: parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause returns [edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element = null] : a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xmu2.g:8755:2: (a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:8756:2: a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,58,FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7502); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1657]);
            	}

            a1=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7516); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1658]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1659]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1660]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1661]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1662]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1663]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1664]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1665]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1666]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1667]);
            	}

            // Xmu2.g:8793:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:8794:3: a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7534);
            a2_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DEFAULT_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1668]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1669]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1670]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1671]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement"
    // Xmu2.g:8824:1: parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement returns [edu.ustb.sei.mde.xmu2.statement.AssignStatement element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.AssignStatement parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.AssignStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xmu2.g:8827:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:8828:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:8828:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:8829:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7571);
            a0_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__UPDATED_VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1672]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7589); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1673]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1674]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1675]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1676]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1677]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1678]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1679]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1680]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1681]);
            	}

            // Xmu2.g:8876:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt71=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA71_1 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt71=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA71_2 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt71=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA71_3 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA71_4 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 4, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA71_5 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA71_6 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA71_7 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA71_8 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA71_9 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA71_10 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA71_11 = input.LA(2);

                if ( (synpred158_Xmu2()) ) {
                    alt71=1;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt71=2;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt71=3;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt71=4;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt71=5;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt71=7;
                }
                else if ( (true) ) {
                    alt71=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }

            switch (alt71) {
                case 1 :
                    // Xmu2.g:8877:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7607);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_0 != null) {
                    				if (a2_0 != null) {
                    					Object value = a2_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_0, true);
                    				copyLocalizationInfos(a2_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:8896:6: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7621);
                    a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_1 != null) {
                    				if (a2_1 != null) {
                    					Object value = a2_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_1, true);
                    				copyLocalizationInfos(a2_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:8915:6: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7635);
                    a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_2 != null) {
                    				if (a2_2 != null) {
                    					Object value = a2_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_2, true);
                    				copyLocalizationInfos(a2_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:8934:6: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7649);
                    a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_3 != null) {
                    				if (a2_3 != null) {
                    					Object value = a2_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_3, true);
                    				copyLocalizationInfos(a2_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:8953:6: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7663);
                    a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_4 != null) {
                    				if (a2_4 != null) {
                    					Object value = a2_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_4, true);
                    				copyLocalizationInfos(a2_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:8972:6: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7677);
                    a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_5 != null) {
                    				if (a2_5 != null) {
                    					Object value = a2_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_5, true);
                    				copyLocalizationInfos(a2_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:8991:6: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7691);
                    a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_6 != null) {
                    				if (a2_6 != null) {
                    					Object value = a2_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_6, true);
                    				copyLocalizationInfos(a2_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:9010:6: a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7705);
                    a2_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_7 != null) {
                    				if (a2_7 != null) {
                    					Object value = a2_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_7, true);
                    				copyLocalizationInfos(a2_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1682]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1683]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1684]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1685]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1686]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1687]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1688]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1689]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1690]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1691]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1692]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1693]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1694]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1695]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1696]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1697]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1698]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1699]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1700]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_AbstractRule"
    // Xmu2.g:9055:1: parse_edu_ustb_sei_mde_xmu2_AbstractRule returns [edu.ustb.sei.mde.xmu2.AbstractRule element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_ModelRule |c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule );
    public final edu.ustb.sei.mde.xmu2.AbstractRule parse_edu_ustb_sei_mde_xmu2_AbstractRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.AbstractRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.ModelRule c0 =null;

        edu.ustb.sei.mde.xmu2.ArithmeticRule c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xmu2.g:9056:2: (c0= parse_edu_ustb_sei_mde_xmu2_ModelRule |c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==59||LA72_0==64) ) {
                alt72=1;
            }
            else if ( (LA72_0==50) ) {
                alt72=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;

            }
            switch (alt72) {
                case 1 :
                    // Xmu2.g:9057:2: c0= parse_edu_ustb_sei_mde_xmu2_ModelRule
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7734);
                    c0=parse_edu_ustb_sei_mde_xmu2_ModelRule();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9058:4: c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7744);
                    c1=parse_edu_ustb_sei_mde_xmu2_ArithmeticRule();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_AbstractRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Statement"
    // Xmu2.g:9062:1: parse_edu_ustb_sei_mde_xmu2_statement_Statement returns [edu.ustb.sei.mde.xmu2.statement.Statement element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip |c9= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement );
    public final edu.ustb.sei.mde.xmu2.statement.Statement parse_edu_ustb_sei_mde_xmu2_statement_Statement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Statement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.BlockStatement c0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateStatement c1 =null;

        edu.ustb.sei.mde.xmu2.statement.SwitchStatement c2 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement c3 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement c4 =null;

        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement c5 =null;

        edu.ustb.sei.mde.xmu2.statement.ForEachStatement c6 =null;

        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement c7 =null;

        edu.ustb.sei.mde.xmu2.statement.Skip c8 =null;

        edu.ustb.sei.mde.xmu2.statement.AssignStatement c9 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xmu2.g:9063:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip |c9= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement )
            int alt73=10;
            switch ( input.LA(1) ) {
            case 71:
                {
                alt73=1;
                }
                break;
            case 68:
                {
                alt73=2;
                }
                break;
            case 63:
                {
                alt73=3;
                }
                break;
            case 43:
                {
                int LA73_4 = input.LA(2);

                if ( (LA73_4==NAME) ) {
                    int LA73_9 = input.LA(3);

                    if ( (LA73_9==EOF||LA73_9==NAME||LA73_9==29||(LA73_9 >= 41 && LA73_9 <= 44)||LA73_9==49||LA73_9==53||LA73_9==58||LA73_9==61||LA73_9==63||(LA73_9 >= 66 && LA73_9 <= 68)||LA73_9==71||LA73_9==73) ) {
                        alt73=4;
                    }
                    else if ( (LA73_9==24) ) {
                        alt73=5;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 73, 9, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 73, 4, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                alt73=6;
                }
                break;
            case 49:
                {
                alt73=7;
                }
                break;
            case NAME:
                {
                int LA73_7 = input.LA(2);

                if ( (LA73_7==16) ) {
                    alt73=8;
                }
                else if ( (LA73_7==28) ) {
                    alt73=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 73, 7, input);

                    throw nvae;

                }
                }
                break;
            case 61:
                {
                alt73=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;

            }

            switch (alt73) {
                case 1 :
                    // Xmu2.g:9064:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7765);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9065:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7775);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9066:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7785);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:9067:4: c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7795);
                    c3=parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:9068:4: c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7805);
                    c4=parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:9069:4: c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7815);
                    c5=parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:9070:4: c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7825);
                    c6=parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:9071:4: c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7835);
                    c7=parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xmu2.g:9072:4: c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7845);
                    c8=parse_edu_ustb_sei_mde_xmu2_statement_Skip();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xmu2.g:9073:4: c9= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7855);
                    c9=parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Statement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"
    // Xmu2.g:9077:1: parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression returns [edu.ustb.sei.mde.xmu2.expression.AtomicExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression );
    public final edu.ustb.sei.mde.xmu2.expression.AtomicExpression parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AtomicExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c5 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c6 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xmu2.g:9078:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt74=8;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt74=1;
                }
                break;
            case 56:
            case 65:
                {
                alt74=2;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt74=3;
                }
                break;
            case NUMBER:
                {
                alt74=4;
                }
                break;
            case BOOLEAN:
                {
                alt74=5;
                }
                break;
            case TYPE:
                {
                alt74=6;
                }
                break;
            case OBJ_URI:
                {
                alt74=7;
                }
                break;
            case 16:
                {
                alt74=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;

            }

            switch (alt74) {
                case 1 :
                    // Xmu2.g:9079:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7876);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9080:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7886);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9081:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7896);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:9082:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7906);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:9083:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7916);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:9084:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7926);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:9085:4: c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7936);
                    c6=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:9086:4: c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7946);
                    c7=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"
    // Xmu2.g:9090:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PatternExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression );
    public final edu.ustb.sei.mde.xmu2.pattern.PatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xmu2.g:9091:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==NAME) ) {
                int LA75_1 = input.LA(2);

                if ( (synpred182_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (true) ) {
                    alt75=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }
            switch (alt75) {
                case 1 :
                    // Xmu2.g:9092:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7967);
                    c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9093:4: c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7977);
                    c1=parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"
    // Xmu2.g:9097:1: parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression returns [edu.ustb.sei.mde.xmu2.expression.ConstantExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression );
    public final edu.ustb.sei.mde.xmu2.expression.ConstantExpression parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ConstantExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c5 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xmu2.g:9098:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression )
            int alt76=6;
            switch ( input.LA(1) ) {
            case 56:
            case 65:
                {
                alt76=1;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt76=2;
                }
                break;
            case NUMBER:
                {
                alt76=3;
                }
                break;
            case BOOLEAN:
                {
                alt76=4;
                }
                break;
            case TYPE:
                {
                alt76=5;
                }
                break;
            case OBJ_URI:
                {
                alt76=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;

            }

            switch (alt76) {
                case 1 :
                    // Xmu2.g:9099:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7998);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9100:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8008);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9101:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8018);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:9102:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8028);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:9103:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8038);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:9104:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8048);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_Path"
    // Xmu2.g:9108:1: parse_edu_ustb_sei_mde_xmu2_expression_Path returns [edu.ustb.sei.mde.xmu2.expression.Path element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath );
    public final edu.ustb.sei.mde.xmu2.expression.Path parse_edu_ustb_sei_mde_xmu2_expression_Path() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.Path element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.LoopPath c0 =null;

        edu.ustb.sei.mde.xmu2.expression.FeaturePath c1 =null;

        edu.ustb.sei.mde.xmu2.expression.OperationPath c2 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xmu2.g:9109:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
            int alt77=4;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==23) ) {
                int LA77_1 = input.LA(2);

                if ( (LA77_1==46||LA77_1==48||LA77_1==60) ) {
                    alt77=1;
                }
                else if ( (LA77_1==39||LA77_1==47||LA77_1==52) ) {
                    alt77=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA77_0==24) ) {
                int LA77_2 = input.LA(2);

                if ( (LA77_2==NAME) ) {
                    int LA77_5 = input.LA(3);

                    if ( (LA77_5==EOF||LA77_5==NAME||(LA77_5 >= 17 && LA77_5 <= 25)||(LA77_5 >= 29 && LA77_5 <= 34)||(LA77_5 >= 37 && LA77_5 <= 38)||(LA77_5 >= 41 && LA77_5 <= 44)||LA77_5==49||LA77_5==53||(LA77_5 >= 57 && LA77_5 <= 58)||LA77_5==61||LA77_5==63||(LA77_5 >= 66 && LA77_5 <= 68)||LA77_5==71||LA77_5==73) ) {
                        alt77=2;
                    }
                    else if ( (LA77_5==16) ) {
                        alt77=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 77, 5, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;

            }
            switch (alt77) {
                case 1 :
                    // Xmu2.g:9110:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8069);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9111:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8079);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9112:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8089);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:9113:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8099);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_Path"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"
    // Xmu2.g:9117:1: parse_edu_ustb_sei_mde_xmu2_statement_CaseClause returns [edu.ustb.sei.mde.xmu2.statement.CaseClause element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause );
    public final edu.ustb.sei.mde.xmu2.statement.CaseClause parse_edu_ustb_sei_mde_xmu2_statement_CaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.CaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause c0 =null;

        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause c1 =null;

        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Xmu2.g:9118:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause )
            int alt78=3;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==41) ) {
                int LA78_1 = input.LA(2);

                if ( (LA78_1==NAME) ) {
                    int LA78_3 = input.LA(3);

                    if ( (LA78_3==26) ) {
                        alt78=1;
                    }
                    else if ( ((LA78_3 >= 18 && LA78_3 <= 20)||(LA78_3 >= 22 && LA78_3 <= 25)||(LA78_3 >= 30 && LA78_3 <= 34)||LA78_3==38||LA78_3==57) ) {
                        alt78=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 78, 3, input);

                        throw nvae;

                    }
                }
                else if ( (LA78_1==BOOLEAN||(LA78_1 >= NUMBER && LA78_1 <= QUOTED_39_39_92)||LA78_1==TYPE||LA78_1==16||LA78_1==22||(LA78_1 >= 55 && LA78_1 <= 56)||LA78_1==65) ) {
                    alt78=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA78_0==58) ) {
                alt78=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;

            }
            switch (alt78) {
                case 1 :
                    // Xmu2.g:9119:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8120);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9120:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8130);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9121:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8140);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"

    // $ANTLR start synpred17_Xmu2
    public final void synpred17_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;


        // Xmu2.g:2165:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:2165:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred17_Xmu21700);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Xmu2

    // $ANTLR start synpred18_Xmu2
    public final void synpred18_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;


        // Xmu2.g:2184:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:2184:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred18_Xmu21720);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Xmu2

    // $ANTLR start synpred19_Xmu2
    public final void synpred19_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;


        // Xmu2.g:2203:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:2203:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred19_Xmu21740);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Xmu2

    // $ANTLR start synpred20_Xmu2
    public final void synpred20_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;


        // Xmu2.g:2222:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:2222:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred20_Xmu21760);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Xmu2

    // $ANTLR start synpred21_Xmu2
    public final void synpred21_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;


        // Xmu2.g:2241:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:2241:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred21_Xmu21780);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Xmu2

    // $ANTLR start synpred22_Xmu2
    public final void synpred22_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;


        // Xmu2.g:2260:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:2260:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred22_Xmu21800);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Xmu2

    // $ANTLR start synpred23_Xmu2
    public final void synpred23_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;


        // Xmu2.g:2279:10: (a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:2279:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred23_Xmu21820);
        a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred23_Xmu2

    // $ANTLR start synpred27_Xmu2
    public final void synpred27_Xmu2_fragment() throws RecognitionException {
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a4_0 =null;


        // Xmu2.g:2438:3: ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )
        // Xmu2.g:2438:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
        {
        // Xmu2.g:2438:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
        // Xmu2.g:2439:4: a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}'
        {
        a1=(Token)match(input,71,FOLLOW_71_in_synpred27_Xmu21947); if (state.failed) return ;

        // Xmu2.g:2455:4: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
        int alt84=2;
        int LA84_0 = input.LA(1);

        if ( (LA84_0==NAME) ) {
            alt84=1;
        }
        switch (alt84) {
            case 1 :
                // Xmu2.g:2456:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                {
                // Xmu2.g:2456:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                // Xmu2.g:2457:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                {
                // Xmu2.g:2457:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                // Xmu2.g:2458:7: a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                {
                pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred27_Xmu21988);
                a2_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                // Xmu2.g:2484:6: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                loop83:
                do {
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==21) ) {
                        alt83=1;
                    }


                    switch (alt83) {
                	case 1 :
                	    // Xmu2.g:2485:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    {
                	    // Xmu2.g:2485:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    // Xmu2.g:2486:8: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    {
                	    a3=(Token)match(input,21,FOLLOW_21_in_synpred27_Xmu22043); if (state.failed) return ;

                	    // Xmu2.g:2501:8: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    // Xmu2.g:2502:9: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                	    {
                	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred27_Xmu22085);
                	    a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop83;
                    }
                } while (true);


                }


                }
                break;

        }


        a5=(Token)match(input,73,FOLLOW_73_in_synpred27_Xmu22189); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred27_Xmu2

    // $ANTLR start synpred34_Xmu2
    public final void synpred34_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;


        // Xmu2.g:3019:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3019:3: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred34_Xmu22640);
        a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred34_Xmu2

    // $ANTLR start synpred35_Xmu2
    public final void synpred35_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;


        // Xmu2.g:3043:6: (a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3043:6: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred35_Xmu22654);
        a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred35_Xmu2

    // $ANTLR start synpred36_Xmu2
    public final void synpred36_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;


        // Xmu2.g:3067:6: (a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3067:6: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred36_Xmu22668);
        a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred36_Xmu2

    // $ANTLR start synpred37_Xmu2
    public final void synpred37_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;


        // Xmu2.g:3091:6: (a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3091:6: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred37_Xmu22682);
        a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred37_Xmu2

    // $ANTLR start synpred38_Xmu2
    public final void synpred38_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;


        // Xmu2.g:3115:6: (a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3115:6: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred38_Xmu22696);
        a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred38_Xmu2

    // $ANTLR start synpred39_Xmu2
    public final void synpred39_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;


        // Xmu2.g:3139:6: (a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3139:6: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred39_Xmu22710);
        a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Xmu2

    // $ANTLR start synpred40_Xmu2
    public final void synpred40_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;


        // Xmu2.g:3163:6: (a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3163:6: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred40_Xmu22724);
        a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred40_Xmu2

    // $ANTLR start synpred43_Xmu2
    public final void synpred43_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;


        // Xmu2.g:3349:3: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3349:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred43_Xmu22899);
        a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Xmu2

    // $ANTLR start synpred44_Xmu2
    public final void synpred44_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;


        // Xmu2.g:3368:6: (a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3368:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred44_Xmu22913);
        a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred44_Xmu2

    // $ANTLR start synpred45_Xmu2
    public final void synpred45_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;


        // Xmu2.g:3387:6: (a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3387:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred45_Xmu22927);
        a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Xmu2

    // $ANTLR start synpred46_Xmu2
    public final void synpred46_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;


        // Xmu2.g:3406:6: (a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3406:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred46_Xmu22941);
        a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Xmu2

    // $ANTLR start synpred47_Xmu2
    public final void synpred47_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;


        // Xmu2.g:3425:6: (a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3425:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred47_Xmu22955);
        a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Xmu2

    // $ANTLR start synpred48_Xmu2
    public final void synpred48_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;


        // Xmu2.g:3444:6: (a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3444:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred48_Xmu22969);
        a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred48_Xmu2

    // $ANTLR start synpred49_Xmu2
    public final void synpred49_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;


        // Xmu2.g:3463:6: (a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3463:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred49_Xmu22983);
        a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred49_Xmu2

    // $ANTLR start synpred50_Xmu2
    public final void synpred50_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;


        // Xmu2.g:3735:5: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3735:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred50_Xmu23166);
        a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Xmu2

    // $ANTLR start synpred51_Xmu2
    public final void synpred51_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;


        // Xmu2.g:3754:10: (a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3754:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred51_Xmu23186);
        a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred51_Xmu2

    // $ANTLR start synpred52_Xmu2
    public final void synpred52_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;


        // Xmu2.g:3773:10: (a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3773:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred52_Xmu23206);
        a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred52_Xmu2

    // $ANTLR start synpred53_Xmu2
    public final void synpred53_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;


        // Xmu2.g:3792:10: (a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3792:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred53_Xmu23226);
        a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred53_Xmu2

    // $ANTLR start synpred54_Xmu2
    public final void synpred54_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;


        // Xmu2.g:3811:10: (a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3811:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred54_Xmu23246);
        a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred54_Xmu2

    // $ANTLR start synpred55_Xmu2
    public final void synpred55_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;


        // Xmu2.g:3830:10: (a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3830:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred55_Xmu23266);
        a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred55_Xmu2

    // $ANTLR start synpred56_Xmu2
    public final void synpred56_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;


        // Xmu2.g:3849:10: (a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3849:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred56_Xmu23286);
        a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred56_Xmu2

    // $ANTLR start synpred57_Xmu2
    public final void synpred57_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;


        // Xmu2.g:3919:7: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3919:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred57_Xmu23381);
        a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred57_Xmu2

    // $ANTLR start synpred58_Xmu2
    public final void synpred58_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;


        // Xmu2.g:3938:14: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3938:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred58_Xmu23407);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred58_Xmu2

    // $ANTLR start synpred59_Xmu2
    public final void synpred59_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;


        // Xmu2.g:3957:14: (a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3957:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred59_Xmu23433);
        a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred59_Xmu2

    // $ANTLR start synpred60_Xmu2
    public final void synpred60_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;


        // Xmu2.g:3976:14: (a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3976:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred60_Xmu23459);
        a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred60_Xmu2

    // $ANTLR start synpred61_Xmu2
    public final void synpred61_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;


        // Xmu2.g:3995:14: (a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3995:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred61_Xmu23485);
        a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred61_Xmu2

    // $ANTLR start synpred62_Xmu2
    public final void synpred62_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;


        // Xmu2.g:4014:14: (a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:4014:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred62_Xmu23511);
        a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred62_Xmu2

    // $ANTLR start synpred63_Xmu2
    public final void synpred63_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;


        // Xmu2.g:4033:14: (a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4033:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred63_Xmu23537);
        a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred63_Xmu2

    // $ANTLR start synpred68_Xmu2
    public final void synpred68_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;


        // Xmu2.g:4238:4: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:4238:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred68_Xmu23763);
        a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred68_Xmu2

    // $ANTLR start synpred69_Xmu2
    public final void synpred69_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;


        // Xmu2.g:4257:8: (a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:4257:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred69_Xmu23780);
        a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred69_Xmu2

    // $ANTLR start synpred70_Xmu2
    public final void synpred70_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;


        // Xmu2.g:4276:8: (a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:4276:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred70_Xmu23797);
        a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred70_Xmu2

    // $ANTLR start synpred71_Xmu2
    public final void synpred71_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;


        // Xmu2.g:4295:8: (a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:4295:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred71_Xmu23814);
        a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred71_Xmu2

    // $ANTLR start synpred72_Xmu2
    public final void synpred72_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;


        // Xmu2.g:4314:8: (a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:4314:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred72_Xmu23831);
        a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred72_Xmu2

    // $ANTLR start synpred73_Xmu2
    public final void synpred73_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;


        // Xmu2.g:4333:8: (a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:4333:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred73_Xmu23848);
        a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred73_Xmu2

    // $ANTLR start synpred74_Xmu2
    public final void synpred74_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;


        // Xmu2.g:4352:8: (a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4352:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred74_Xmu23865);
        a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred74_Xmu2

    // $ANTLR start synpred80_Xmu2
    public final void synpred80_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:5238:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:5238:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred80_Xmu24394);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred80_Xmu2

    // $ANTLR start synpred81_Xmu2
    public final void synpred81_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:5257:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:5257:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred81_Xmu24408);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred81_Xmu2

    // $ANTLR start synpred82_Xmu2
    public final void synpred82_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:5276:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:5276:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred82_Xmu24422);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred82_Xmu2

    // $ANTLR start synpred83_Xmu2
    public final void synpred83_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;


        // Xmu2.g:5295:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:5295:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred83_Xmu24436);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred83_Xmu2

    // $ANTLR start synpred84_Xmu2
    public final void synpred84_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;


        // Xmu2.g:5314:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5314:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred84_Xmu24450);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred84_Xmu2

    // $ANTLR start synpred85_Xmu2
    public final void synpred85_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;


        // Xmu2.g:5333:6: (a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5333:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred85_Xmu24464);
        a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred85_Xmu2

    // $ANTLR start synpred86_Xmu2
    public final void synpred86_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;


        // Xmu2.g:5352:6: (a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5352:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred86_Xmu24478);
        a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred86_Xmu2

    // $ANTLR start synpred88_Xmu2
    public final void synpred88_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:5497:3: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5497:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred88_Xmu24588);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred88_Xmu2

    // $ANTLR start synpred90_Xmu2
    public final void synpred90_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;


        // Xmu2.g:5599:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5599:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred90_Xmu24653);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred90_Xmu2

    // $ANTLR start synpred93_Xmu2
    public final void synpred93_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:5708:10: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5708:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred93_Xmu24783);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred93_Xmu2

    // $ANTLR start synpred95_Xmu2
    public final void synpred95_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;


        // Xmu2.g:5828:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5828:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred95_Xmu24863);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred95_Xmu2

    // $ANTLR start synpred96_Xmu2
    public final void synpred96_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;


        // Xmu2.g:5847:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5847:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred96_Xmu24877);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred96_Xmu2

    // $ANTLR start synpred97_Xmu2
    public final void synpred97_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;


        // Xmu2.g:5866:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5866:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred97_Xmu24891);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred97_Xmu2

    // $ANTLR start synpred100_Xmu2
    public final void synpred100_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;


        // Xmu2.g:5969:5: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5969:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred100_Xmu25020);
        a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred100_Xmu2

    // $ANTLR start synpred101_Xmu2
    public final void synpred101_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;


        // Xmu2.g:5988:10: (a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5988:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred101_Xmu25040);
        a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred101_Xmu2

    // $ANTLR start synpred102_Xmu2
    public final void synpred102_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;


        // Xmu2.g:6007:10: (a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6007:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred102_Xmu25060);
        a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred102_Xmu2

    // $ANTLR start synpred104_Xmu2
    public final void synpred104_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;


        // Xmu2.g:6125:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6125:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred104_Xmu25140);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred104_Xmu2

    // $ANTLR start synpred105_Xmu2
    public final void synpred105_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;


        // Xmu2.g:6144:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6144:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred105_Xmu25154);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred105_Xmu2

    // $ANTLR start synpred106_Xmu2
    public final void synpred106_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;


        // Xmu2.g:6163:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6163:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred106_Xmu25168);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred106_Xmu2

    // $ANTLR start synpred107_Xmu2
    public final void synpred107_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;


        // Xmu2.g:6182:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6182:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred107_Xmu25182);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_Xmu2

    // $ANTLR start synpred112_Xmu2
    public final void synpred112_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;


        // Xmu2.g:6309:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6309:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred112_Xmu25308);
        a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred112_Xmu2

    // $ANTLR start synpred113_Xmu2
    public final void synpred113_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;


        // Xmu2.g:6328:6: (a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6328:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred113_Xmu25322);
        a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred113_Xmu2

    // $ANTLR start synpred114_Xmu2
    public final void synpred114_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;


        // Xmu2.g:6347:6: (a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6347:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred114_Xmu25336);
        a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred114_Xmu2

    // $ANTLR start synpred115_Xmu2
    public final void synpred115_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;


        // Xmu2.g:6366:6: (a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6366:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred115_Xmu25350);
        a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred115_Xmu2

    // $ANTLR start synpred116_Xmu2
    public final void synpred116_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;


        // Xmu2.g:6446:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6446:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred116_Xmu25401);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred116_Xmu2

    // $ANTLR start synpred117_Xmu2
    public final void synpred117_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;


        // Xmu2.g:6465:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6465:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred117_Xmu25415);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred117_Xmu2

    // $ANTLR start synpred118_Xmu2
    public final void synpred118_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;


        // Xmu2.g:6484:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6484:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred118_Xmu25429);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred118_Xmu2

    // $ANTLR start synpred119_Xmu2
    public final void synpred119_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;


        // Xmu2.g:6503:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6503:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred119_Xmu25443);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred119_Xmu2

    // $ANTLR start synpred120_Xmu2
    public final void synpred120_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;


        // Xmu2.g:6522:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6522:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred120_Xmu25457);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred120_Xmu2

    // $ANTLR start synpred121_Xmu2
    public final void synpred121_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;


        // Xmu2.g:6591:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6591:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred121_Xmu25524);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred121_Xmu2

    // $ANTLR start synpred122_Xmu2
    public final void synpred122_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;


        // Xmu2.g:6610:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6610:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred122_Xmu25544);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred122_Xmu2

    // $ANTLR start synpred123_Xmu2
    public final void synpred123_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;


        // Xmu2.g:6629:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6629:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred123_Xmu25564);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred123_Xmu2

    // $ANTLR start synpred124_Xmu2
    public final void synpred124_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;


        // Xmu2.g:6648:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6648:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred124_Xmu25584);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred124_Xmu2

    // $ANTLR start synpred125_Xmu2
    public final void synpred125_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;


        // Xmu2.g:6667:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6667:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred125_Xmu25604);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred125_Xmu2

    // $ANTLR start synpred127_Xmu2
    public final void synpred127_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;


        // Xmu2.g:6783:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:6783:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred127_Xmu25684);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred127_Xmu2

    // $ANTLR start synpred128_Xmu2
    public final void synpred128_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;


        // Xmu2.g:6802:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6802:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred128_Xmu25698);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred128_Xmu2

    // $ANTLR start synpred129_Xmu2
    public final void synpred129_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;


        // Xmu2.g:6821:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6821:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred129_Xmu25712);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred129_Xmu2

    // $ANTLR start synpred130_Xmu2
    public final void synpred130_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;


        // Xmu2.g:6840:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6840:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred130_Xmu25726);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xmu2

    // $ANTLR start synpred131_Xmu2
    public final void synpred131_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;


        // Xmu2.g:6859:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6859:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred131_Xmu25740);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred131_Xmu2

    // $ANTLR start synpred132_Xmu2
    public final void synpred132_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;


        // Xmu2.g:6878:6: (a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6878:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred132_Xmu25754);
        a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred132_Xmu2

    // $ANTLR start synpred133_Xmu2
    public final void synpred133_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;


        // Xmu2.g:6947:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:6947:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred133_Xmu25821);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred133_Xmu2

    // $ANTLR start synpred134_Xmu2
    public final void synpred134_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;


        // Xmu2.g:6966:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6966:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred134_Xmu25841);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred134_Xmu2

    // $ANTLR start synpred135_Xmu2
    public final void synpred135_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;


        // Xmu2.g:6985:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6985:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred135_Xmu25861);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred135_Xmu2

    // $ANTLR start synpred136_Xmu2
    public final void synpred136_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;


        // Xmu2.g:7004:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:7004:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred136_Xmu25881);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred136_Xmu2

    // $ANTLR start synpred137_Xmu2
    public final void synpred137_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;


        // Xmu2.g:7023:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:7023:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred137_Xmu25901);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred137_Xmu2

    // $ANTLR start synpred138_Xmu2
    public final void synpred138_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;


        // Xmu2.g:7042:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7042:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred138_Xmu25921);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred138_Xmu2

    // $ANTLR start synpred142_Xmu2
    public final void synpred142_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;


        // Xmu2.g:7408:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )
        // Xmu2.g:7408:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        {
        // Xmu2.g:7408:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        // Xmu2.g:7409:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred142_Xmu26299);
        a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred142_Xmu2

    // $ANTLR start synpred147_Xmu2
    public final void synpred147_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:7867:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:7867:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred147_Xmu26713);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred147_Xmu2

    // $ANTLR start synpred148_Xmu2
    public final void synpred148_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:7886:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:7886:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred148_Xmu26727);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred148_Xmu2

    // $ANTLR start synpred149_Xmu2
    public final void synpred149_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:7905:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:7905:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred149_Xmu26741);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred149_Xmu2

    // $ANTLR start synpred150_Xmu2
    public final void synpred150_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;


        // Xmu2.g:7924:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:7924:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred150_Xmu26755);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred150_Xmu2

    // $ANTLR start synpred151_Xmu2
    public final void synpred151_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;


        // Xmu2.g:7943:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7943:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred151_Xmu26769);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred151_Xmu2

    // $ANTLR start synpred153_Xmu2
    public final void synpred153_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:8241:6: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8241:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred153_Xmu27010);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred153_Xmu2

    // $ANTLR start synpred154_Xmu2
    public final void synpred154_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;


        // Xmu2.g:8551:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8551:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred154_Xmu27249);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred154_Xmu2

    // $ANTLR start synpred155_Xmu2
    public final void synpred155_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:8620:7: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8620:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred155_Xmu27344);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred155_Xmu2

    // $ANTLR start synpred158_Xmu2
    public final void synpred158_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;


        // Xmu2.g:8877:3: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:8877:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred158_Xmu27607);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred158_Xmu2

    // $ANTLR start synpred159_Xmu2
    public final void synpred159_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;


        // Xmu2.g:8896:6: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:8896:6: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred159_Xmu27621);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred159_Xmu2

    // $ANTLR start synpred160_Xmu2
    public final void synpred160_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;


        // Xmu2.g:8915:6: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:8915:6: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred160_Xmu27635);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred160_Xmu2

    // $ANTLR start synpred161_Xmu2
    public final void synpred161_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;


        // Xmu2.g:8934:6: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:8934:6: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred161_Xmu27649);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred161_Xmu2

    // $ANTLR start synpred162_Xmu2
    public final void synpred162_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;


        // Xmu2.g:8953:6: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:8953:6: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred162_Xmu27663);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred162_Xmu2

    // $ANTLR start synpred163_Xmu2
    public final void synpred163_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;


        // Xmu2.g:8972:6: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:8972:6: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred163_Xmu27677);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred163_Xmu2

    // $ANTLR start synpred164_Xmu2
    public final void synpred164_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;


        // Xmu2.g:8991:6: (a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8991:6: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred164_Xmu27691);
        a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred164_Xmu2

    // $ANTLR start synpred182_Xmu2
    public final void synpred182_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;


        // Xmu2.g:9092:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression )
        // Xmu2.g:9092:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred182_Xmu27967);
        c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred182_Xmu2

    // Delegated rules

    public final boolean synpred163_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133 = new BitSet(new long[]{0x080C200000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189 = new BitSet(new long[]{0x080C200000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250 = new BitSet(new long[]{0x0804200000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306 = new BitSet(new long[]{0x0804000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401 = new BitSet(new long[]{0x4000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446 = new BitSet(new long[]{0x4000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_EntryData551 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_EntryData566 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_EntryData587 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605 = new BitSet(new long[]{0x0000002000000200L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_EntryData687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_ModelRule725 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_ModelRule746 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule764 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ModelRule785 = new BitSet(new long[]{0x4000000000020080L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule814 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ModelRule855 = new BitSet(new long[]{0x4000000000000080L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule889 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule963 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_ModelRule977 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000290L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1006 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1034 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000290L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1076 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1131 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1149 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1170 = new BitSet(new long[]{0x4000000000020080L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1199 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1240 = new BitSet(new long[]{0x4000000000000080L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1274 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1348 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1362 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000290L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1385 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000290L});
    public static final BitSet FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1444 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1465 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_Parameter1528 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_Parameter1543 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1568 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_Parameter1589 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1647 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1674 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1700 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1720 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1740 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1760 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1780 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1800 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1820 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1840 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1920 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1947 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000200L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1988 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000200L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2043 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2085 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2241 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2277 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2333 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2374 = new BitSet(new long[]{0x0000000800000080L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2397 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2459 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2495 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2551 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2592 = new BitSet(new long[]{0x0180000800414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2615 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2771 = new BitSet(new long[]{0x1001400000000000L});
    public static final BitSet FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2794 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2809 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2824 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2845 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2863 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2881 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2899 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2913 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2927 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2941 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2955 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2969 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2983 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2997 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath3015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3044 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3098 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3116 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3137 = new BitSet(new long[]{0x0180000000434790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3166 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3186 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3206 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3226 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3246 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3266 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3286 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3306 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3347 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3381 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3407 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3433 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3459 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3485 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3511 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3537 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3563 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3666 = new BitSet(new long[]{0x0010808000000000L});
    public static final BitSet FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3689 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3704 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3719 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3740 = new BitSet(new long[]{0x0180000000434790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3763 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3780 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3797 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3814 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3831 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3848 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3865 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3882 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3981 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3995 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4009 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4036 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression4141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression4181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression4221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4261 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4282 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression4340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4376 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4394 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4408 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4422 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4436 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4450 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4464 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4478 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4492 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4548 = new BitSet(new long[]{0x0100000000014790L,0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4563 = new BitSet(new long[]{0x0100000000014790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4639 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4653 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4667 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4707 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4726 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4763 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4783 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4803 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4863 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4877 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4891 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4905 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4945 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4964 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4983 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5020 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5040 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5060 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5080 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5140 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5154 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5168 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5182 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5196 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5223 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5238 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5253 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5268 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5283 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5401 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5415 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5429 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5443 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5457 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5471 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5498 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5524 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5544 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5564 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5584 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5604 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5624 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5684 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5698 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5712 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5726 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5740 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5754 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5768 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5795 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5821 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5841 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5861 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5881 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5901 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5921 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5941 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5997 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000290L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6026 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6067 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000090L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6101 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6204 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6222 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6240 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6258 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6276 = new BitSet(new long[]{0x0020040000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6299 = new BitSet(new long[]{0x0020040000000002L,0x000000000000000CL});
    public static final BitSet FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6340 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6354 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6372 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6390 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6404 = new BitSet(new long[]{0x0400020000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6427 = new BitSet(new long[]{0x0400020000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6491 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6506 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6521 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6536 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6557 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000090L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6608 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6626 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6644 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000090L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6695 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6713 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6727 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6741 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6755 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6769 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6783 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6801 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000090L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6852 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6903 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6921 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6939 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6957 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6978 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7057 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7108 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7126 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7144 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000090L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7199 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7220 = new BitSet(new long[]{0x0100000000034790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7249 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7269 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7310 = new BitSet(new long[]{0x0100000000014790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7344 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7370 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7502 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7516 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000090L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7571 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7589 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred17_Xmu21700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred18_Xmu21720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred19_Xmu21740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred20_Xmu21760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred21_Xmu21780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred22_Xmu21800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred23_Xmu21820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_synpred27_Xmu21947 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000200L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred27_Xmu21988 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000200L});
    public static final BitSet FOLLOW_21_in_synpred27_Xmu22043 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred27_Xmu22085 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_synpred27_Xmu22189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred34_Xmu22640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred35_Xmu22654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred36_Xmu22668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred37_Xmu22682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred38_Xmu22696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred39_Xmu22710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred40_Xmu22724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred43_Xmu22899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred44_Xmu22913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred45_Xmu22927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred46_Xmu22941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred47_Xmu22955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred48_Xmu22969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred49_Xmu22983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred50_Xmu23166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred51_Xmu23186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred52_Xmu23206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred53_Xmu23226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred54_Xmu23246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred55_Xmu23266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred56_Xmu23286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred57_Xmu23381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred58_Xmu23407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred59_Xmu23433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred60_Xmu23459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred61_Xmu23485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred62_Xmu23511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred63_Xmu23537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred68_Xmu23763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred69_Xmu23780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred70_Xmu23797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred71_Xmu23814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred72_Xmu23831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred73_Xmu23848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred74_Xmu23865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred80_Xmu24394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred81_Xmu24408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred82_Xmu24422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred83_Xmu24436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred84_Xmu24450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred85_Xmu24464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred86_Xmu24478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred88_Xmu24588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred90_Xmu24653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred93_Xmu24783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred95_Xmu24863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred96_Xmu24877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred97_Xmu24891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred100_Xmu25020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred101_Xmu25040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred102_Xmu25060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred104_Xmu25140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred105_Xmu25154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred106_Xmu25168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred107_Xmu25182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred112_Xmu25308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred113_Xmu25322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred114_Xmu25336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred115_Xmu25350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred116_Xmu25401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred117_Xmu25415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred118_Xmu25429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred119_Xmu25443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred120_Xmu25457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred121_Xmu25524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred122_Xmu25544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred123_Xmu25564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred124_Xmu25584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred125_Xmu25604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred127_Xmu25684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred128_Xmu25698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred129_Xmu25712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred130_Xmu25726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred131_Xmu25740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred132_Xmu25754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred133_Xmu25821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred134_Xmu25841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred135_Xmu25861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred136_Xmu25881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred137_Xmu25901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred138_Xmu25921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred142_Xmu26299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred147_Xmu26713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred148_Xmu26727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred149_Xmu26741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred150_Xmu26755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred151_Xmu26769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred153_Xmu27010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred154_Xmu27249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred155_Xmu27344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred158_Xmu27607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred159_Xmu27621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred160_Xmu27635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred161_Xmu27649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred162_Xmu27663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred163_Xmu27677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred164_Xmu27691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred182_Xmu27967 = new BitSet(new long[]{0x0000000000000002L});

}