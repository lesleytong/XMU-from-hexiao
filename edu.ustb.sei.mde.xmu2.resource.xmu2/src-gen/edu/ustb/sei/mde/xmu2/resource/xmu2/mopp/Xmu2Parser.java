// $ANTLR 3.4

	package edu.ustb.sei.mde.xmu2.resource.xmu2.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xmu2Parser extends Xmu2ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "BOOLEAN", "LINEBREAK", "ML_COMMENT", "NAME", "NUMBER", "OBJ_URI", "QUOTED_39_39_92", "QUOTED_60_62_92", "SL_COMMENT", "TEXT", "TYPE", "WHITESPACE", "'$'", "'('", "')'", "'*'", "'+'", "'++'", "','", "'-'", "'->'", "'.'", "'/'", "':'", "'::'", "'::='", "';'", "'<'", "'<='", "'='", "'>'", "'>='", "'?'", "'['", "']'", "'and'", "'at'", "'by'", "'case'", "'default'", "'delete'", "'enforce'", "'entry'", "'exists'", "'fail'", "'first'", "'forAll'", "'foreach'", "'function'", "'import'", "'last'", "'match'", "'module'", "'not'", "'null'", "'or'", "'otherwise'", "'rule'", "'select'", "'skip'", "'source'", "'switch'", "'undefined'", "'unmatchs'", "'unmatchv'", "'update'", "'view'", "'with'", "'{'", "'|'", "'}'"
    };

    public static final int EOF=-1;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int BOOLEAN=4;
    public static final int LINEBREAK=5;
    public static final int ML_COMMENT=6;
    public static final int NAME=7;
    public static final int NUMBER=8;
    public static final int OBJ_URI=9;
    public static final int QUOTED_39_39_92=10;
    public static final int QUOTED_60_62_92=11;
    public static final int SL_COMMENT=12;
    public static final int TEXT=13;
    public static final int TYPE=14;
    public static final int WHITESPACE=15;

    // delegates
    public Xmu2ANTLRParserBase[] getDelegates() {
        return new Xmu2ANTLRParserBase[] {};
    }

    // delegators


    public Xmu2Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xmu2Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(292 + 1);
         

    }

    public String[] getTokenNames() { return Xmu2Parser.tokenNames; }
    public String getGrammarFileName() { return "Xmu2.g"; }


    	private edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolverFactory tokenResolverFactory = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> expectedElements = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Problem() {
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity getSeverity() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity.ERROR;
    					}
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType getType() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement terminal = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.TERMINALS[terminalID];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[] containmentFeatures = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.LINKS[ids[i]];
    		}
    		edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xmu2Parser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.TransformationModel.class) {
    				return parse_edu_ustb_sei_mde_xmu2_TransformationModel();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryPoint.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryPoint();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryData.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryData();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ModelRule.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ModelRule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ArithmeticRule.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ArithmeticRule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ConcreteVariableDeclaration.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.Parameter.class) {
    				return parse_edu_ustb_sei_mde_xmu2_Parameter();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.Pattern.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PatternNode.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.LoopPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.FeaturePath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.OperationPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PositionPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.VariableExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PathExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EmptyExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ParenExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.UnaryExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.AdditiveExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.RelationalExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.BlockStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.SwitchStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.PatternCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ForEachStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.RuleCallStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.Skip.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_Skip();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.Fail.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_Fail();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.AssignStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ReflectiveVariableDeclaration.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.ReflectivePatternNode.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.ReflectiveObjectPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.ReflectivePropertyPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ReflectiveDeleteLinkStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement();
    			}
    		}
    		throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>>();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult parseResult = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> newFollowSet = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 246;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]> newFollowerPair : newFollowers) {
    							edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(null, newFollowerPair.getRight());
    							edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal newFollowTerminal = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xmu2.g:646:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.TransformationModel c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xmu2.g:647:2: ( (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF )
            // Xmu2.g:648:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[0]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xmu2.g:653:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel )
            // Xmu2.g:654:3: c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82);
            c0=parse_edu_ustb_sei_mde_xmu2_TransformationModel();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_TransformationModel"
    // Xmu2.g:662:1: parse_edu_ustb_sei_mde_xmu2_TransformationModel returns [edu.ustb.sei.mde.xmu2.TransformationModel element = null] : a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* ;
    public final edu.ustb.sei.mde.xmu2.TransformationModel parse_edu_ustb_sei_mde_xmu2_TransformationModel() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.TransformationModel element =  null;

        int parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.EntryPoint a4_0 =null;

        edu.ustb.sei.mde.xmu2.AbstractRule a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xmu2.g:665:2: (a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* )
            // Xmu2.g:666:2: a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            {
            a0=(Token)match(input,56,FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1]);
            	}

            // Xmu2.g:680:2: (a1= NAME )
            // Xmu2.g:681:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[3]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[5]);
            	}

            // Xmu2.g:719:2: ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==53) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // Xmu2.g:720:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    {
            	    // Xmu2.g:720:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    // Xmu2.g:721:4: a2= 'import' (a3= QUOTED_60_62_92 )
            	    {
            	    a2=(Token)match(input,53,FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[6]);
            	    			}

            	    // Xmu2.g:735:4: (a3= QUOTED_60_62_92 )
            	    // Xmu2.g:736:5: a3= QUOTED_60_62_92
            	    {
            	    a3=(Token)match(input,QUOTED_60_62_92,FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3 != null) {
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_60_62_92");
            	    						tokenResolver.setOptions(getOptions());
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            	    						tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), result);
            	    						Object resolvedObject = result.getResolvedToken();
            	    						if (resolvedObject == null) {
            	    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            	    						}
            	    						String resolved = (String) resolvedObject;
            	    						org.eclipse.emf.ecore.EPackage proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEPackage();
            	    						collectHiddenTokens(element);
            	    						registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TransformationModel, org.eclipse.emf.ecore.EPackage>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTransformationModelPackagesReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), resolved, proxy);
            	    						if (proxy != null) {
            	    							Object value = proxy;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES, value);
            	    							completedElement(value, false);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_1, proxy, true);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[7]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[8]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[9]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[10]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[12]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[14]);
            	}

            // Xmu2.g:788:2: ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==46) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // Xmu2.g:789:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    {
            	    // Xmu2.g:789:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    // Xmu2.g:790:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    {
            	    // Xmu2.g:790:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    // Xmu2.g:791:5: a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250);
            	    a4_0=parse_edu_ustb_sei_mde_xmu2_EntryPoint();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a4_0 != null) {
            	    						if (a4_0 != null) {
            	    							Object value = a4_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__ENTRY_POINTS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_3_0_0_0, a4_0, true);
            	    						copyLocalizationInfos(a4_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[15]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[16]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[17]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[18]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[19]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[20]);
            	}

            // Xmu2.g:827:2: ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==52||LA3_0==61) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // Xmu2.g:828:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    {
            	    // Xmu2.g:828:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    // Xmu2.g:829:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    {
            	    // Xmu2.g:829:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    // Xmu2.g:830:5: a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_AbstractRule();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__RULES, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_4_0_0_0, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[21]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[22]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[23]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[24]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_TransformationModel"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryPoint"
    // Xmu2.g:866:1: parse_edu_ustb_sei_mde_xmu2_EntryPoint returns [edu.ustb.sei.mde.xmu2.EntryPoint element = null] : a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.EntryPoint parse_edu_ustb_sei_mde_xmu2_EntryPoint() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryPoint element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.EntryData a3_0 =null;

        edu.ustb.sei.mde.xmu2.EntryData a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xmu2.g:869:2: (a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' )
            // Xmu2.g:870:2: a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')'
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[25]);
            	}

            // Xmu2.g:884:2: (a1= NAME )
            // Xmu2.g:885:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.ModelRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.EntryPoint, edu.ustb.sei.mde.xmu2.ModelRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEntryPointRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[26]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[27]);
            	}

            // Xmu2.g:938:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            // Xmu2.g:939:3: a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419);
            a3_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[28]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[29]);
            	}

            // Xmu2.g:965:2: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==22) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xmu2.g:966:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    {
            	    // Xmu2.g:966:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    // Xmu2.g:967:4: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    {
            	    a4=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[30]);
            	    			}

            	    // Xmu2.g:981:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    // Xmu2.g:982:5: a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[31]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[32]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[33]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[34]);
            	}

            a6=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[35]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[36]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[37]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryPoint"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryData"
    // Xmu2.g:1034:1: parse_edu_ustb_sei_mde_xmu2_EntryData returns [edu.ustb.sei.mde.xmu2.EntryData element = null] : ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' ;
    public final edu.ustb.sei.mde.xmu2.EntryData parse_edu_ustb_sei_mde_xmu2_EntryData() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryData element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xmu2.g:1037:2: ( ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' )
            // Xmu2.g:1038:2: ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']'
            {
            // Xmu2.g:1038:2: ( (a0= 'source' |a1= 'view' ) )
            // Xmu2.g:1039:3: (a0= 'source' |a1= 'view' )
            {
            // Xmu2.g:1039:3: (a0= 'source' |a1= 'view' )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==64) ) {
                alt5=1;
            }
            else if ( (LA5_0==70) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }
            switch (alt5) {
                case 1 :
                    // Xmu2.g:1040:4: a0= 'source'
                    {
                    a0=(Token)match(input,64,FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_EntryData551); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1053:8: a1= 'view'
                    {
                    a1=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_EntryData566); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[38]);
            	}

            a4=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_EntryData587); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[39]);
            	}

            // Xmu2.g:1087:2: (a5= NUMBER )
            // Xmu2.g:1088:3: a5= NUMBER
            {
            a5=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            				startIncompleteElement(element);
            			}
            			if (a5 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[40]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[41]);
            	}

            // Xmu2.g:1124:2: ( ( (a6= OBJ_URI ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==OBJ_URI) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // Xmu2.g:1125:3: ( (a6= OBJ_URI ) )
                    {
                    // Xmu2.g:1125:3: ( (a6= OBJ_URI ) )
                    // Xmu2.g:1126:4: (a6= OBJ_URI )
                    {
                    // Xmu2.g:1126:4: (a6= OBJ_URI )
                    // Xmu2.g:1127:5: a6= OBJ_URI
                    {
                    a6=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    						startIncompleteElement(element);
                    					}
                    					if (a6 != null) {
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
                    						tokenResolver.setOptions(getOptions());
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
                    						}
                    						java.lang.String resolved = (java.lang.String) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_3_0_0_0, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[42]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[43]);
            	}

            a7=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_EntryData687); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[44]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[45]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryData"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ModelRule"
    // Xmu2.g:1186:1: parse_edu_ustb_sei_mde_xmu2_ModelRule returns [edu.ustb.sei.mde.xmu2.ModelRule element = null] : a0= 'rule' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a9= ';' ) )* ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a11= '}' ;
    public final edu.ustb.sei.mde.xmu2.ModelRule parse_edu_ustb_sei_mde_xmu2_ModelRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ModelRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a11=null;
        edu.ustb.sei.mde.xmu2.Parameter a3_0 =null;

        edu.ustb.sei.mde.xmu2.Parameter a5_0 =null;

        edu.ustb.sei.mde.xmu2.ConcreteVariableDeclaration a8_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a10_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xmu2.g:1189:2: (a0= 'rule' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a9= ';' ) )* ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a11= '}' )
            // Xmu2.g:1190:2: a0= 'rule' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a9= ';' ) )* ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a11= '}'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_ModelRule716); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[46]);
            	}

            // Xmu2.g:1204:2: (a1= NAME )
            // Xmu2.g:1205:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule734); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[47]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule755); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[48]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[49]);
            	}

            // Xmu2.g:1255:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==NAME||LA8_0==64||LA8_0==70) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // Xmu2.g:1256:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    {
                    // Xmu2.g:1256:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    // Xmu2.g:1257:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    {
                    // Xmu2.g:1257:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    // Xmu2.g:1258:5: a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule784);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[50]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[51]);
                    			}

                    // Xmu2.g:1284:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==22) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // Xmu2.g:1285:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    {
                    	    // Xmu2.g:1285:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    // Xmu2.g:1286:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    {
                    	    a4=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_ModelRule825); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[52]);
                    	    					}

                    	    // Xmu2.g:1300:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    // Xmu2.g:1301:7: a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule859);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[53]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[54]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[55]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[56]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[57]);
            	}

            a6=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_ModelRule933); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[58]);
            	}

            a7=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ModelRule947); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[59]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[60]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[61]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[62]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[63]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[64]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[65]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[66]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[67]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[68]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[69]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[70]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[71]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[72]);
            	}

            // Xmu2.g:1383:2: ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a9= ';' ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==NAME) ) {
                    int LA9_2 = input.LA(2);

                    if ( (LA9_2==27) ) {
                        alt9=1;
                    }


                }


                switch (alt9) {
            	case 1 :
            	    // Xmu2.g:1384:3: ( (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a9= ';' )
            	    {
            	    // Xmu2.g:1384:3: ( (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a9= ';' )
            	    // Xmu2.g:1385:4: (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a9= ';'
            	    {
            	    // Xmu2.g:1385:4: (a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration )
            	    // Xmu2.g:1386:5: a8_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule976);
            	    a8_0=parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a8_0 != null) {
            	    						if (a8_0 != null) {
            	    							Object value = a8_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__VARIABLE_DECLARATIONS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_6_0_0_0, a8_0, true);
            	    						copyLocalizationInfos(a8_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[73]);
            	    			}

            	    a9=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1004); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_6_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[74]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[75]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[76]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[77]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[78]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[79]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[80]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[81]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[82]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[83]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[84]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[85]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[86]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[87]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[88]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[89]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[90]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[91]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[92]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[93]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[94]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[95]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[96]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[97]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[98]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[99]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[100]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[101]);
            	}

            // Xmu2.g:1458:2: ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==NAME||(LA10_0 >= 44 && LA10_0 <= 45)||LA10_0==48||LA10_0==51||LA10_0==63||LA10_0==65||LA10_0==69||LA10_0==72) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // Xmu2.g:1459:3: (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    {
                    // Xmu2.g:1459:3: (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:1460:4: a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1046);
                    a10_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    					startIncompleteElement(element);
                    				}
                    				if (a10_0 != null) {
                    					if (a10_0 != null) {
                    						Object value = a10_0;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__STATEMENT), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_7, a10_0, true);
                    					copyLocalizationInfos(a10_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[102]);
            	}

            a11=(Token)match(input,74,FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1072); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_8, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a11, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[103]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[104]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ModelRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ArithmeticRule"
    // Xmu2.g:1503:1: parse_edu_ustb_sei_mde_xmu2_ArithmeticRule returns [edu.ustb.sei.mde.xmu2.ArithmeticRule element = null] : a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}' ;
    public final edu.ustb.sei.mde.xmu2.ArithmeticRule parse_edu_ustb_sei_mde_xmu2_ArithmeticRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ArithmeticRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        edu.ustb.sei.mde.xmu2.Parameter a3_0 =null;

        edu.ustb.sei.mde.xmu2.Parameter a5_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a8_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xmu2.g:1506:2: (a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}' )
            // Xmu2.g:1507:2: a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}'
            {
            a0=(Token)match(input,52,FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1101); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[105]);
            	}

            // Xmu2.g:1521:2: (a1= NAME )
            // Xmu2.g:1522:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1119); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[106]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1140); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[108]);
            	}

            // Xmu2.g:1572:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==NAME||LA12_0==64||LA12_0==70) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // Xmu2.g:1573:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    {
                    // Xmu2.g:1573:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    // Xmu2.g:1574:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    {
                    // Xmu2.g:1574:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    // Xmu2.g:1575:5: a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1169);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[109]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[110]);
                    			}

                    // Xmu2.g:1601:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==22) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // Xmu2.g:1602:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    {
                    	    // Xmu2.g:1602:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    // Xmu2.g:1603:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    {
                    	    a4=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1210); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[111]);
                    	    					}

                    	    // Xmu2.g:1617:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    // Xmu2.g:1618:7: a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1244);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[112]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[113]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[114]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[115]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[116]);
            	}

            a6=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1318); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[117]);
            	}

            a7=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1332); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[118]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[119]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[120]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[121]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[122]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[124]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[127]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[129]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[130]);
            	}

            // Xmu2.g:1699:2: ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==NAME||(LA13_0 >= 44 && LA13_0 <= 45)||LA13_0==48||LA13_0==51||LA13_0==63||LA13_0==65||LA13_0==69||LA13_0==72) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // Xmu2.g:1700:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            	    {
            	    // Xmu2.g:1700:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            	    // Xmu2.g:1701:4: a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1355);
            	    a8_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a8_0 != null) {
            	    					if (a8_0 != null) {
            	    						Object value = a8_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__STATEMENTS, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_6, a8_0, true);
            	    					copyLocalizationInfos(a8_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[131]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[132]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[133]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[134]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[135]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[136]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[137]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[138]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[139]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[140]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[141]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[142]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[143]);
            	}

            a9=(Token)match(input,74,FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1381); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_7, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[144]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[145]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ArithmeticRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration"
    // Xmu2.g:1756:1: parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration returns [edu.ustb.sei.mde.xmu2.ConcreteVariableDeclaration element = null] : (a0= NAME ) a1= ':' (a2= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.ConcreteVariableDeclaration parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ConcreteVariableDeclaration element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xmu2.g:1759:2: ( (a0= NAME ) a1= ':' (a2= TYPE ) )
            // Xmu2.g:1760:2: (a0= NAME ) a1= ':' (a2= TYPE )
            {
            // Xmu2.g:1760:2: (a0= NAME )
            // Xmu2.g:1761:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration1414); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createConcreteVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.CONCRETE_VARIABLE_DECLARATION__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.CONCRETE_VARIABLE_DECLARATION__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[146]);
            	}

            a1=(Token)match(input,27,FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration1435); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createConcreteVariableDeclaration();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[147]);
            	}

            // Xmu2.g:1810:2: (a2= TYPE )
            // Xmu2.g:1811:3: a2= TYPE
            {
            a2=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration1453); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createConcreteVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.CONCRETE_VARIABLE_DECLARATION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.CONCRETE_VARIABLE_DECLARATION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.CONCRETE_VARIABLE_DECLARATION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[148]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[149]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[152]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[153]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[156]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[157]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[159]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[160]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[161]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[162]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[163]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[165]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[166]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[167]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[168]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[169]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[170]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[171]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[172]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[173]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[174]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_Parameter"
    // Xmu2.g:1878:1: parse_edu_ustb_sei_mde_xmu2_Parameter returns [edu.ustb.sei.mde.xmu2.Parameter element = null] : ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.Parameter parse_edu_ustb_sei_mde_xmu2_Parameter() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.Parameter element =  null;

        int parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xmu2.g:1881:2: ( ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) )
            // Xmu2.g:1882:2: ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE )
            {
            // Xmu2.g:1882:2: ( (a0= 'source' |a1= 'view' )? )
            // Xmu2.g:1883:3: (a0= 'source' |a1= 'view' )?
            {
            // Xmu2.g:1883:3: (a0= 'source' |a1= 'view' )?
            int alt14=3;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==64) ) {
                alt14=1;
            }
            else if ( (LA14_0==70) ) {
                alt14=2;
            }
            switch (alt14) {
                case 1 :
                    // Xmu2.g:1884:4: a0= 'source'
                    {
                    a0=(Token)match(input,64,FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_Parameter1498); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1900:8: a1= 'view'
                    {
                    a1=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_Parameter1513); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[175]);
            	}

            // Xmu2.g:1922:2: (a4= NAME )
            // Xmu2.g:1923:3: a4= NAME
            {
            a4=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1538); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a4 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[176]);
            	}

            a5=(Token)match(input,27,FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_Parameter1559); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            			startIncompleteElement(element);
            			// initialize enumeration attribute
            			Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            			element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[177]);
            	}

            // Xmu2.g:1978:2: (a6= TYPE )
            // Xmu2.g:1979:3: a6= TYPE
            {
            a6=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1577); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a6 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_3, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[178]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[179]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[180]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[181]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_Parameter"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"
    // Xmu2.g:2026:1: parse_edu_ustb_sei_mde_xmu2_pattern_Pattern returns [edu.ustb.sei.mde.xmu2.pattern.Pattern element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.Pattern parse_edu_ustb_sei_mde_xmu2_pattern_Pattern() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.Pattern element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternNode a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xmu2.g:2029:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? )
            // Xmu2.g:2030:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            {
            // Xmu2.g:2030:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:2031:3: a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1617);
            a0_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[182]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[183]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[184]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[185]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[187]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[188]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[189]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[190]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[191]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[192]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[194]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[195]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[196]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[197]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[199]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[200]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[201]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[202]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[203]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[204]);
            	}

            // Xmu2.g:2078:2: ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==37) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // Xmu2.g:2079:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    {
                    // Xmu2.g:2079:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    // Xmu2.g:2080:4: a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']'
                    {
                    a1=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1644); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[205]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[206]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[207]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[208]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[209]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[210]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[211]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[212]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[213]);
                    			}

                    // Xmu2.g:2102:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt15=8;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        int LA15_1 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt15=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 23:
                        {
                        int LA15_2 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt15=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA15_3 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 58:
                        {
                        int LA15_4 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 66:
                        {
                        int LA15_5 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA15_6 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA15_7 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA15_8 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA15_9 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA15_10 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 17:
                        {
                        int LA15_11 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 0, input);

                        throw nvae;

                    }

                    switch (alt15) {
                        case 1 :
                            // Xmu2.g:2103:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1670);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:2122:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1690);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:2141:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1710);
                            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_2 != null) {
                            						if (a2_2 != null) {
                            							Object value = a2_2;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_2, true);
                            						copyLocalizationInfos(a2_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:2160:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1730);
                            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_3 != null) {
                            						if (a2_3 != null) {
                            							Object value = a2_3;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_3, true);
                            						copyLocalizationInfos(a2_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:2179:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1750);
                            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_4 != null) {
                            						if (a2_4 != null) {
                            							Object value = a2_4;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_4, true);
                            						copyLocalizationInfos(a2_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:2198:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1770);
                            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_5 != null) {
                            						if (a2_5 != null) {
                            							Object value = a2_5;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_5, true);
                            						copyLocalizationInfos(a2_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:2217:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1790);
                            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_6 != null) {
                            						if (a2_6 != null) {
                            							Object value = a2_6;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_6, true);
                            						copyLocalizationInfos(a2_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:2236:10: a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1810);
                            a2_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_7 != null) {
                            						if (a2_7 != null) {
                            							Object value = a2_7;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_7, true);
                            						copyLocalizationInfos(a2_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[214]);
                    			}

                    a3=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1838); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[215]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[216]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[217]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[218]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[219]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[220]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[221]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[222]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[223]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[224]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[225]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[226]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[227]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[228]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[229]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[230]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[231]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[232]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[233]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[234]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[235]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[236]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[237]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[238]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[239]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[240]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[241]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[242]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[243]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[244]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[245]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[246]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[247]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[248]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[249]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[250]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[251]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[252]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[253]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[254]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[255]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[256]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[258]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"
    // Xmu2.g:2326:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode returns [edu.ustb.sei.mde.xmu2.pattern.PatternNode element = null] : ( (a0_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? |c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode );
    public final edu.ustb.sei.mde.xmu2.pattern.PatternNode parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternNode element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.ConcreteVariableDeclaration a0_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.ReflectivePatternNode c0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xmu2.g:2329:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? |c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==NAME) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==27) ) {
                    int LA20_2 = input.LA(3);

                    if ( (LA20_2==TYPE) ) {
                        alt20=1;
                    }
                    else if ( (LA20_2==16) ) {
                        alt20=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 20, 2, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;

            }
            switch (alt20) {
                case 1 :
                    // Xmu2.g:2330:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
                    {
                    // Xmu2.g:2330:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration )
                    // Xmu2.g:2331:3: a0_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1890);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__VARIABLE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[259]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[260]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[261]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[262]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[263]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[264]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[265]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[266]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[267]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[268]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[269]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[270]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[271]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[272]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[273]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[274]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[275]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[276]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[277]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[278]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[279]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[280]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[281]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[282]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[283]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[284]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[285]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[286]);
                    	}

                    // Xmu2.g:2383:2: ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
                    int alt19=2;
                    int LA19_0 = input.LA(1);

                    if ( (LA19_0==72) ) {
                        switch ( input.LA(2) ) {
                            case NAME:
                                {
                                int LA19_3 = input.LA(3);

                                if ( (LA19_3==24||LA19_3==33) ) {
                                    alt19=1;
                                }
                                }
                                break;
                            case 16:
                                {
                                alt19=1;
                                }
                                break;
                            case 74:
                                {
                                int LA19_5 = input.LA(3);

                                if ( (synpred26_Xmu2()) ) {
                                    alt19=1;
                                }
                                }
                                break;
                        }

                    }
                    switch (alt19) {
                        case 1 :
                            // Xmu2.g:2384:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                            {
                            // Xmu2.g:2384:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                            // Xmu2.g:2385:4: a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}'
                            {
                            a1=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1917); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            					startIncompleteElement(element);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_0, null, true);
                            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                            			}

                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[287]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[288]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[289]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[290]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[291]);
                            			}

                            // Xmu2.g:2403:4: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
                            int alt18=2;
                            int LA18_0 = input.LA(1);

                            if ( (LA18_0==NAME||LA18_0==16) ) {
                                alt18=1;
                            }
                            switch (alt18) {
                                case 1 :
                                    // Xmu2.g:2404:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                                    {
                                    // Xmu2.g:2404:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                                    // Xmu2.g:2405:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                                    {
                                    // Xmu2.g:2405:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                                    // Xmu2.g:2406:7: a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                                    {
                                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1958);
                                    a2_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                                    state._fsp--;
                                    if (state.failed) return element;

                                    if ( state.backtracking==0 ) {
                                    							if (terminateParsing) {
                                    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                                    							}
                                    							if (element == null) {
                                    								element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                                    								startIncompleteElement(element);
                                    							}
                                    							if (a2_0 != null) {
                                    								if (a2_0 != null) {
                                    									Object value = a2_0;
                                    									addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                                    									completedElement(value, true);
                                    								}
                                    								collectHiddenTokens(element);
                                    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_0, a2_0, true);
                                    								copyLocalizationInfos(a2_0, element);
                                    							}
                                    						}

                                    }


                                    if ( state.backtracking==0 ) {
                                    						// expected elements (follow set)
                                    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[292]);
                                    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[293]);
                                    					}

                                    // Xmu2.g:2432:6: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                                    loop17:
                                    do {
                                        int alt17=2;
                                        int LA17_0 = input.LA(1);

                                        if ( (LA17_0==22) ) {
                                            alt17=1;
                                        }


                                        switch (alt17) {
                                    	case 1 :
                                    	    // Xmu2.g:2433:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                                    	    {
                                    	    // Xmu2.g:2433:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                                    	    // Xmu2.g:2434:8: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                                    	    {
                                    	    a3=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2013); if (state.failed) return element;

                                    	    if ( state.backtracking==0 ) {
                                    	    								if (element == null) {
                                    	    									element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                                    	    									startIncompleteElement(element);
                                    	    								}
                                    	    								collectHiddenTokens(element);
                                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_1_0_0_0, null, true);
                                    	    								copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                                    	    							}

                                    	    if ( state.backtracking==0 ) {
                                    	    								// expected elements (follow set)
                                    	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[294]);
                                    	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[295]);
                                    	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[296]);
                                    	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[297]);
                                    	    							}

                                    	    // Xmu2.g:2451:8: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                                    	    // Xmu2.g:2452:9: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                                    	    {
                                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2055);
                                    	    a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;

                                    	    if ( state.backtracking==0 ) {
                                    	    									if (terminateParsing) {
                                    	    										throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                                    	    									}
                                    	    									if (element == null) {
                                    	    										element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                                    	    										startIncompleteElement(element);
                                    	    									}
                                    	    									if (a4_0 != null) {
                                    	    										if (a4_0 != null) {
                                    	    											Object value = a4_0;
                                    	    											addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                                    	    											completedElement(value, true);
                                    	    										}
                                    	    										collectHiddenTokens(element);
                                    	    										retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_1_0_0_1, a4_0, true);
                                    	    										copyLocalizationInfos(a4_0, element);
                                    	    									}
                                    	    								}

                                    	    }


                                    	    if ( state.backtracking==0 ) {
                                    	    								// expected elements (follow set)
                                    	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[298]);
                                    	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[299]);
                                    	    							}

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop17;
                                        }
                                    } while (true);


                                    if ( state.backtracking==0 ) {
                                    						// expected elements (follow set)
                                    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[300]);
                                    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[301]);
                                    					}

                                    }


                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[302]);
                            			}

                            a5=(Token)match(input,74,FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2159); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            					startIncompleteElement(element);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_2, null, true);
                            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                            			}

                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[303]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[304]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[305]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[306]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[307]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[308]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[309]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[310]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[311]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[312]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[313]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[314]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[315]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[316]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[317]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[318]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[319]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[320]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[321]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[322]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[323]);
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[324]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[325]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[326]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[327]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[328]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[329]);
                            			}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[330]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[331]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[332]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[333]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[334]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[335]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[336]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[337]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[338]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[339]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[340]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[341]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[342]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[343]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[344]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[345]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[346]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[347]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[348]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[349]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[350]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[351]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[352]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[353]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[354]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[355]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[356]);
                    	}

                    }
                    break;
                case 2 :
                    // Xmu2.g:2568:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2197);
                    c0=parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"
    // Xmu2.g:2572:1: parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element = null] : ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) |c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression );
    public final edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternNode a7_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.ReflectiveObjectPatternExpression c0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xmu2.g:2575:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) |c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==NAME) ) {
                alt24=1;
            }
            else if ( (LA24_0==16) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;

            }
            switch (alt24) {
                case 1 :
                    // Xmu2.g:2576:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
                    {
                    // Xmu2.g:2576:2: (a0= NAME )
                    // Xmu2.g:2577:3: a0= NAME
                    {
                    a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2226); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a0 != null) {
                    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
                    				tokenResolver.setOptions(getOptions());
                    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), result);
                    				Object resolvedObject = result.getResolvedToken();
                    				if (resolvedObject == null) {
                    					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    				}
                    				String resolved = (String) resolvedObject;
                    				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
                    				collectHiddenTokens(element);
                    				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
                    				if (proxy != null) {
                    					Object value = proxy;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), value);
                    					completedElement(value, false);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_0, proxy, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[357]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[358]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[359]);
                    	}

                    // Xmu2.g:2623:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==24) ) {
                        int LA21_1 = input.LA(2);

                        if ( (LA21_1==47||LA21_1==50||LA21_1==62) ) {
                            alt21=1;
                        }
                    }
                    switch (alt21) {
                        case 1 :
                            // Xmu2.g:2624:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                            {
                            // Xmu2.g:2624:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                            // Xmu2.g:2625:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                            {
                            // Xmu2.g:2625:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                            // Xmu2.g:2626:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2262);
                            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                            						startIncompleteElement(element);
                            						// initialize boolean attribute
                            						{
                            							Object value = false;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                            						}
                            					}
                            					if (a1_0 != null) {
                            						if (a1_0 != null) {
                            							Object value = a1_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__SELECTOR), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_1_0_0_0, a1_0, true);
                            						copyLocalizationInfos(a1_0, element);
                            					}
                            				}

                            }


                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[360]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[361]);
                            			}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[362]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[363]);
                    	}

                    // Xmu2.g:2665:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==24) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // Xmu2.g:2666:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                            {
                            // Xmu2.g:2666:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                            // Xmu2.g:2667:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                            {
                            // Xmu2.g:2667:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                            // Xmu2.g:2668:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2318);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                            						startIncompleteElement(element);
                            						// initialize boolean attribute
                            						{
                            							Object value = false;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                            						}
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__POSITION), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }


                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[364]);
                            			}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[365]);
                    	}

                    a3=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2359); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    			startIncompleteElement(element);
                    			// initialize boolean attribute
                    			{
                    				Object value = false;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    			}
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_3, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[366]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[367]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[368]);
                    	}

                    // Xmu2.g:2726:2: ( (a4= '?' )? )
                    // Xmu2.g:2727:3: (a4= '?' )?
                    {
                    // Xmu2.g:2727:3: (a4= '?' )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==36) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // Xmu2.g:2728:4: a4= '?'
                            {
                            a4=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2382); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                            					startIncompleteElement(element);
                            					// initialize boolean attribute
                            					{
                            						Object value = false;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                            					}
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, true, true);
                            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                            				// set value of boolean attribute
                            				Object value = true;
                            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                            				completedElement(value, false);
                            			}

                            }
                            break;

                    }


                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[369]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[370]);
                    	}

                    // Xmu2.g:2753:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
                    // Xmu2.g:2754:3: a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2407);
                    a7_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_0 != null) {
                    				if (a7_0 != null) {
                    					Object value = a7_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__TARGET_NODE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_5, a7_0, true);
                    				copyLocalizationInfos(a7_0, element);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[371]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[372]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[373]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[374]);
                    	}

                    }
                    break;
                case 2 :
                    // Xmu2.g:2789:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2430);
                    c0=parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"
    // Xmu2.g:2793:1: parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element = null] : ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) |c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression );
    public final edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a7_7 =null;

        edu.ustb.sei.mde.xmu2.pattern.ReflectivePropertyPatternExpression c0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xmu2.g:2796:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) |c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==NAME) ) {
                alt29=1;
            }
            else if ( (LA29_0==16) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;

            }
            switch (alt29) {
                case 1 :
                    // Xmu2.g:2797:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    {
                    // Xmu2.g:2797:2: (a0= NAME )
                    // Xmu2.g:2798:3: a0= NAME
                    {
                    a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2459); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a0 != null) {
                    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
                    				tokenResolver.setOptions(getOptions());
                    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), result);
                    				Object resolvedObject = result.getResolvedToken();
                    				if (resolvedObject == null) {
                    					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    				}
                    				String resolved = (String) resolvedObject;
                    				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
                    				collectHiddenTokens(element);
                    				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
                    				if (proxy != null) {
                    					Object value = proxy;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), value);
                    					completedElement(value, false);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_0, proxy, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[375]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[376]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[377]);
                    	}

                    // Xmu2.g:2844:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==24) ) {
                        int LA25_1 = input.LA(2);

                        if ( (LA25_1==47||LA25_1==50||LA25_1==62) ) {
                            alt25=1;
                        }
                    }
                    switch (alt25) {
                        case 1 :
                            // Xmu2.g:2845:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                            {
                            // Xmu2.g:2845:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                            // Xmu2.g:2846:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                            {
                            // Xmu2.g:2846:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                            // Xmu2.g:2847:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2495);
                            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            						startIncompleteElement(element);
                            						// initialize boolean attribute
                            						{
                            							Object value = false;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            						}
                            					}
                            					if (a1_0 != null) {
                            						if (a1_0 != null) {
                            							Object value = a1_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__SELECTOR), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_1_0_0_0, a1_0, true);
                            						copyLocalizationInfos(a1_0, element);
                            					}
                            				}

                            }


                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[378]);
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[379]);
                            			}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[380]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[381]);
                    	}

                    // Xmu2.g:2886:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==24) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // Xmu2.g:2887:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                            {
                            // Xmu2.g:2887:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                            // Xmu2.g:2888:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                            {
                            // Xmu2.g:2888:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                            // Xmu2.g:2889:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2551);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            						startIncompleteElement(element);
                            						// initialize boolean attribute
                            						{
                            							Object value = false;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            						}
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__POSITION), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }


                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[382]);
                            			}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[383]);
                    	}

                    a3=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2592); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    			startIncompleteElement(element);
                    			// initialize boolean attribute
                    			{
                    				Object value = false;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    			}
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_3, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[384]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[385]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[386]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[387]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[388]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[389]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[390]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[391]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[392]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[393]);
                    	}

                    // Xmu2.g:2954:2: ( (a4= '?' )? )
                    // Xmu2.g:2955:3: (a4= '?' )?
                    {
                    // Xmu2.g:2955:3: (a4= '?' )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==36) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // Xmu2.g:2956:4: a4= '?'
                            {
                            a4=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2615); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            					startIncompleteElement(element);
                            					// initialize boolean attribute
                            					{
                            						Object value = false;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            					}
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_4, true, true);
                            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                            				// set value of boolean attribute
                            				Object value = true;
                            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				completedElement(value, false);
                            			}

                            }
                            break;

                    }


                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[394]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[395]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[396]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[397]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[398]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[399]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[400]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[401]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[402]);
                    	}

                    // Xmu2.g:2988:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt28=8;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        int LA28_1 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred40_Xmu2()) ) {
                            alt28=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 23:
                        {
                        int LA28_2 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred40_Xmu2()) ) {
                            alt28=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA28_3 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 58:
                        {
                        int LA28_4 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 66:
                        {
                        int LA28_5 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA28_6 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA28_7 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA28_8 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA28_9 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA28_10 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 17:
                        {
                        int LA28_11 = input.LA(2);

                        if ( (synpred35_Xmu2()) ) {
                            alt28=1;
                        }
                        else if ( (synpred36_Xmu2()) ) {
                            alt28=2;
                        }
                        else if ( (synpred37_Xmu2()) ) {
                            alt28=3;
                        }
                        else if ( (synpred38_Xmu2()) ) {
                            alt28=4;
                        }
                        else if ( (synpred39_Xmu2()) ) {
                            alt28=5;
                        }
                        else if ( (synpred41_Xmu2()) ) {
                            alt28=7;
                        }
                        else if ( (true) ) {
                            alt28=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 28, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 28, 0, input);

                        throw nvae;

                    }

                    switch (alt28) {
                        case 1 :
                            // Xmu2.g:2989:3: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2640);
                            a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_0 != null) {
                            				if (a7_0 != null) {
                            					Object value = a7_0;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_0, true);
                            				copyLocalizationInfos(a7_0, element);
                            			}
                            		}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:3013:6: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2654);
                            a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_1 != null) {
                            				if (a7_1 != null) {
                            					Object value = a7_1;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_1, true);
                            				copyLocalizationInfos(a7_1, element);
                            			}
                            		}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:3037:6: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2668);
                            a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_2 != null) {
                            				if (a7_2 != null) {
                            					Object value = a7_2;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_2, true);
                            				copyLocalizationInfos(a7_2, element);
                            			}
                            		}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:3061:6: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2682);
                            a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_3 != null) {
                            				if (a7_3 != null) {
                            					Object value = a7_3;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_3, true);
                            				copyLocalizationInfos(a7_3, element);
                            			}
                            		}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:3085:6: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2696);
                            a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_4 != null) {
                            				if (a7_4 != null) {
                            					Object value = a7_4;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_4, true);
                            				copyLocalizationInfos(a7_4, element);
                            			}
                            		}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:3109:6: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2710);
                            a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_5 != null) {
                            				if (a7_5 != null) {
                            					Object value = a7_5;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_5, true);
                            				copyLocalizationInfos(a7_5, element);
                            			}
                            		}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:3133:6: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2724);
                            a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_6 != null) {
                            				if (a7_6 != null) {
                            					Object value = a7_6;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_6, true);
                            				copyLocalizationInfos(a7_6, element);
                            			}
                            		}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:3157:6: a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2738);
                            a7_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                            				startIncompleteElement(element);
                            				// initialize boolean attribute
                            				{
                            					Object value = false;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                            				}
                            			}
                            			if (a7_7 != null) {
                            				if (a7_7 != null) {
                            					Object value = a7_7;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_7, true);
                            				copyLocalizationInfos(a7_7, element);
                            			}
                            		}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[403]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[404]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[405]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[406]);
                    	}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3192:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2761);
                    c0=parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"
    // Xmu2.g:3196:1: parse_edu_ustb_sei_mde_xmu2_expression_LoopPath returns [edu.ustb.sei.mde.xmu2.expression.LoopPath element = null] : a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.LoopPath parse_edu_ustb_sei_mde_xmu2_expression_LoopPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.LoopPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        Token a10=null;
        edu.ustb.sei.mde.xmu2.ConcreteVariableDeclaration a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a9_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xmu2.g:3199:2: (a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' )
            // Xmu2.g:3200:2: a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')'
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2786); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[407]);
            	}

            // Xmu2.g:3214:2: ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) )
            // Xmu2.g:3215:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            {
            // Xmu2.g:3215:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            int alt30=3;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt30=1;
                }
                break;
            case 50:
                {
                alt30=2;
                }
                break;
            case 47:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;

            }

            switch (alt30) {
                case 1 :
                    // Xmu2.g:3216:4: a1= 'select'
                    {
                    a1=(Token)match(input,62,FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2809); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.SELECT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3229:8: a2= 'forAll'
                    {
                    a2=(Token)match(input,50,FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2824); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.FOR_ALL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3242:8: a3= 'exists'
                    {
                    a3=(Token)match(input,47,FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2839); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.EXISTS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[408]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2860); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[409]);
            	}

            // Xmu2.g:3276:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration )
            // Xmu2.g:3277:3: a7_0= parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2878);
            a7_0=parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_3, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[410]);
            	}

            a8=(Token)match(input,73,FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2896); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[413]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[414]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[415]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[416]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[417]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[418]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[419]);
            	}

            // Xmu2.g:3324:2: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt31=8;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA31_1 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred50_Xmu2()) ) {
                    alt31=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA31_2 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred50_Xmu2()) ) {
                    alt31=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA31_3 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA31_4 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA31_5 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA31_6 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA31_7 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA31_8 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA31_9 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA31_10 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA31_11 = input.LA(2);

                if ( (synpred45_Xmu2()) ) {
                    alt31=1;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt31=2;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt31=3;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt31=4;
                }
                else if ( (synpred49_Xmu2()) ) {
                    alt31=5;
                }
                else if ( (synpred51_Xmu2()) ) {
                    alt31=7;
                }
                else if ( (true) ) {
                    alt31=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;

            }

            switch (alt31) {
                case 1 :
                    // Xmu2.g:3325:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2914);
                    a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_0 != null) {
                    				if (a9_0 != null) {
                    					Object value = a9_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_0, true);
                    				copyLocalizationInfos(a9_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3344:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2928);
                    a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_1 != null) {
                    				if (a9_1 != null) {
                    					Object value = a9_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_1, true);
                    				copyLocalizationInfos(a9_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3363:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2942);
                    a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_2 != null) {
                    				if (a9_2 != null) {
                    					Object value = a9_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_2, true);
                    				copyLocalizationInfos(a9_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:3382:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2956);
                    a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_3 != null) {
                    				if (a9_3 != null) {
                    					Object value = a9_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_3, true);
                    				copyLocalizationInfos(a9_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:3401:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2970);
                    a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_4 != null) {
                    				if (a9_4 != null) {
                    					Object value = a9_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_4, true);
                    				copyLocalizationInfos(a9_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:3420:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2984);
                    a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_5 != null) {
                    				if (a9_5 != null) {
                    					Object value = a9_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_5, true);
                    				copyLocalizationInfos(a9_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:3439:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2998);
                    a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_6 != null) {
                    				if (a9_6 != null) {
                    					Object value = a9_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_6, true);
                    				copyLocalizationInfos(a9_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:3458:6: a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath3012);
                    a9_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_7 != null) {
                    				if (a9_7 != null) {
                    					Object value = a9_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_7, true);
                    				copyLocalizationInfos(a9_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[420]);
            	}

            a10=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath3030); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[426]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[428]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[429]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[430]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[431]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[432]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[433]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[434]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[435]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[436]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[437]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[438]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[439]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[443]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[452]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[456]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[457]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[458]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[459]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[460]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[461]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[462]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[463]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[464]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[465]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[466]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"
    // Xmu2.g:3544:1: parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath returns [edu.ustb.sei.mde.xmu2.expression.FeaturePath element = null] : a0= '.' (a1= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.FeaturePath parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.FeaturePath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xmu2.g:3547:2: (a0= '.' (a1= NAME ) )
            // Xmu2.g:3548:2: a0= '.' (a1= NAME )
            {
            a0=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3059); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[467]);
            	}

            // Xmu2.g:3562:2: (a1= NAME )
            // Xmu2.g:3563:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3077); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[468]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[469]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[470]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[471]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[472]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[473]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[474]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[475]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[476]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[477]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[478]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[479]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[480]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[481]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[482]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[483]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[484]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[485]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[486]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[487]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[488]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[489]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[490]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[491]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[492]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[493]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[494]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[495]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[496]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[497]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[498]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[499]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[500]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[501]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[502]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[503]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[504]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[505]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[506]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[507]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[508]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[509]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[510]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[511]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[512]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[513]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"
    // Xmu2.g:3645:1: parse_edu_ustb_sei_mde_xmu2_expression_OperationPath returns [edu.ustb.sei.mde.xmu2.expression.OperationPath element = null] : a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.OperationPath parse_edu_ustb_sei_mde_xmu2_expression_OperationPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.OperationPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a3_7 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xmu2.g:3648:2: (a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' )
            // Xmu2.g:3649:2: a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')'
            {
            a0=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3113); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[514]);
            	}

            // Xmu2.g:3663:2: (a1= NAME )
            // Xmu2.g:3664:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3131); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[515]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3152); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[516]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[517]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[518]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[519]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[520]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[521]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[522]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[523]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[524]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[525]);
            	}

            // Xmu2.g:3722:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==BOOLEAN||(LA35_0 >= NAME && LA35_0 <= QUOTED_39_39_92)||LA35_0==TYPE||LA35_0==17||LA35_0==23||(LA35_0 >= 57 && LA35_0 <= 58)||LA35_0==66) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // Xmu2.g:3723:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:3723:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:3724:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:3724:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt32=8;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        int LA32_1 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred57_Xmu2()) ) {
                            alt32=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 23:
                        {
                        int LA32_2 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred57_Xmu2()) ) {
                            alt32=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA32_3 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 58:
                        {
                        int LA32_4 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 66:
                        {
                        int LA32_5 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA32_6 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA32_7 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA32_8 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA32_9 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA32_10 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 17:
                        {
                        int LA32_11 = input.LA(2);

                        if ( (synpred52_Xmu2()) ) {
                            alt32=1;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt32=2;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt32=3;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt32=4;
                        }
                        else if ( (synpred56_Xmu2()) ) {
                            alt32=5;
                        }
                        else if ( (synpred58_Xmu2()) ) {
                            alt32=7;
                        }
                        else if ( (true) ) {
                            alt32=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 0, input);

                        throw nvae;

                    }

                    switch (alt32) {
                        case 1 :
                            // Xmu2.g:3725:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3181);
                            a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_0 != null) {
                            						if (a3_0 != null) {
                            							Object value = a3_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_0, true);
                            						copyLocalizationInfos(a3_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:3744:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3201);
                            a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_1 != null) {
                            						if (a3_1 != null) {
                            							Object value = a3_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_1, true);
                            						copyLocalizationInfos(a3_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:3763:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3221);
                            a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_2 != null) {
                            						if (a3_2 != null) {
                            							Object value = a3_2;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_2, true);
                            						copyLocalizationInfos(a3_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:3782:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3241);
                            a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_3 != null) {
                            						if (a3_3 != null) {
                            							Object value = a3_3;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_3, true);
                            						copyLocalizationInfos(a3_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:3801:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3261);
                            a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_4 != null) {
                            						if (a3_4 != null) {
                            							Object value = a3_4;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_4, true);
                            						copyLocalizationInfos(a3_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:3820:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3281);
                            a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_5 != null) {
                            						if (a3_5 != null) {
                            							Object value = a3_5;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_5, true);
                            						copyLocalizationInfos(a3_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:3839:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3301);
                            a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_6 != null) {
                            						if (a3_6 != null) {
                            							Object value = a3_6;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_6, true);
                            						copyLocalizationInfos(a3_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:3858:10: a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3321);
                            a3_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_7 != null) {
                            						if (a3_7 != null) {
                            							Object value = a3_7;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_7, true);
                            						copyLocalizationInfos(a3_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[526]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[527]);
                    			}

                    // Xmu2.g:3884:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==22) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // Xmu2.g:3885:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:3885:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:3886:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a4=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3362); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[528]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[529]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[530]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[531]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[532]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[533]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[534]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[535]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[536]);
                    	    					}

                    	    // Xmu2.g:3908:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt33=8;
                    	    switch ( input.LA(1) ) {
                    	    case 57:
                    	        {
                    	        int LA33_1 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred64_Xmu2()) ) {
                    	            alt33=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 23:
                    	        {
                    	        int LA33_2 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred64_Xmu2()) ) {
                    	            alt33=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NAME:
                    	        {
                    	        int LA33_3 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 58:
                    	        {
                    	        int LA33_4 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        int LA33_5 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA33_6 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA33_7 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA33_8 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA33_9 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA33_10 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 10, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 17:
                    	        {
                    	        int LA33_11 = input.LA(2);

                    	        if ( (synpred59_Xmu2()) ) {
                    	            alt33=1;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt33=2;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt33=3;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt33=4;
                    	        }
                    	        else if ( (synpred63_Xmu2()) ) {
                    	            alt33=5;
                    	        }
                    	        else if ( (synpred65_Xmu2()) ) {
                    	            alt33=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt33=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 33, 11, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 33, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt33) {
                    	        case 1 :
                    	            // Xmu2.g:3909:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3396);
                    	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_0 != null) {
                    	            								if (a5_0 != null) {
                    	            									Object value = a5_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	            								copyLocalizationInfos(a5_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:3928:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3422);
                    	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_1 != null) {
                    	            								if (a5_1 != null) {
                    	            									Object value = a5_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_1, true);
                    	            								copyLocalizationInfos(a5_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 3 :
                    	            // Xmu2.g:3947:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3448);
                    	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_2 != null) {
                    	            								if (a5_2 != null) {
                    	            									Object value = a5_2;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_2, true);
                    	            								copyLocalizationInfos(a5_2, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 4 :
                    	            // Xmu2.g:3966:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3474);
                    	            a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_3 != null) {
                    	            								if (a5_3 != null) {
                    	            									Object value = a5_3;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_3, true);
                    	            								copyLocalizationInfos(a5_3, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 5 :
                    	            // Xmu2.g:3985:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3500);
                    	            a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_4 != null) {
                    	            								if (a5_4 != null) {
                    	            									Object value = a5_4;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_4, true);
                    	            								copyLocalizationInfos(a5_4, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 6 :
                    	            // Xmu2.g:4004:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3526);
                    	            a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_5 != null) {
                    	            								if (a5_5 != null) {
                    	            									Object value = a5_5;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_5, true);
                    	            								copyLocalizationInfos(a5_5, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 7 :
                    	            // Xmu2.g:4023:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3552);
                    	            a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_6 != null) {
                    	            								if (a5_6 != null) {
                    	            									Object value = a5_6;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_6, true);
                    	            								copyLocalizationInfos(a5_6, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 8 :
                    	            // Xmu2.g:4042:14: a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3578);
                    	            a5_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_7 != null) {
                    	            								if (a5_7 != null) {
                    	            									Object value = a5_7;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_7, true);
                    	            								copyLocalizationInfos(a5_7, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[537]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[538]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[539]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[540]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[541]);
            	}

            a6=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3652); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[542]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[543]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[544]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[546]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[547]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[548]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[549]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[550]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[551]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[552]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[553]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[554]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[555]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[556]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[557]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[558]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[559]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[560]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[561]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[562]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[563]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[564]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[565]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[566]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[567]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[568]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[569]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[570]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[571]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[572]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[573]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[574]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[575]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[576]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[577]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[578]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[579]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[580]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[581]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[582]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[583]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[584]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[585]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[586]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[587]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"
    // Xmu2.g:4144:1: parse_edu_ustb_sei_mde_xmu2_expression_PositionPath returns [edu.ustb.sei.mde.xmu2.expression.PositionPath element = null] : a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.PositionPath parse_edu_ustb_sei_mde_xmu2_expression_PositionPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PositionPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a7_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xmu2.g:4147:2: (a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' )
            // Xmu2.g:4148:2: a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')'
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3681); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[588]);
            	}

            // Xmu2.g:4162:2: ( (a1= 'first' |a2= 'last' |a3= 'at' ) )
            // Xmu2.g:4163:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            {
            // Xmu2.g:4163:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            int alt36=3;
            switch ( input.LA(1) ) {
            case 49:
                {
                alt36=1;
                }
                break;
            case 54:
                {
                alt36=2;
                }
                break;
            case 40:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }

            switch (alt36) {
                case 1 :
                    // Xmu2.g:4164:4: a1= 'first'
                    {
                    a1=(Token)match(input,49,FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3704); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.FIRST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4177:8: a2= 'last'
                    {
                    a2=(Token)match(input,54,FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3719); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.LAST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4190:8: a3= 'at'
                    {
                    a3=(Token)match(input,40,FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3734); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.AT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[589]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3755); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[590]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[591]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[592]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[593]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[594]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[595]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[596]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[597]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[598]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[599]);
            	}

            // Xmu2.g:4233:2: ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==BOOLEAN||(LA38_0 >= NAME && LA38_0 <= QUOTED_39_39_92)||LA38_0==TYPE||LA38_0==17||LA38_0==23||(LA38_0 >= 57 && LA38_0 <= 58)||LA38_0==66) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // Xmu2.g:4234:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    {
                    // Xmu2.g:4234:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt37=8;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        int LA37_1 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred75_Xmu2()) ) {
                            alt37=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 23:
                        {
                        int LA37_2 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred75_Xmu2()) ) {
                            alt37=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA37_3 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 58:
                        {
                        int LA37_4 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 66:
                        {
                        int LA37_5 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA37_6 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA37_7 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA37_8 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA37_9 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA37_10 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 17:
                        {
                        int LA37_11 = input.LA(2);

                        if ( (synpred70_Xmu2()) ) {
                            alt37=1;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt37=2;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt37=3;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt37=4;
                        }
                        else if ( (synpred74_Xmu2()) ) {
                            alt37=5;
                        }
                        else if ( (synpred76_Xmu2()) ) {
                            alt37=7;
                        }
                        else if ( (true) ) {
                            alt37=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 37, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;

                    }

                    switch (alt37) {
                        case 1 :
                            // Xmu2.g:4235:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3778);
                            a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_0 != null) {
                            					if (a7_0 != null) {
                            						Object value = a7_0;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_0, true);
                            					copyLocalizationInfos(a7_0, element);
                            				}
                            			}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:4254:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3795);
                            a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_1 != null) {
                            					if (a7_1 != null) {
                            						Object value = a7_1;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_1, true);
                            					copyLocalizationInfos(a7_1, element);
                            				}
                            			}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:4273:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3812);
                            a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_2 != null) {
                            					if (a7_2 != null) {
                            						Object value = a7_2;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_2, true);
                            					copyLocalizationInfos(a7_2, element);
                            				}
                            			}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:4292:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3829);
                            a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_3 != null) {
                            					if (a7_3 != null) {
                            						Object value = a7_3;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_3, true);
                            					copyLocalizationInfos(a7_3, element);
                            				}
                            			}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:4311:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3846);
                            a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_4 != null) {
                            					if (a7_4 != null) {
                            						Object value = a7_4;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_4, true);
                            					copyLocalizationInfos(a7_4, element);
                            				}
                            			}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:4330:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3863);
                            a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_5 != null) {
                            					if (a7_5 != null) {
                            						Object value = a7_5;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_5, true);
                            					copyLocalizationInfos(a7_5, element);
                            				}
                            			}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:4349:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3880);
                            a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_6 != null) {
                            					if (a7_6 != null) {
                            						Object value = a7_6;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_6, true);
                            					copyLocalizationInfos(a7_6, element);
                            				}
                            			}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:4368:8: a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3897);
                            a7_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_7 != null) {
                            					if (a7_7 != null) {
                            						Object value = a7_7;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_7, true);
                            					copyLocalizationInfos(a7_7, element);
                            				}
                            			}

                            }
                            break;

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[600]);
            	}

            a8=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3923); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[601]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[602]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[603]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[604]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[605]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[606]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[607]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[608]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[609]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[610]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[611]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[612]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[613]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[614]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[615]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[616]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[617]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[618]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[619]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[620]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[621]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[626]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[627]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[630]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[632]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[633]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[636]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[637]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[638]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[639]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[641]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[642]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[643]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[644]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[645]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[646]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"
    // Xmu2.g:4455:1: parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression returns [edu.ustb.sei.mde.xmu2.expression.VariableExpression element = null] : (a0= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.VariableExpression parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.VariableExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xmu2.g:4458:2: ( (a0= NAME ) )
            // Xmu2.g:4459:2: (a0= NAME )
            {
            // Xmu2.g:4459:2: (a0= NAME )
            // Xmu2.g:4460:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3956); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createVariableExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_15_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[647]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[648]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[649]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[650]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[651]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[652]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[653]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[654]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[655]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[656]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[657]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[658]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[659]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[660]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[661]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[662]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[663]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[664]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[665]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[666]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[667]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[668]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[669]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[670]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[671]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[672]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[673]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[674]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[675]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[676]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[677]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[678]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[679]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[680]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[681]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[682]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[683]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[684]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[685]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[686]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[687]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[688]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[689]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[690]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[691]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[692]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"
    // Xmu2.g:4542:1: parse_edu_ustb_sei_mde_xmu2_expression_PathExpression returns [edu.ustb.sei.mde.xmu2.expression.PathExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.PathExpression parse_edu_ustb_sei_mde_xmu2_expression_PathExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.ConstantExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.Path a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xmu2.g:4545:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ )
            // Xmu2.g:4546:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            {
            // Xmu2.g:4546:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt39=3;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt39=1;
                }
                break;
            case BOOLEAN:
            case NUMBER:
            case OBJ_URI:
            case QUOTED_39_39_92:
            case TYPE:
            case 58:
            case 66:
                {
                alt39=2;
                }
                break;
            case 17:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }

            switch (alt39) {
                case 1 :
                    // Xmu2.g:4547:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3996);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4566:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4010);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4585:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4024);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[693]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[694]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[695]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[696]);
            	}

            // Xmu2.g:4613:2: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            int cnt40=0;
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==24) ) {
                    int LA40_18 = input.LA(2);

                    if ( (synpred80_Xmu2()) ) {
                        alt40=1;
                    }


                }
                else if ( (LA40_0==25) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // Xmu2.g:4614:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    {
            	    // Xmu2.g:4614:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    // Xmu2.g:4615:4: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4051);
            	    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_Path();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__PATH, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt40 >= 1 ) break loop40;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(40, input);
                        throw eee;
                }
                cnt40++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[697]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[698]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[699]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[700]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[701]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[702]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[703]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[704]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[705]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[706]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[707]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[708]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[709]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[710]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[711]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[712]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[713]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[714]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[715]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[716]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[717]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[718]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[719]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[720]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[721]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[722]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[723]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[726]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[736]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[737]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[738]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[739]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[740]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[741]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[742]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"
    // Xmu2.g:4688:1: parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression returns [edu.ustb.sei.mde.xmu2.expression.EmptyExpression element = null] : ( (a0= 'null' |a1= 'undefined' ) ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EmptyExpression parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EmptyExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xmu2.g:4691:2: ( ( (a0= 'null' |a1= 'undefined' ) ) )
            // Xmu2.g:4692:2: ( (a0= 'null' |a1= 'undefined' ) )
            {
            // Xmu2.g:4692:2: ( (a0= 'null' |a1= 'undefined' ) )
            // Xmu2.g:4693:3: (a0= 'null' |a1= 'undefined' )
            {
            // Xmu2.g:4693:3: (a0= 'null' |a1= 'undefined' )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==58) ) {
                alt41=1;
            }
            else if ( (LA41_0==66) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;

            }
            switch (alt41) {
                case 1 :
                    // Xmu2.g:4694:4: a0= 'null'
                    {
                    a0=(Token)match(input,58,FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4101); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_17_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.NULL_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4707:8: a1= 'undefined'
                    {
                    a1=(Token)match(input,66,FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4116); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_17_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.EMPTY_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[743]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[744]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[745]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[746]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[747]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[748]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[749]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[750]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[751]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[752]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[753]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[754]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[755]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[756]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[757]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[758]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[770]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[771]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[772]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[773]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[774]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[775]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[776]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[780]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[782]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[783]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[784]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[785]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[786]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[787]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[788]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"
    // Xmu2.g:4774:1: parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element = null] : (a0= QUOTED_39_39_92 ) ;
    public final edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xmu2.g:4777:2: ( (a0= QUOTED_39_39_92 ) )
            // Xmu2.g:4778:2: (a0= QUOTED_39_39_92 )
            {
            // Xmu2.g:4778:2: (a0= QUOTED_39_39_92 )
            // Xmu2.g:4779:3: a0= QUOTED_39_39_92
            {
            a0=(Token)match(input,QUOTED_39_39_92,FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression4156); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createStringLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_39_39_92");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_18_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[789]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[790]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[791]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[792]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[793]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[794]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[795]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[796]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[797]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[798]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[799]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[800]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[801]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[802]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[803]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[804]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[805]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[806]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[807]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[808]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[809]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[810]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[811]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[812]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[813]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[814]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[815]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[816]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[817]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[820]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[823]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[824]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[825]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[826]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[827]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[828]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[829]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[830]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[831]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[832]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[833]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[834]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"
    // Xmu2.g:4861:1: parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element = null] : (a0= NUMBER ) ;
    public final edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xmu2.g:4864:2: ( (a0= NUMBER ) )
            // Xmu2.g:4865:2: (a0= NUMBER )
            {
            // Xmu2.g:4865:2: (a0= NUMBER )
            // Xmu2.g:4866:3: a0= NUMBER
            {
            a0=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression4196); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createIntegerLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_19_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[835]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[836]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[837]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[838]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[839]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[840]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[841]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[842]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[843]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[845]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[846]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[847]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[848]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[849]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[853]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[854]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[855]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[856]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[863]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[864]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[865]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[866]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[868]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[869]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[870]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[871]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[872]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[873]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[874]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[875]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[876]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[879]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[880]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"
    // Xmu2.g:4948:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element = null] : (a0= BOOLEAN ) ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xmu2.g:4951:2: ( (a0= BOOLEAN ) )
            // Xmu2.g:4952:2: (a0= BOOLEAN )
            {
            // Xmu2.g:4952:2: (a0= BOOLEAN )
            // Xmu2.g:4953:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression4236); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_20_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[884]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[885]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[886]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[887]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[888]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[889]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[890]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[891]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[892]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[893]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[894]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[895]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[896]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[897]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[900]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[901]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[902]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[903]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[904]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[905]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[906]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[907]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[908]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[911]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[912]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[913]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[914]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[915]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[916]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[917]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[919]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[920]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[922]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[923]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[924]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[925]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[926]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"
    // Xmu2.g:5035:1: parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element = null] : (a0= TYPE ) a1= '::' (a2= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xmu2.g:5038:2: ( (a0= TYPE ) a1= '::' (a2= NAME ) )
            // Xmu2.g:5039:2: (a0= TYPE ) a1= '::' (a2= NAME )
            {
            // Xmu2.g:5039:2: (a0= TYPE )
            // Xmu2.g:5040:3: a0= TYPE
            {
            a0=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4276); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnum proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnum();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnum>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[927]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4297); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[928]);
            	}

            // Xmu2.g:5093:2: (a2= NAME )
            // Xmu2.g:5094:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4315); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnumLiteral proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnumLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnumLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionValueReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[935]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[937]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[938]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[939]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[943]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[945]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[946]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[947]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[948]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[949]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[950]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[951]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[952]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[953]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[954]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[955]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[956]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[957]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[958]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[959]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[961]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[962]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[974]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"
    // Xmu2.g:5180:1: parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression returns [edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element = null] : (a0= OBJ_URI ) ;
    public final edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xmu2.g:5183:2: ( (a0= OBJ_URI ) )
            // Xmu2.g:5184:2: (a0= OBJ_URI )
            {
            // Xmu2.g:5184:2: (a0= OBJ_URI )
            // Xmu2.g:5185:3: a0= OBJ_URI
            {
            a0=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression4355); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createObjectURIExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EObject proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEObject();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression, org.eclipse.emf.ecore.EObject>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectURIExpressionObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[975]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[976]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[982]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[984]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[985]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[986]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[987]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[988]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[989]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[990]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[991]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[992]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[993]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[994]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[995]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[996]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[997]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[998]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[999]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1000]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1001]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1002]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1003]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1004]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1005]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1006]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1007]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1008]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1009]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1010]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1011]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1012]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1013]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1014]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1015]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1016]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1017]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1018]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1019]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1020]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"
    // Xmu2.g:5271:1: parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression returns [edu.ustb.sei.mde.xmu2.expression.ParenExpression element = null] : a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.ParenExpression parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ParenExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xmu2.g:5274:2: (a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' )
            // Xmu2.g:5275:2: a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')'
            {
            a0=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4391); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1021]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1022]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1023]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1024]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1025]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1026]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1027]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1028]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1029]);
            	}

            // Xmu2.g:5297:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt42=8;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA42_1 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred87_Xmu2()) ) {
                    alt42=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA42_2 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred87_Xmu2()) ) {
                    alt42=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA42_3 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA42_4 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA42_5 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA42_6 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA42_7 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA42_8 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA42_9 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA42_10 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA42_11 = input.LA(2);

                if ( (synpred82_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt42=4;
                }
                else if ( (synpred86_Xmu2()) ) {
                    alt42=5;
                }
                else if ( (synpred88_Xmu2()) ) {
                    alt42=7;
                }
                else if ( (true) ) {
                    alt42=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // Xmu2.g:5298:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4409);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5317:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4423);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5336:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4437);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5355:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4451);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:5374:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4465);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:5393:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4479);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:5412:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4493);
                    a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_6 != null) {
                    				if (a1_6 != null) {
                    					Object value = a1_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_6, true);
                    				copyLocalizationInfos(a1_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:5431:6: a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4507);
                    a1_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_7 != null) {
                    				if (a1_7 != null) {
                    					Object value = a1_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_7, true);
                    				copyLocalizationInfos(a1_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1030]);
            	}

            a2=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4525); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1031]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1033]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1034]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1043]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1044]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1045]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1046]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1047]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1048]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1049]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1050]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1051]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1052]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1053]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1054]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1055]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1056]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1057]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1058]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1059]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1060]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1061]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1062]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1063]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1064]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1065]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1066]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1067]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1068]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1069]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1070]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1071]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1072]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1073]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1074]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1075]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1076]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"
    // Xmu2.g:5517:1: parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression returns [edu.ustb.sei.mde.xmu2.expression.UnaryExpression element = null] : ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.UnaryExpression parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xmu2.g:5520:2: ( ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:5521:2: ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:5521:2: ( (a0= 'not' |a1= '-' ) )
            // Xmu2.g:5522:3: (a0= 'not' |a1= '-' )
            {
            // Xmu2.g:5522:3: (a0= 'not' |a1= '-' )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==57) ) {
                alt43=1;
            }
            else if ( (LA43_0==23) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }
            switch (alt43) {
                case 1 :
                    // Xmu2.g:5523:4: a0= 'not'
                    {
                    a0=(Token)match(input,57,FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4563); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.NOT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5536:8: a1= '-'
                    {
                    a1=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4578); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.MINUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1077]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1078]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1079]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1080]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1081]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1082]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1083]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1084]);
            	}

            // Xmu2.g:5563:2: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt44=2;
            switch ( input.LA(1) ) {
            case NAME:
                {
                int LA44_1 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA44_2 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 2, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA44_3 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA44_4 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 4, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA44_5 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 5, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA44_6 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 6, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA44_7 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 7, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA44_8 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 8, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA44_9 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;

            }

            switch (alt44) {
                case 1 :
                    // Xmu2.g:5564:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4603);
                    a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5583:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4617);
                    a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1085]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1086]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1087]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1088]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1089]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1090]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1091]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1092]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1093]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1094]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1095]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1096]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1097]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1098]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1099]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1100]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1101]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1102]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1103]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1104]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1105]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1106]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1107]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1108]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1109]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1110]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1111]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1112]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1113]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1114]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1115]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1116]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1117]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1124]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1126]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"
    // Xmu2.g:5651:1: parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression returns [edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xmu2.g:5654:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5655:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5655:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt45=3;
            switch ( input.LA(1) ) {
            case 23:
            case 57:
                {
                alt45=1;
                }
                break;
            case NAME:
                {
                int LA45_3 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA45_4 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA45_5 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA45_6 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA45_7 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA45_8 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA45_9 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA45_10 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA45_11 = input.LA(2);

                if ( (synpred92_Xmu2()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;

            }

            switch (alt45) {
                case 1 :
                    // Xmu2.g:5656:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4654);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5675:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4668);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5694:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4682);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1127]);
            	}

            // Xmu2.g:5719:2: ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt48=0;
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==19||LA48_0==26) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // Xmu2.g:5720:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:5720:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:5721:4: ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:5721:4: ( (a1= '*' |a2= '/' ) )
            	    // Xmu2.g:5722:5: (a1= '*' |a2= '/' )
            	    {
            	    // Xmu2.g:5722:5: (a1= '*' |a2= '/' )
            	    int alt46=2;
            	    int LA46_0 = input.LA(1);

            	    if ( (LA46_0==19) ) {
            	        alt46=1;
            	    }
            	    else if ( (LA46_0==26) ) {
            	        alt46=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 46, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt46) {
            	        case 1 :
            	            // Xmu2.g:5723:6: a1= '*'
            	            {
            	            a1=(Token)match(input,19,FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4722); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.MUL_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5736:12: a2= '/'
            	            {
            	            a2=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4741); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.DIV_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1128]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1129]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1130]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1131]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1132]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1133]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1134]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1135]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1136]);
            	    			}

            	    // Xmu2.g:5764:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt47=3;
            	    switch ( input.LA(1) ) {
            	    case 23:
            	    case 57:
            	        {
            	        alt47=1;
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA47_3 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 58:
            	        {
            	        int LA47_4 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 66:
            	        {
            	        int LA47_5 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA47_6 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA47_7 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA47_8 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA47_9 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA47_10 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 17:
            	        {
            	        int LA47_11 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt47=2;
            	        }
            	        else if ( (true) ) {
            	            alt47=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 47, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 47, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt47) {
            	        case 1 :
            	            // Xmu2.g:5765:5: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4778);
            	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_0 != null) {
            	            						if (a5_0 != null) {
            	            							Object value = a5_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_0, true);
            	            						copyLocalizationInfos(a5_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5784:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4798);
            	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_1 != null) {
            	            						if (a5_1 != null) {
            	            							Object value = a5_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_1, true);
            	            						copyLocalizationInfos(a5_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5803:10: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4818);
            	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_2 != null) {
            	            						if (a5_2 != null) {
            	            							Object value = a5_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_2, true);
            	            						copyLocalizationInfos(a5_2, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1137]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1138]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1139]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1140]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1141]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1142]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1143]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1144]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1145]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1146]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1147]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1148]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1149]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1150]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1151]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1152]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1153]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1154]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1155]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1156]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1157]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1158]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1159]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1160]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1161]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1162]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1163]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1164]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1165]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1166]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1167]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1168]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1169]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1170]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1171]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1172]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1173]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1174]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1175]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1176]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1177]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt48 >= 1 ) break loop48;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(48, input);
                        throw eee;
                }
                cnt48++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1178]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1179]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1180]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1181]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1182]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1183]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1184]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1185]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1186]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1187]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1188]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1189]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1190]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1191]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1192]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1193]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1194]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1195]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1196]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1197]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1198]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1199]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1200]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1201]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1202]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1203]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1204]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1205]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1206]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1207]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1208]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1209]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1210]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1211]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1212]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1213]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1214]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1215]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1216]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1217]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1218]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"
    // Xmu2.g:5917:1: parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression returns [edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.AdditiveExpression parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a6_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xmu2.g:5920:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5921:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5921:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt49=4;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA49_1 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred98_Xmu2()) ) {
                    alt49=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA49_2 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred98_Xmu2()) ) {
                    alt49=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA49_3 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA49_4 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA49_5 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA49_6 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA49_7 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA49_8 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA49_9 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA49_10 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA49_11 = input.LA(2);

                if ( (synpred97_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred99_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (true) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;

            }

            switch (alt49) {
                case 1 :
                    // Xmu2.g:5922:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4878);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5941:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4892);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5960:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4906);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5979:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4920);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1219]);
            	}

            // Xmu2.g:6004:2: ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt52=0;
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( ((LA52_0 >= 20 && LA52_0 <= 21)||LA52_0==23) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // Xmu2.g:6005:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:6005:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:6006:4: ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:6006:4: ( (a1= '+' |a2= '-' |a3= '++' ) )
            	    // Xmu2.g:6007:5: (a1= '+' |a2= '-' |a3= '++' )
            	    {
            	    // Xmu2.g:6007:5: (a1= '+' |a2= '-' |a3= '++' )
            	    int alt50=3;
            	    switch ( input.LA(1) ) {
            	    case 20:
            	        {
            	        alt50=1;
            	        }
            	        break;
            	    case 23:
            	        {
            	        alt50=2;
            	        }
            	        break;
            	    case 21:
            	        {
            	        alt50=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 50, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt50) {
            	        case 1 :
            	            // Xmu2.g:6008:6: a1= '+'
            	            {
            	            a1=(Token)match(input,20,FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4960); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.ADD_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6021:12: a2= '-'
            	            {
            	            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4979); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.SUB_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6034:12: a3= '++'
            	            {
            	            a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4998); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.APPEND_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1220]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1221]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1222]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1223]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1224]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1225]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1226]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1227]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1228]);
            	    			}

            	    // Xmu2.g:6062:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt51=4;
            	    switch ( input.LA(1) ) {
            	    case 57:
            	        {
            	        int LA51_1 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred103_Xmu2()) ) {
            	            alt51=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 23:
            	        {
            	        int LA51_2 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred103_Xmu2()) ) {
            	            alt51=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA51_3 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 58:
            	        {
            	        int LA51_4 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 66:
            	        {
            	        int LA51_5 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA51_6 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA51_7 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA51_8 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA51_9 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA51_10 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 17:
            	        {
            	        int LA51_11 = input.LA(2);

            	        if ( (synpred102_Xmu2()) ) {
            	            alt51=1;
            	        }
            	        else if ( (synpred104_Xmu2()) ) {
            	            alt51=3;
            	        }
            	        else if ( (true) ) {
            	            alt51=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 51, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 51, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt51) {
            	        case 1 :
            	            // Xmu2.g:6063:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5035);
            	            a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_0 != null) {
            	            						if (a6_0 != null) {
            	            							Object value = a6_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_0, true);
            	            						copyLocalizationInfos(a6_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6082:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5055);
            	            a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_1 != null) {
            	            						if (a6_1 != null) {
            	            							Object value = a6_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_1, true);
            	            						copyLocalizationInfos(a6_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6101:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5075);
            	            a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_2 != null) {
            	            						if (a6_2 != null) {
            	            							Object value = a6_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_2, true);
            	            						copyLocalizationInfos(a6_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:6120:10: a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5095);
            	            a6_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_3 != null) {
            	            						if (a6_3 != null) {
            	            							Object value = a6_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_3, true);
            	            						copyLocalizationInfos(a6_3, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1229]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1230]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1231]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1232]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1233]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1234]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1235]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1236]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1237]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1238]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1239]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1240]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1241]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1242]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1243]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1244]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1245]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1246]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1247]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1248]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1249]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1250]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1251]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1252]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1253]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1254]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1255]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1256]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1257]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1258]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1259]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1260]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1261]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1262]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1263]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1264]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1265]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1266]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1267]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1268]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt52 >= 1 ) break loop52;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(52, input);
                        throw eee;
                }
                cnt52++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1269]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1270]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1271]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1272]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1273]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1274]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1275]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1276]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1277]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1278]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1279]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1280]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1281]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1282]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1283]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1284]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1285]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1286]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1287]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1288]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1289]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1290]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1291]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1292]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1293]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1294]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1295]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1296]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1297]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1298]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1299]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1300]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1301]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1302]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1303]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1304]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1305]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1306]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1307]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1308]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"
    // Xmu2.g:6232:1: parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression returns [edu.ustb.sei.mde.xmu2.expression.RelationalExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.RelationalExpression parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a8_4 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xmu2.g:6235:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:6236:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:6236:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt53=5;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA53_1 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt53=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA53_2 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt53=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA53_3 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA53_4 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA53_5 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA53_6 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA53_7 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA53_8 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA53_9 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA53_10 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA53_11 = input.LA(2);

                if ( (synpred106_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred107_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;

            }

            switch (alt53) {
                case 1 :
                    // Xmu2.g:6237:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5155);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6256:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5169);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6275:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5183);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6294:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5197);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6313:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5211);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1309]);
            	}

            // Xmu2.g:6338:2: ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xmu2.g:6339:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xmu2.g:6339:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt54=5;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt54=1;
                }
                break;
            case 31:
                {
                alt54=2;
                }
                break;
            case 32:
                {
                alt54=3;
                }
                break;
            case 34:
                {
                alt54=4;
                }
                break;
            case 35:
                {
                alt54=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;

            }

            switch (alt54) {
                case 1 :
                    // Xmu2.g:6340:4: a1= '='
                    {
                    a1=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5238); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6353:8: a2= '<'
                    {
                    a2=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5253); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6366:8: a3= '<='
                    {
                    a3=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5268); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6379:8: a4= '>'
                    {
                    a4=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5283); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6392:8: a5= '>='
                    {
                    a5=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5298); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1310]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1311]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1312]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1313]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1314]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1315]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1316]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1317]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1318]);
            	}

            // Xmu2.g:6420:2: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt55=5;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA55_1 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt55=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA55_2 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt55=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA55_3 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA55_4 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA55_5 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA55_6 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA55_7 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA55_8 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA55_9 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA55_10 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA55_11 = input.LA(2);

                if ( (synpred114_Xmu2()) ) {
                    alt55=1;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt55=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt55=4;
                }
                else if ( (true) ) {
                    alt55=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }

            switch (alt55) {
                case 1 :
                    // Xmu2.g:6421:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5323);
                    a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6440:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5337);
                    a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6459:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5351);
                    a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6478:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5365);
                    a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6497:6: a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5379);
                    a8_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_4 != null) {
                    				if (a8_4 != null) {
                    					Object value = a8_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_4, true);
                    				copyLocalizationInfos(a8_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1319]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1320]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1321]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1322]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1323]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1324]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1325]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1326]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1327]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1328]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1329]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1330]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1331]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1332]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1333]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1334]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1335]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1336]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1337]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1338]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1339]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1340]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1341]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1342]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1343]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1344]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1345]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1346]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1347]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1348]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1349]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1350]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1351]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1352]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"
    // Xmu2.g:6557:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_5 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xmu2.g:6560:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:6561:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:6561:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt56=6;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA56_1 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred121_Xmu2()) ) {
                    alt56=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA56_2 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred121_Xmu2()) ) {
                    alt56=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA56_3 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA56_4 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA56_5 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA56_6 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA56_7 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA56_8 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA56_9 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA56_10 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA56_11 = input.LA(2);

                if ( (synpred118_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred120_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred122_Xmu2()) ) {
                    alt56=5;
                }
                else if ( (true) ) {
                    alt56=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;

            }

            switch (alt56) {
                case 1 :
                    // Xmu2.g:6562:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5416);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6581:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5430);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6600:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5444);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6619:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5458);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6638:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5472);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:6657:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5486);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1353]);
            	}

            // Xmu2.g:6682:2: ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt58=0;
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==39) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // Xmu2.g:6683:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:6683:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:6684:4: a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,39,FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5513); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1354]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1355]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1356]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1357]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1358]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1359]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1360]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1361]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1362]);
            	    			}

            	    // Xmu2.g:6706:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt57=6;
            	    switch ( input.LA(1) ) {
            	    case 57:
            	        {
            	        int LA57_1 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred126_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 23:
            	        {
            	        int LA57_2 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred126_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA57_3 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 58:
            	        {
            	        int LA57_4 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 66:
            	        {
            	        int LA57_5 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA57_6 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA57_7 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA57_8 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA57_9 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA57_10 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 17:
            	        {
            	        int LA57_11 = input.LA(2);

            	        if ( (synpred123_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred125_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred127_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else if ( (true) ) {
            	            alt57=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt57) {
            	        case 1 :
            	            // Xmu2.g:6707:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5539);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6726:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5559);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6745:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5579);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:6764:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5599);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:6783:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5619);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:6802:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5639);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1363]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1364]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1365]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1366]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1367]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1368]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1369]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1370]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1371]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1372]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1373]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1374]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1375]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1376]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1377]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1378]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1379]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1380]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1381]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1382]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1383]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1384]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1385]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1386]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1387]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1388]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1389]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1390]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1391]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1392]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1393]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1394]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1395]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1396]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt58 >= 1 ) break loop58;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(58, input);
                        throw eee;
                }
                cnt58++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1397]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1398]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1399]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1400]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1401]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1402]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1403]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1404]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1405]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1406]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1407]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1408]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1409]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1410]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1411]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1412]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1413]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1414]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1415]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1416]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1417]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1418]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1419]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1420]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1421]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1422]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1423]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1424]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1425]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1426]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1427]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1428]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1429]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1430]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"
    // Xmu2.g:6902:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_6 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_6 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xmu2.g:6905:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:6906:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:6906:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt59=7;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA59_1 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred133_Xmu2()) ) {
                    alt59=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA59_2 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred133_Xmu2()) ) {
                    alt59=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA59_3 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA59_4 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA59_5 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA59_6 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA59_7 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA59_8 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA59_9 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA59_10 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA59_11 = input.LA(2);

                if ( (synpred129_Xmu2()) ) {
                    alt59=1;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt59=2;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt59=3;
                }
                else if ( (synpred132_Xmu2()) ) {
                    alt59=4;
                }
                else if ( (synpred134_Xmu2()) ) {
                    alt59=6;
                }
                else if ( (true) ) {
                    alt59=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }

            switch (alt59) {
                case 1 :
                    // Xmu2.g:6907:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5699);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6926:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5713);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6945:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5727);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6964:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5741);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6983:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5755);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:7002:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5769);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:7021:6: a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5783);
                    a0_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_6 != null) {
                    				if (a0_6 != null) {
                    					Object value = a0_6;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_6, true);
                    				copyLocalizationInfos(a0_6, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1431]);
            	}

            // Xmu2.g:7046:2: ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt61=0;
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==59) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // Xmu2.g:7047:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:7047:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:7048:4: a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,59,FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5810); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1432]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1433]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1434]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1435]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1436]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1437]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1438]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1439]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1440]);
            	    			}

            	    // Xmu2.g:7070:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt60=7;
            	    switch ( input.LA(1) ) {
            	    case 57:
            	        {
            	        int LA60_1 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred139_Xmu2()) ) {
            	            alt60=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 23:
            	        {
            	        int LA60_2 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred139_Xmu2()) ) {
            	            alt60=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA60_3 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 58:
            	        {
            	        int LA60_4 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 66:
            	        {
            	        int LA60_5 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA60_6 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA60_7 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA60_8 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA60_9 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA60_10 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 17:
            	        {
            	        int LA60_11 = input.LA(2);

            	        if ( (synpred135_Xmu2()) ) {
            	            alt60=1;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt60=2;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt60=3;
            	        }
            	        else if ( (synpred138_Xmu2()) ) {
            	            alt60=4;
            	        }
            	        else if ( (synpred140_Xmu2()) ) {
            	            alt60=6;
            	        }
            	        else if ( (true) ) {
            	            alt60=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 60, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 60, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt60) {
            	        case 1 :
            	            // Xmu2.g:7071:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5836);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:7090:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5856);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:7109:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5876);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:7128:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5896);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:7147:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5916);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:7166:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5936);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 7 :
            	            // Xmu2.g:7185:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5956);
            	            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_6 != null) {
            	            						if (a2_6 != null) {
            	            							Object value = a2_6;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_6, true);
            	            						copyLocalizationInfos(a2_6, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1441]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1442]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1443]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1444]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1445]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1446]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1447]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1448]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1449]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1450]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1451]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1452]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1453]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1454]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1455]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1456]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1457]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1458]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1459]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1460]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1461]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1462]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1463]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1464]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1465]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1466]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1467]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1468]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1469]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1470]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1471]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1472]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1473]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt61 >= 1 ) break loop61;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(61, input);
                        throw eee;
                }
                cnt61++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1474]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1475]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1476]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1477]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1478]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1479]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1480]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1481]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1482]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1483]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1484]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1485]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1486]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1487]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1488]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1489]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1490]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1491]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1492]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1493]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1494]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1495]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1496]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1497]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1498]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1499]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1500]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1501]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1502]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1503]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1504]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1505]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1506]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"
    // Xmu2.g:7283:1: parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement returns [edu.ustb.sei.mde.xmu2.statement.BlockStatement element = null] : a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.BlockStatement parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.BlockStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xmu2.g:7286:2: (a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' )
            // Xmu2.g:7287:2: a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}'
            {
            a0=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6012); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1507]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1508]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1509]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1510]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1511]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1512]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1513]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1514]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1515]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1516]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1517]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1518]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1519]);
            	}

            // Xmu2.g:7313:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==NAME||(LA63_0 >= 44 && LA63_0 <= 45)||LA63_0==48||LA63_0==51||LA63_0==63||LA63_0==65||LA63_0==69||LA63_0==72) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // Xmu2.g:7314:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    {
                    // Xmu2.g:7314:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    // Xmu2.g:7315:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    {
                    // Xmu2.g:7315:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:7316:5: a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6041);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1520]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1521]);
                    			}

                    // Xmu2.g:7342:4: ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==30) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // Xmu2.g:7343:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    {
                    	    // Xmu2.g:7343:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    // Xmu2.g:7344:6: a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    {
                    	    a2=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6082); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1522]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1523]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1524]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1525]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1526]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1527]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1528]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1529]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1530]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1531]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1532]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1533]);
                    	    					}

                    	    // Xmu2.g:7369:6: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    // Xmu2.g:7370:7: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6116);
                    	    a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a3_0 != null) {
                    	    								if (a3_0 != null) {
                    	    									Object value = a3_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_1_0_0_1, a3_0, true);
                    	    								copyLocalizationInfos(a3_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1534]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1535]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1536]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1537]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1538]);
            	}

            a4=(Token)match(input,74,FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6190); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1539]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1540]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1541]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1542]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1543]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1544]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1545]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1546]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1547]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1548]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1549]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1550]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1551]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1552]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1553]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1554]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1555]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1556]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1557]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1558]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1559]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"
    // Xmu2.g:7447:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement returns [edu.ustb.sei.mde.xmu2.statement.UpdateStatement element = null] : a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateStatement parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.Pattern a3_0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xmu2.g:7450:2: (a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ )
            // Xmu2.g:7451:2: a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            {
            a0=(Token)match(input,69,FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6219); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1560]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1561]);
            	}

            // Xmu2.g:7466:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7467:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6237);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1562]);
            	}

            a2=(Token)match(input,71,FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6255); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1563]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1564]);
            	}

            // Xmu2.g:7507:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7508:3: a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6273);
            a3_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__VIEW), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1565]);
            	}

            a4=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6291); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1566]);
            	}

            // Xmu2.g:7547:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            int cnt64=0;
            loop64:
            do {
                int alt64=2;
                switch ( input.LA(1) ) {
                case 55:
                    {
                    int LA64_2 = input.LA(2);

                    if ( (synpred144_Xmu2()) ) {
                        alt64=1;
                    }


                    }
                    break;
                case 67:
                    {
                    int LA64_3 = input.LA(2);

                    if ( (synpred144_Xmu2()) ) {
                        alt64=1;
                    }


                    }
                    break;
                case 68:
                    {
                    int LA64_4 = input.LA(2);

                    if ( (synpred144_Xmu2()) ) {
                        alt64=1;
                    }


                    }
                    break;
                case 43:
                    {
                    int LA64_5 = input.LA(2);

                    if ( (synpred144_Xmu2()) ) {
                        alt64=1;
                    }


                    }
                    break;

                }

                switch (alt64) {
            	case 1 :
            	    // Xmu2.g:7548:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    {
            	    // Xmu2.g:7548:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    // Xmu2.g:7549:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6314);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__CLAUSES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt64 >= 1 ) break loop64;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(64, input);
                        throw eee;
                }
                cnt64++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1567]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1568]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1569]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1570]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1571]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1572]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1573]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1574]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1575]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1576]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1577]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1578]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1579]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1580]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1581]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1582]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1583]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1584]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1585]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1586]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1587]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"
    // Xmu2.g:7597:1: parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement returns [edu.ustb.sei.mde.xmu2.statement.SwitchStatement element = null] : a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.SwitchStatement parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.SwitchStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.statement.CaseClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xmu2.g:7600:2: (a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' )
            // Xmu2.g:7601:2: a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}'
            {
            a0=(Token)match(input,65,FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6355); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1588]);
            	}

            a1=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6369); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1589]);
            	}

            // Xmu2.g:7629:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:7630:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6387);
            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1590]);
            	}

            a3=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6405); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1591]);
            	}

            a4=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6419); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1592]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1593]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1594]);
            	}

            // Xmu2.g:7685:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+
            int cnt65=0;
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==42||LA65_0==60) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // Xmu2.g:7686:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    {
            	    // Xmu2.g:7686:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    // Xmu2.g:7687:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6442);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_CaseClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__CASES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt65 >= 1 ) break loop65;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(65, input);
                        throw eee;
                }
                cnt65++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1595]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1596]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1597]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1598]);
            	}

            a6=(Token)match(input,74,FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6468); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1599]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1600]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1601]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1602]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1603]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1604]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1605]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1606]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1607]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1608]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1609]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1610]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1611]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1612]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1613]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1614]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1615]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1616]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1617]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1618]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1619]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"
    // Xmu2.g:7752:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause returns [edu.ustb.sei.mde.xmu2.statement.UpdateClause element = null] : ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateClause parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xmu2.g:7755:2: ( ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7756:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            // Xmu2.g:7756:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) )
            // Xmu2.g:7757:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            {
            // Xmu2.g:7757:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            int alt66=4;
            switch ( input.LA(1) ) {
            case 55:
                {
                alt66=1;
                }
                break;
            case 67:
                {
                alt66=2;
                }
                break;
            case 68:
                {
                alt66=3;
                }
                break;
            case 43:
                {
                alt66=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }

            switch (alt66) {
                case 1 :
                    // Xmu2.g:7758:4: a0= 'match'
                    {
                    a0=(Token)match(input,55,FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6506); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.MATCH_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:7771:8: a1= 'unmatchs'
                    {
                    a1=(Token)match(input,67,FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6521); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:7784:8: a2= 'unmatchv'
                    {
                    a2=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6536); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHV_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:7797:8: a3= 'default'
                    {
                    a3=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6551); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.DEFAULT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1620]);
            	}

            a6=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6572); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1621]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1622]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1623]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1624]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1625]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1626]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1627]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1628]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1629]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1630]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1631]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1632]);
            	}

            // Xmu2.g:7842:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7843:3: a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6590);
            a7_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_2, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1633]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1634]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1635]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1636]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1637]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1638]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1639]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1640]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1641]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1642]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1643]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1644]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1645]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1646]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1647]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1648]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1649]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1650]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1651]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1652]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1653]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"
    // Xmu2.g:7890:1: parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause returns [edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.PatternCaseClause parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xmu2.g:7893:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7894:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,42,FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6623); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1654]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1655]);
            	}

            // Xmu2.g:7909:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7910:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6641);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__CONDITION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1656]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6659); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1657]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1658]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1659]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1660]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1661]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1662]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1663]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1664]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1665]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1666]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1667]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1668]);
            	}

            // Xmu2.g:7960:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7961:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6677);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1669]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1670]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1671]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1672]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"
    // Xmu2.g:7991:1: parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause returns [edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xmu2.g:7994:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7995:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,42,FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6710); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1673]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1674]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1675]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1676]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1677]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1678]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1679]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1680]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1681]);
            	}

            // Xmu2.g:8017:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt67=6;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA67_1 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred152_Xmu2()) ) {
                    alt67=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA67_2 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred152_Xmu2()) ) {
                    alt67=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA67_3 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA67_4 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA67_5 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA67_6 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA67_7 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA67_8 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA67_9 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA67_10 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA67_11 = input.LA(2);

                if ( (synpred149_Xmu2()) ) {
                    alt67=1;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt67=2;
                }
                else if ( (synpred151_Xmu2()) ) {
                    alt67=3;
                }
                else if ( (synpred153_Xmu2()) ) {
                    alt67=5;
                }
                else if ( (true) ) {
                    alt67=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;

            }

            switch (alt67) {
                case 1 :
                    // Xmu2.g:8018:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6728);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:8037:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6742);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:8056:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6756);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:8075:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6770);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:8094:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6784);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:8113:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6798);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1682]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6816); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1683]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1684]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1685]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1686]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1687]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1688]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1689]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1690]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1691]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1692]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1693]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1694]);
            	}

            // Xmu2.g:8163:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:8164:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6834);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1695]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1696]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1697]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1698]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"
    // Xmu2.g:8194:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xmu2.g:8197:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) )
            // Xmu2.g:8198:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6867); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteNodeStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1699]);
            	}

            // Xmu2.g:8212:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:8213:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6885);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_NODE_STATEMENT__NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1700]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1701]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1702]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1703]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1704]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1705]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1706]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1707]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1708]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1709]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1710]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1711]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1712]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1713]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1714]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1715]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1716]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1717]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1718]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1719]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1720]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"
    // Xmu2.g:8260:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element = null] : (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) |c0= parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement );
    public final edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;

        edu.ustb.sei.mde.xmu2.statement.ReflectiveDeleteLinkStatement c0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xmu2.g:8263:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) |c0= parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==44) ) {
                int LA69_1 = input.LA(2);

                if ( (LA69_1==NAME) ) {
                    int LA69_2 = input.LA(3);

                    if ( (LA69_2==25) ) {
                        int LA69_3 = input.LA(4);

                        if ( (LA69_3==NAME) ) {
                            alt69=1;
                        }
                        else if ( (LA69_3==16) ) {
                            alt69=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 69, 3, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 69, 2, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;

            }
            switch (alt69) {
                case 1 :
                    // Xmu2.g:8264:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    {
                    a0=(Token)match(input,44,FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6918); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1721]);
                    	}

                    // Xmu2.g:8278:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
                    // Xmu2.g:8279:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6936);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__SOURCE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1722]);
                    	}

                    a2=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6954); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1723]);
                    	}

                    // Xmu2.g:8318:2: (a3= NAME )
                    // Xmu2.g:8319:3: a3= NAME
                    {
                    a3=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6972); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a3 != null) {
                    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
                    				tokenResolver.setOptions(getOptions());
                    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), result);
                    				Object resolvedObject = result.getResolvedToken();
                    				if (resolvedObject == null) {
                    					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    				}
                    				java.lang.String resolved = (java.lang.String) resolvedObject;
                    				if (resolved != null) {
                    					Object value = resolved;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), value);
                    					completedElement(value, false);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_3, resolved, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1724]);
                    	}

                    a4=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6993); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_4, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1725]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1726]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1727]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1728]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1729]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1730]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1731]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1732]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1733]);
                    	}

                    // Xmu2.g:8376:2: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt68=3;
                    switch ( input.LA(1) ) {
                    case 23:
                    case 57:
                        {
                        alt68=1;
                        }
                        break;
                    case NAME:
                        {
                        int LA68_3 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 58:
                        {
                        int LA68_4 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 66:
                        {
                        int LA68_5 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA68_6 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA68_7 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA68_8 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA68_9 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA68_10 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 17:
                        {
                        int LA68_11 = input.LA(2);

                        if ( (synpred155_Xmu2()) ) {
                            alt68=2;
                        }
                        else if ( (true) ) {
                            alt68=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 68, 0, input);

                        throw nvae;

                    }

                    switch (alt68) {
                        case 1 :
                            // Xmu2.g:8377:3: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7011);
                            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                            				startIncompleteElement(element);
                            			}
                            			if (a5_0 != null) {
                            				if (a5_0 != null) {
                            					Object value = a5_0;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_0, true);
                            				copyLocalizationInfos(a5_0, element);
                            			}
                            		}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:8396:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7025);
                            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                            				startIncompleteElement(element);
                            			}
                            			if (a5_1 != null) {
                            				if (a5_1 != null) {
                            					Object value = a5_1;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_1, true);
                            				copyLocalizationInfos(a5_1, element);
                            			}
                            		}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:8415:6: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7039);
                            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            			if (terminateParsing) {
                            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            			}
                            			if (element == null) {
                            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                            				startIncompleteElement(element);
                            			}
                            			if (a5_2 != null) {
                            				if (a5_2 != null) {
                            					Object value = a5_2;
                            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                            					completedElement(value, true);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_2, true);
                            				copyLocalizationInfos(a5_2, element);
                            			}
                            		}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1734]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1735]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1736]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1737]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1738]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1739]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1740]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1741]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1742]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1743]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1744]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1745]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1746]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1747]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1748]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1749]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1750]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1751]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1752]);
                    		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1753]);
                    		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1754]);
                    	}

                    }
                    break;
                case 2 :
                    // Xmu2.g:8462:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7062);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"
    // Xmu2.g:8466:1: parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement returns [edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element = null] : a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) ;
    public final edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xmu2.g:8469:2: (a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) )
            // Xmu2.g:8470:2: a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            {
            a0=(Token)match(input,45,FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7087); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getEnforcePatternStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1755]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getEnforcePatternStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1756]);
            	}

            // Xmu2.g:8485:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:8486:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7105);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ENFORCE_PATTERN_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1757]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1758]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1759]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1760]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1761]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1762]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1763]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1764]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1765]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1766]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1767]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1768]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1769]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1770]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1771]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1772]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1773]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1774]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1775]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1776]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1777]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"
    // Xmu2.g:8533:1: parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement returns [edu.ustb.sei.mde.xmu2.statement.ForEachStatement element = null] : a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ForEachStatement parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ForEachStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xmu2.g:8536:2: (a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:8537:2: a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7138); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1778]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1779]);
            	}

            // Xmu2.g:8552:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:8553:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7156);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1780]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7174); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1781]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1782]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1783]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1784]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1785]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1786]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1787]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1788]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1789]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1790]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1791]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1792]);
            	}

            // Xmu2.g:8603:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:8604:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7192);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1793]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1794]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1795]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1796]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1797]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1798]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1799]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1800]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1801]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1802]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1803]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1804]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1805]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1806]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1807]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1808]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1809]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1810]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1811]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1812]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1813]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"
    // Xmu2.g:8651:1: parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement returns [edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element = null] : (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' ;
    public final edu.ustb.sei.mde.xmu2.statement.RuleCallStatement parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xmu2.g:8654:2: ( (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' )
            // Xmu2.g:8655:2: (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')'
            {
            // Xmu2.g:8655:2: (a0= NAME )
            // Xmu2.g:8656:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7229); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.AbstractRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.statement.RuleCallStatement, edu.ustb.sei.mde.xmu2.AbstractRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getRuleCallStatementRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1814]);
            	}

            a1=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7250); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1815]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1816]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1817]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1818]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1819]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1820]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1821]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1822]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1823]);
            	}

            // Xmu2.g:8717:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==BOOLEAN||(LA73_0 >= NAME && LA73_0 <= QUOTED_39_39_92)||LA73_0==TYPE||LA73_0==17||LA73_0==58||LA73_0==66) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // Xmu2.g:8718:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:8718:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:8719:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:8719:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt70=2;
                    switch ( input.LA(1) ) {
                    case NAME:
                        {
                        int LA70_1 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 58:
                        {
                        int LA70_2 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 66:
                        {
                        int LA70_3 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA70_4 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA70_5 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA70_6 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA70_7 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA70_8 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 17:
                        {
                        int LA70_9 = input.LA(2);

                        if ( (synpred157_Xmu2()) ) {
                            alt70=1;
                        }
                        else if ( (true) ) {
                            alt70=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 70, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 70, 0, input);

                        throw nvae;

                    }

                    switch (alt70) {
                        case 1 :
                            // Xmu2.g:8720:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7279);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:8739:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7299);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_0, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1824]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1825]);
                    			}

                    // Xmu2.g:8765:4: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==22) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // Xmu2.g:8766:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:8766:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:8767:6: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a3=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7340); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1826]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1827]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1828]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1829]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1830]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1831]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1832]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1833]);
                    	    					}

                    	    // Xmu2.g:8788:6: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt71=2;
                    	    switch ( input.LA(1) ) {
                    	    case NAME:
                    	        {
                    	        int LA71_1 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 58:
                    	        {
                    	        int LA71_2 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        int LA71_3 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA71_4 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA71_5 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA71_6 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA71_7 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA71_8 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 17:
                    	        {
                    	        int LA71_9 = input.LA(2);

                    	        if ( (synpred158_Xmu2()) ) {
                    	            alt71=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt71=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 71, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 71, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt71) {
                    	        case 1 :
                    	            // Xmu2.g:8789:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7374);
                    	            a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_0 != null) {
                    	            								if (a4_0 != null) {
                    	            									Object value = a4_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	            								copyLocalizationInfos(a4_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:8808:14: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7400);
                    	            a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_1 != null) {
                    	            								if (a4_1 != null) {
                    	            									Object value = a4_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_1, a4_1, true);
                    	            								copyLocalizationInfos(a4_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1834]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1835]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1836]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1837]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1838]);
            	}

            a5=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7474); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1839]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1840]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1841]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1842]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1843]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1844]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1845]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1846]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1847]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1848]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1849]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1850]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1851]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1852]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1853]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1854]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1855]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1856]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1857]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1858]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1859]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Skip"
    // Xmu2.g:8885:1: parse_edu_ustb_sei_mde_xmu2_statement_Skip returns [edu.ustb.sei.mde.xmu2.statement.Skip element = null] : a0= 'skip' ;
    public final edu.ustb.sei.mde.xmu2.statement.Skip parse_edu_ustb_sei_mde_xmu2_statement_Skip() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Skip element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xmu2.g:8888:2: (a0= 'skip' )
            // Xmu2.g:8889:2: a0= 'skip'
            {
            a0=(Token)match(input,63,FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7503); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSkip();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_41_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1860]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1861]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1862]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1863]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1864]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1865]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1866]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1867]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1868]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1869]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1870]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1871]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1872]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1873]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1874]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1875]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1876]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1877]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1878]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1879]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1880]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Skip"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Fail"
    // Xmu2.g:8925:1: parse_edu_ustb_sei_mde_xmu2_statement_Fail returns [edu.ustb.sei.mde.xmu2.statement.Fail element = null] : a0= 'fail' ( (a1= QUOTED_39_39_92 ) )? ;
    public final edu.ustb.sei.mde.xmu2.statement.Fail parse_edu_ustb_sei_mde_xmu2_statement_Fail() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Fail element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Fail_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xmu2.g:8928:2: (a0= 'fail' ( (a1= QUOTED_39_39_92 ) )? )
            // Xmu2.g:8929:2: a0= 'fail' ( (a1= QUOTED_39_39_92 ) )?
            {
            a0=(Token)match(input,48,FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_statement_Fail7532); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createFail();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1881]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1882]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1883]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1884]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1885]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1886]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1887]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1888]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1889]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1890]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1891]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1892]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1893]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1894]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1895]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1896]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1897]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1898]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1899]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1900]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1901]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1902]);
            	}

            // Xmu2.g:8964:2: ( (a1= QUOTED_39_39_92 ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==QUOTED_39_39_92) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // Xmu2.g:8965:3: (a1= QUOTED_39_39_92 )
                    {
                    // Xmu2.g:8965:3: (a1= QUOTED_39_39_92 )
                    // Xmu2.g:8966:4: a1= QUOTED_39_39_92
                    {
                    a1=(Token)match(input,QUOTED_39_39_92,FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_statement_Fail7555); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createFail();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_39_39_92");
                    					tokenResolver.setOptions(getOptions());
                    					edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FAIL__MESSAGE), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					java.lang.String resolved = (java.lang.String) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FAIL__MESSAGE), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_1, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1903]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1904]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1905]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1906]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1907]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1908]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1909]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1910]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1911]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1912]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1913]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1914]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1915]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1916]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1917]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1918]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1919]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1920]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1921]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1922]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1923]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_edu_ustb_sei_mde_xmu2_statement_Fail_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Fail"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"
    // Xmu2.g:9024:1: parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause returns [edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element = null] : a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xmu2.g:9027:2: (a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:9028:2: a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,60,FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7600); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1924]);
            	}

            a1=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7614); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1925]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1926]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1927]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1928]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1929]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1930]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1931]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1932]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1933]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1934]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1935]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1936]);
            	}

            // Xmu2.g:9067:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:9068:3: a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7632);
            a2_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DEFAULT_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1937]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1938]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1939]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1940]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement"
    // Xmu2.g:9098:1: parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement returns [edu.ustb.sei.mde.xmu2.statement.AssignStatement element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.AssignStatement parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.AssignStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xmu2.g:9101:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:9102:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:9102:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:9103:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7669);
            a0_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__UPDATED_VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1941]);
            	}

            a1=(Token)match(input,29,FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7687); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1942]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1943]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1944]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1945]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1946]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1947]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1948]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1949]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1950]);
            	}

            // Xmu2.g:9150:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt75=8;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA75_1 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred167_Xmu2()) ) {
                    alt75=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA75_2 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred167_Xmu2()) ) {
                    alt75=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA75_3 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA75_4 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA75_5 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA75_6 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA75_7 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA75_8 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA75_9 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA75_10 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA75_11 = input.LA(2);

                if ( (synpred162_Xmu2()) ) {
                    alt75=1;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt75=2;
                }
                else if ( (synpred164_Xmu2()) ) {
                    alt75=3;
                }
                else if ( (synpred165_Xmu2()) ) {
                    alt75=4;
                }
                else if ( (synpred166_Xmu2()) ) {
                    alt75=5;
                }
                else if ( (synpred168_Xmu2()) ) {
                    alt75=7;
                }
                else if ( (true) ) {
                    alt75=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }

            switch (alt75) {
                case 1 :
                    // Xmu2.g:9151:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7705);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_0 != null) {
                    				if (a2_0 != null) {
                    					Object value = a2_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_0, true);
                    				copyLocalizationInfos(a2_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:9170:6: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7719);
                    a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_1 != null) {
                    				if (a2_1 != null) {
                    					Object value = a2_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_1, true);
                    				copyLocalizationInfos(a2_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:9189:6: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7733);
                    a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_2 != null) {
                    				if (a2_2 != null) {
                    					Object value = a2_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_2, true);
                    				copyLocalizationInfos(a2_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:9208:6: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7747);
                    a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_3 != null) {
                    				if (a2_3 != null) {
                    					Object value = a2_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_3, true);
                    				copyLocalizationInfos(a2_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:9227:6: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7761);
                    a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_4 != null) {
                    				if (a2_4 != null) {
                    					Object value = a2_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_4, true);
                    				copyLocalizationInfos(a2_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:9246:6: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7775);
                    a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_5 != null) {
                    				if (a2_5 != null) {
                    					Object value = a2_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_5, true);
                    				copyLocalizationInfos(a2_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:9265:6: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7789);
                    a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_6 != null) {
                    				if (a2_6 != null) {
                    					Object value = a2_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_6, true);
                    				copyLocalizationInfos(a2_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:9284:6: a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7803);
                    a2_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_7 != null) {
                    				if (a2_7 != null) {
                    					Object value = a2_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_44_0_0_2, a2_7, true);
                    				copyLocalizationInfos(a2_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1951]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1952]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1953]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1954]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1955]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1956]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1957]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1958]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1959]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1960]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1961]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1962]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1963]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1964]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1965]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1966]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1967]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1968]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1969]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1970]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1971]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration"
    // Xmu2.g:9331:1: parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration returns [edu.ustb.sei.mde.xmu2.ReflectiveVariableDeclaration element = null] : (a0= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.ReflectiveVariableDeclaration parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ReflectiveVariableDeclaration element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xmu2.g:9334:2: ( (a0= NAME ) )
            // Xmu2.g:9335:2: (a0= NAME )
            {
            // Xmu2.g:9335:2: (a0= NAME )
            // Xmu2.g:9336:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration7840); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createReflectiveVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.REFLECTIVE_VARIABLE_DECLARATION__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.REFLECTIVE_VARIABLE_DECLARATION__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_45_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1972]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode"
    // Xmu2.g:9373:1: parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode returns [edu.ustb.sei.mde.xmu2.pattern.ReflectivePatternNode element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration ) a1= ':' a2= '$' (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.ReflectivePatternNode parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ReflectivePatternNode element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu2.ReflectiveVariableDeclaration a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a3_4 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xmu2.g:9376:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration ) a1= ':' a2= '$' (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' ) )? )
            // Xmu2.g:9377:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration ) a1= ':' a2= '$' (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' ) )?
            {
            // Xmu2.g:9377:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration )
            // Xmu2.g:9378:3: a0_0= parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7880);
            a0_0=parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1973]);
            	}

            a1=(Token)match(input,27,FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7898); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1974]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7912); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1975]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1976]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1977]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1978]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1979]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1980]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1981]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1982]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1983]);
            	}

            // Xmu2.g:9439:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt76=5;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA76_1 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred171_Xmu2()) ) {
                    alt76=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA76_2 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred171_Xmu2()) ) {
                    alt76=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA76_3 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA76_4 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA76_5 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA76_6 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA76_7 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA76_8 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA76_9 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA76_10 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA76_11 = input.LA(2);

                if ( (synpred169_Xmu2()) ) {
                    alt76=1;
                }
                else if ( (synpred170_Xmu2()) ) {
                    alt76=2;
                }
                else if ( (synpred172_Xmu2()) ) {
                    alt76=4;
                }
                else if ( (true) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;

            }

            switch (alt76) {
                case 1 :
                    // Xmu2.g:9440:3: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7930);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                    				startIncompleteElement(element);
                    			}
                    			if (a3_0 != null) {
                    				if (a3_0 != null) {
                    					Object value = a3_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_3, a3_0, true);
                    				copyLocalizationInfos(a3_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:9459:6: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7944);
                    a3_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                    				startIncompleteElement(element);
                    			}
                    			if (a3_1 != null) {
                    				if (a3_1 != null) {
                    					Object value = a3_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_3, a3_1, true);
                    				copyLocalizationInfos(a3_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:9478:6: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7958);
                    a3_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                    				startIncompleteElement(element);
                    			}
                    			if (a3_2 != null) {
                    				if (a3_2 != null) {
                    					Object value = a3_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_3, a3_2, true);
                    				copyLocalizationInfos(a3_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:9497:6: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7972);
                    a3_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                    				startIncompleteElement(element);
                    			}
                    			if (a3_3 != null) {
                    				if (a3_3 != null) {
                    					Object value = a3_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_3, a3_3, true);
                    				copyLocalizationInfos(a3_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:9516:6: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7986);
                    a3_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                    				startIncompleteElement(element);
                    			}
                    			if (a3_4 != null) {
                    				if (a3_4 != null) {
                    					Object value = a3_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_3, a3_4, true);
                    				copyLocalizationInfos(a3_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1984]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1985]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1986]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1987]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1988]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1989]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1990]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1991]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1992]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1993]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1994]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1995]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1996]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1997]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1998]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1999]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2000]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2001]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2002]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2003]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2004]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2005]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2006]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2007]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2008]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2009]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2010]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2011]);
            	}

            // Xmu2.g:9568:2: ( (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==72) ) {
                switch ( input.LA(2) ) {
                    case NAME:
                        {
                        int LA79_3 = input.LA(3);

                        if ( (LA79_3==24||LA79_3==33) ) {
                            alt79=1;
                        }
                        }
                        break;
                    case 16:
                        {
                        alt79=1;
                        }
                        break;
                    case 74:
                        {
                        int LA79_5 = input.LA(3);

                        if ( (synpred175_Xmu2()) ) {
                            alt79=1;
                        }
                        }
                        break;
                }

            }
            switch (alt79) {
                case 1 :
                    // Xmu2.g:9569:3: (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' )
                    {
                    // Xmu2.g:9569:3: (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' )
                    // Xmu2.g:9570:4: a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}'
                    {
                    a4=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8013); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2012]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2013]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2014]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2015]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2016]);
                    			}

                    // Xmu2.g:9588:4: ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==NAME||LA78_0==16) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // Xmu2.g:9589:5: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            {
                            // Xmu2.g:9589:5: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            // Xmu2.g:9590:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            {
                            // Xmu2.g:9590:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            // Xmu2.g:9591:7: a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8054);
                            a5_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            							if (terminateParsing) {
                            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            							}
                            							if (element == null) {
                            								element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                            								startIncompleteElement(element);
                            							}
                            							if (a5_0 != null) {
                            								if (a5_0 != null) {
                            									Object value = a5_0;
                            									addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__EXPRESSIONS, value);
                            									completedElement(value, true);
                            								}
                            								collectHiddenTokens(element);
                            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_4_0_0_1_0_0_0, a5_0, true);
                            								copyLocalizationInfos(a5_0, element);
                            							}
                            						}

                            }


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2017]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2018]);
                            					}

                            // Xmu2.g:9617:6: ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==22) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    // Xmu2.g:9618:7: (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    {
                            	    // Xmu2.g:9618:7: (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    // Xmu2.g:9619:8: a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    {
                            	    a6=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8109); if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    								if (element == null) {
                            	    									element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                            	    									startIncompleteElement(element);
                            	    								}
                            	    								collectHiddenTokens(element);
                            	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_4_0_0_1_0_0_1_0_0_0, null, true);
                            	    								copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
                            	    							}

                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2019]);
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2020]);
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2021]);
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2022]);
                            	    							}

                            	    // Xmu2.g:9636:8: (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    // Xmu2.g:9637:9: a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            	    {
                            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8151);
                            	    a7_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            	    state._fsp--;
                            	    if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    									if (terminateParsing) {
                            	    										throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            	    									}
                            	    									if (element == null) {
                            	    										element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                            	    										startIncompleteElement(element);
                            	    									}
                            	    									if (a7_0 != null) {
                            	    										if (a7_0 != null) {
                            	    											Object value = a7_0;
                            	    											addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PATTERN_NODE__EXPRESSIONS, value);
                            	    											completedElement(value, true);
                            	    										}
                            	    										collectHiddenTokens(element);
                            	    										retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_4_0_0_1_0_0_1_0_0_1, a7_0, true);
                            	    										copyLocalizationInfos(a7_0, element);
                            	    									}
                            	    								}

                            	    }


                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2023]);
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2024]);
                            	    							}

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2025]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2026]);
                            					}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2027]);
                    			}

                    a8=(Token)match(input,74,FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8255); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_46_0_0_4_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2028]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2029]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2030]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2031]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2032]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2033]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2034]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2035]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2036]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2037]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2038]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2039]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2040]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2041]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2042]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2043]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2044]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2045]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2046]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2047]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2048]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2049]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2050]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2051]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2052]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2053]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2054]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2055]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2056]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2057]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2058]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2059]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2060]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2061]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2062]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2063]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2064]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2065]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2066]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2067]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2068]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2069]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2070]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2071]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2072]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2073]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2074]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2075]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2076]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2077]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2078]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2079]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2080]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2081]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression"
    // Xmu2.g:9753:1: parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.ReflectiveObjectPatternExpression element = null] : a0= '$' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a4= '=' ( (a5= '?' )? ) (a8_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.ReflectiveObjectPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ReflectiveObjectPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a4=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.LoopPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a3_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternNode a8_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xmu2.g:9756:2: (a0= '$' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a4= '=' ( (a5= '?' )? ) (a8_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) )
            // Xmu2.g:9757:2: a0= '$' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a4= '=' ( (a5= '?' )? ) (a8_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            {
            a0=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8303); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2082]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2083]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2084]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2085]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2086]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2087]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2088]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2089]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2090]);
            	}

            // Xmu2.g:9784:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt80=5;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA80_1 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred178_Xmu2()) ) {
                    alt80=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA80_2 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred178_Xmu2()) ) {
                    alt80=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA80_3 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA80_4 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA80_5 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA80_6 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA80_7 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA80_8 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA80_9 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA80_10 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA80_11 = input.LA(2);

                if ( (synpred176_Xmu2()) ) {
                    alt80=1;
                }
                else if ( (synpred177_Xmu2()) ) {
                    alt80=2;
                }
                else if ( (synpred179_Xmu2()) ) {
                    alt80=4;
                }
                else if ( (true) ) {
                    alt80=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;

            }

            switch (alt80) {
                case 1 :
                    // Xmu2.g:9785:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8321);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:9809:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8335);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:9833:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8349);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:9857:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8363);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:9881:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8377);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2091]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2092]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2093]);
            	}

            // Xmu2.g:9913:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==24) ) {
                int LA81_1 = input.LA(2);

                if ( (LA81_1==47||LA81_1==50||LA81_1==62) ) {
                    alt81=1;
                }
            }
            switch (alt81) {
                case 1 :
                    // Xmu2.g:9914:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:9914:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:9915:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:9915:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:9916:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8410);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2094]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2095]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2096]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2097]);
            	}

            // Xmu2.g:9955:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==24) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // Xmu2.g:9956:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:9956:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:9957:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:9957:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:9958:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8466);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2098]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2099]);
            	}

            a4=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8507); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2100]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2101]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2102]);
            	}

            // Xmu2.g:10016:2: ( (a5= '?' )? )
            // Xmu2.g:10017:3: (a5= '?' )?
            {
            // Xmu2.g:10017:3: (a5= '?' )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==36) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // Xmu2.g:10018:4: a5= '?'
                    {
                    a5=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8530); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_5, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2103]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectiveObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2104]);
            	}

            // Xmu2.g:10043:2: (a8_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:10044:3: a8_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8555);
            a8_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectiveObjectPatternExpression();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            				}
            			}
            			if (a8_0 != null) {
            				if (a8_0 != null) {
            					Object value = a8_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_OBJECT_PATTERN_EXPRESSION__TARGET_NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_47_0_0_6, a8_0, true);
            				copyLocalizationInfos(a8_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2105]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2106]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2107]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2108]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression"
    // Xmu2.g:10079:1: parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.ReflectivePropertyPatternExpression element = null] : a0= '$' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a4= '=' ( (a5= '?' )? ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.ReflectivePropertyPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ReflectivePropertyPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a4=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.LoopPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a3_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a8_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a8_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a8_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a8_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xmu2.g:10082:2: (a0= '$' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a4= '=' ( (a5= '?' )? ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:10083:2: a0= '$' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a4= '=' ( (a5= '?' )? ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            a0=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8588); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2109]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2110]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2111]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2112]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2113]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2114]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2115]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2116]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2117]);
            	}

            // Xmu2.g:10110:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt84=5;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA84_1 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred185_Xmu2()) ) {
                    alt84=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA84_2 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred185_Xmu2()) ) {
                    alt84=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA84_3 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA84_4 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA84_5 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA84_6 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA84_7 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA84_8 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA84_9 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA84_10 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA84_11 = input.LA(2);

                if ( (synpred183_Xmu2()) ) {
                    alt84=1;
                }
                else if ( (synpred184_Xmu2()) ) {
                    alt84=2;
                }
                else if ( (synpred186_Xmu2()) ) {
                    alt84=4;
                }
                else if ( (true) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;

            }

            switch (alt84) {
                case 1 :
                    // Xmu2.g:10111:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8606);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:10135:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8620);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:10159:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8634);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:10183:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8648);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:10207:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8662);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2118]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2119]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2120]);
            	}

            // Xmu2.g:10239:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==24) ) {
                int LA85_1 = input.LA(2);

                if ( (LA85_1==47||LA85_1==50||LA85_1==62) ) {
                    alt85=1;
                }
            }
            switch (alt85) {
                case 1 :
                    // Xmu2.g:10240:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:10240:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:10241:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:10241:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:10242:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8695);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2121]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2122]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2123]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2124]);
            	}

            // Xmu2.g:10281:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==24) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // Xmu2.g:10282:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:10282:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:10283:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:10283:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:10284:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8751);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2125]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2126]);
            	}

            a4=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8792); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2127]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2128]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2129]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2130]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2131]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2132]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2133]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2134]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2135]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2136]);
            	}

            // Xmu2.g:10349:2: ( (a5= '?' )? )
            // Xmu2.g:10350:3: (a5= '?' )?
            {
            // Xmu2.g:10350:3: (a5= '?' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==36) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // Xmu2.g:10351:4: a5= '?'
                    {
                    a5=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8815); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_5, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2137]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2138]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2139]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2140]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2141]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2142]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2143]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2144]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getReflectivePropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2145]);
            	}

            // Xmu2.g:10383:2: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt88=8;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA88_1 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred195_Xmu2()) ) {
                    alt88=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA88_2 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred195_Xmu2()) ) {
                    alt88=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA88_3 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA88_4 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA88_5 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA88_6 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA88_7 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA88_8 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA88_9 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA88_10 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA88_11 = input.LA(2);

                if ( (synpred190_Xmu2()) ) {
                    alt88=1;
                }
                else if ( (synpred191_Xmu2()) ) {
                    alt88=2;
                }
                else if ( (synpred192_Xmu2()) ) {
                    alt88=3;
                }
                else if ( (synpred193_Xmu2()) ) {
                    alt88=4;
                }
                else if ( (synpred194_Xmu2()) ) {
                    alt88=5;
                }
                else if ( (synpred196_Xmu2()) ) {
                    alt88=7;
                }
                else if ( (true) ) {
                    alt88=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;

            }

            switch (alt88) {
                case 1 :
                    // Xmu2.g:10384:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8840);
                    a8_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:10408:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8854);
                    a8_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:10432:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8868);
                    a8_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:10456:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8882);
                    a8_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:10480:6: a8_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8896);
                    a8_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_4 != null) {
                    				if (a8_4 != null) {
                    					Object value = a8_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_4, true);
                    				copyLocalizationInfos(a8_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:10504:6: a8_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8910);
                    a8_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_5 != null) {
                    				if (a8_5 != null) {
                    					Object value = a8_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_5, true);
                    				copyLocalizationInfos(a8_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:10528:6: a8_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8924);
                    a8_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_6 != null) {
                    				if (a8_6 != null) {
                    					Object value = a8_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_6, true);
                    				copyLocalizationInfos(a8_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:10552:6: a8_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8938);
                    a8_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createReflectivePropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a8_7 != null) {
                    				if (a8_7 != null) {
                    					Object value = a8_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.REFLECTIVE_PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_48_0_0_6, a8_7, true);
                    				copyLocalizationInfos(a8_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2146]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2147]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2148]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2149]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement"
    // Xmu2.g:10587:1: parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement returns [edu.ustb.sei.mde.xmu2.statement.ReflectiveDeleteLinkStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' a3= '$' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a5= '=' (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ReflectiveDeleteLinkStatement parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ReflectiveDeleteLinkStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a4_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a4_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a6_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xmu2.g:10590:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' a3= '$' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a5= '=' (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:10591:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' a3= '$' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a5= '=' (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement8971); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2150]);
            	}

            // Xmu2.g:10605:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:10606:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement8989);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2151]);
            	}

            a2=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9007); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2152]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9021); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2153]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2154]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2155]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2156]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2157]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2158]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2159]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2160]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2161]);
            	}

            // Xmu2.g:10667:2: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt89=5;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA89_1 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred199_Xmu2()) ) {
                    alt89=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 1, input);

                    throw nvae;

                }
                }
                break;
            case 23:
                {
                int LA89_2 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred199_Xmu2()) ) {
                    alt89=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA89_3 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA89_4 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA89_5 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA89_6 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA89_7 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA89_8 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA89_9 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA89_10 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA89_11 = input.LA(2);

                if ( (synpred197_Xmu2()) ) {
                    alt89=1;
                }
                else if ( (synpred198_Xmu2()) ) {
                    alt89=2;
                }
                else if ( (synpred200_Xmu2()) ) {
                    alt89=4;
                }
                else if ( (true) ) {
                    alt89=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;

            }

            switch (alt89) {
                case 1 :
                    // Xmu2.g:10668:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9039);
                    a4_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_4, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:10687:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9053);
                    a4_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_4, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:10706:6: a4_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9067);
                    a4_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_2 != null) {
                    				if (a4_2 != null) {
                    					Object value = a4_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_4, a4_2, true);
                    				copyLocalizationInfos(a4_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:10725:6: a4_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9081);
                    a4_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_3 != null) {
                    				if (a4_3 != null) {
                    					Object value = a4_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_4, a4_3, true);
                    				copyLocalizationInfos(a4_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:10744:6: a4_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9095);
                    a4_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_4 != null) {
                    				if (a4_4 != null) {
                    					Object value = a4_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__REFLECTIVE_IDENTIFIER), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_4, a4_4, true);
                    				copyLocalizationInfos(a4_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2162]);
            	}

            a5=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9113); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2163]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2164]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2165]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2166]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2167]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2168]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2169]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2170]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getReflectiveDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2171]);
            	}

            // Xmu2.g:10791:2: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt90=3;
            switch ( input.LA(1) ) {
            case 23:
            case 57:
                {
                alt90=1;
                }
                break;
            case NAME:
                {
                int LA90_3 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 3, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA90_4 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 4, input);

                    throw nvae;

                }
                }
                break;
            case 66:
                {
                int LA90_5 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA90_6 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA90_7 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA90_8 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA90_9 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA90_10 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 10, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA90_11 = input.LA(2);

                if ( (synpred202_Xmu2()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;

            }

            switch (alt90) {
                case 1 :
                    // Xmu2.g:10792:3: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9131);
                    a6_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a6_0 != null) {
                    				if (a6_0 != null) {
                    					Object value = a6_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_6, a6_0, true);
                    				copyLocalizationInfos(a6_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:10811:6: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9145);
                    a6_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a6_1 != null) {
                    				if (a6_1 != null) {
                    					Object value = a6_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_6, a6_1, true);
                    				copyLocalizationInfos(a6_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:10830:6: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9159);
                    a6_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createReflectiveDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a6_2 != null) {
                    				if (a6_2 != null) {
                    					Object value = a6_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.REFLECTIVE_DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_49_0_0_6, a6_2, true);
                    				copyLocalizationInfos(a6_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2172]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2173]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2174]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2175]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2176]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2177]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2178]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2179]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2180]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2181]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2182]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2183]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2184]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2185]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2186]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2187]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2188]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2189]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2190]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2191]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2192]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_AbstractRule"
    // Xmu2.g:10877:1: parse_edu_ustb_sei_mde_xmu2_AbstractRule returns [edu.ustb.sei.mde.xmu2.AbstractRule element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_ModelRule |c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule );
    public final edu.ustb.sei.mde.xmu2.AbstractRule parse_edu_ustb_sei_mde_xmu2_AbstractRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.AbstractRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.ModelRule c0 =null;

        edu.ustb.sei.mde.xmu2.ArithmeticRule c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Xmu2.g:10878:2: (c0= parse_edu_ustb_sei_mde_xmu2_ModelRule |c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule )
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==61) ) {
                alt91=1;
            }
            else if ( (LA91_0==52) ) {
                alt91=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;

            }
            switch (alt91) {
                case 1 :
                    // Xmu2.g:10879:2: c0= parse_edu_ustb_sei_mde_xmu2_ModelRule
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule9188);
                    c0=parse_edu_ustb_sei_mde_xmu2_ModelRule();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:10880:4: c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule9198);
                    c1=parse_edu_ustb_sei_mde_xmu2_ArithmeticRule();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_AbstractRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Statement"
    // Xmu2.g:10884:1: parse_edu_ustb_sei_mde_xmu2_statement_Statement returns [edu.ustb.sei.mde.xmu2.statement.Statement element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip |c9= parse_edu_ustb_sei_mde_xmu2_statement_Fail |c10= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement |c11= parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement );
    public final edu.ustb.sei.mde.xmu2.statement.Statement parse_edu_ustb_sei_mde_xmu2_statement_Statement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Statement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.BlockStatement c0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateStatement c1 =null;

        edu.ustb.sei.mde.xmu2.statement.SwitchStatement c2 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement c3 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement c4 =null;

        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement c5 =null;

        edu.ustb.sei.mde.xmu2.statement.ForEachStatement c6 =null;

        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement c7 =null;

        edu.ustb.sei.mde.xmu2.statement.Skip c8 =null;

        edu.ustb.sei.mde.xmu2.statement.Fail c9 =null;

        edu.ustb.sei.mde.xmu2.statement.AssignStatement c10 =null;

        edu.ustb.sei.mde.xmu2.statement.ReflectiveDeleteLinkStatement c11 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }

            // Xmu2.g:10885:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip |c9= parse_edu_ustb_sei_mde_xmu2_statement_Fail |c10= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement |c11= parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement )
            int alt92=12;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt92=1;
                }
                break;
            case 69:
                {
                alt92=2;
                }
                break;
            case 65:
                {
                alt92=3;
                }
                break;
            case 44:
                {
                int LA92_4 = input.LA(2);

                if ( (synpred207_Xmu2()) ) {
                    alt92=4;
                }
                else if ( (synpred208_Xmu2()) ) {
                    alt92=5;
                }
                else if ( (true) ) {
                    alt92=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 92, 4, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                alt92=6;
                }
                break;
            case 51:
                {
                alt92=7;
                }
                break;
            case NAME:
                {
                int LA92_7 = input.LA(2);

                if ( (synpred211_Xmu2()) ) {
                    alt92=8;
                }
                else if ( (synpred214_Xmu2()) ) {
                    alt92=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 92, 7, input);

                    throw nvae;

                }
                }
                break;
            case 63:
                {
                alt92=9;
                }
                break;
            case 48:
                {
                alt92=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;

            }

            switch (alt92) {
                case 1 :
                    // Xmu2.g:10886:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9219);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:10887:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9229);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:10888:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9239);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:10889:4: c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9249);
                    c3=parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:10890:4: c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9259);
                    c4=parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:10891:4: c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9269);
                    c5=parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:10892:4: c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9279);
                    c6=parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:10893:4: c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9289);
                    c7=parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xmu2.g:10894:4: c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9299);
                    c8=parse_edu_ustb_sei_mde_xmu2_statement_Skip();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xmu2.g:10895:4: c9= parse_edu_ustb_sei_mde_xmu2_statement_Fail
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Fail_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9309);
                    c9=parse_edu_ustb_sei_mde_xmu2_statement_Fail();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xmu2.g:10896:4: c10= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9319);
                    c10=parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xmu2.g:10897:4: c11= parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9329);
                    c11=parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 53, parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Statement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"
    // Xmu2.g:10901:1: parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression returns [edu.ustb.sei.mde.xmu2.expression.AtomicExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression );
    public final edu.ustb.sei.mde.xmu2.expression.AtomicExpression parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AtomicExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c5 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c6 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return element; }

            // Xmu2.g:10902:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt93=8;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt93=1;
                }
                break;
            case 58:
            case 66:
                {
                alt93=2;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt93=3;
                }
                break;
            case NUMBER:
                {
                alt93=4;
                }
                break;
            case BOOLEAN:
                {
                alt93=5;
                }
                break;
            case TYPE:
                {
                alt93=6;
                }
                break;
            case OBJ_URI:
                {
                alt93=7;
                }
                break;
            case 17:
                {
                alt93=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;

            }

            switch (alt93) {
                case 1 :
                    // Xmu2.g:10903:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9350);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:10904:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9360);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:10905:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9370);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:10906:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9380);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:10907:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9390);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:10908:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9400);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:10909:4: c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9410);
                    c6=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:10910:4: c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9420);
                    c7=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 54, parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"
    // Xmu2.g:10914:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PatternExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression |c2= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression |c3= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression );
    public final edu.ustb.sei.mde.xmu2.pattern.PatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression c1 =null;

        edu.ustb.sei.mde.xmu2.pattern.ReflectiveObjectPatternExpression c2 =null;

        edu.ustb.sei.mde.xmu2.pattern.ReflectivePropertyPatternExpression c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return element; }

            // Xmu2.g:10915:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression |c2= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression |c3= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression )
            int alt94=4;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==NAME) ) {
                int LA94_1 = input.LA(2);

                if ( (synpred222_Xmu2()) ) {
                    alt94=1;
                }
                else if ( (synpred223_Xmu2()) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA94_0==16) ) {
                int LA94_2 = input.LA(2);

                if ( (synpred222_Xmu2()) ) {
                    alt94=1;
                }
                else if ( (synpred223_Xmu2()) ) {
                    alt94=2;
                }
                else if ( (synpred224_Xmu2()) ) {
                    alt94=3;
                }
                else if ( (true) ) {
                    alt94=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;

            }
            switch (alt94) {
                case 1 :
                    // Xmu2.g:10916:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9441);
                    c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:10917:4: c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9451);
                    c1=parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:10918:4: c2= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9461);
                    c2=parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:10919:4: c3= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9471);
                    c3=parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 55, parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"
    // Xmu2.g:10923:1: parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression returns [edu.ustb.sei.mde.xmu2.expression.ConstantExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression );
    public final edu.ustb.sei.mde.xmu2.expression.ConstantExpression parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ConstantExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c5 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return element; }

            // Xmu2.g:10924:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression )
            int alt95=6;
            switch ( input.LA(1) ) {
            case 58:
            case 66:
                {
                alt95=1;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt95=2;
                }
                break;
            case NUMBER:
                {
                alt95=3;
                }
                break;
            case BOOLEAN:
                {
                alt95=4;
                }
                break;
            case TYPE:
                {
                alt95=5;
                }
                break;
            case OBJ_URI:
                {
                alt95=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;

            }

            switch (alt95) {
                case 1 :
                    // Xmu2.g:10925:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9492);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:10926:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9502);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:10927:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9512);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:10928:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9522);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:10929:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9532);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:10930:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9542);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 56, parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_Path"
    // Xmu2.g:10934:1: parse_edu_ustb_sei_mde_xmu2_expression_Path returns [edu.ustb.sei.mde.xmu2.expression.Path element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath );
    public final edu.ustb.sei.mde.xmu2.expression.Path parse_edu_ustb_sei_mde_xmu2_expression_Path() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.Path element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.LoopPath c0 =null;

        edu.ustb.sei.mde.xmu2.expression.FeaturePath c1 =null;

        edu.ustb.sei.mde.xmu2.expression.OperationPath c2 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return element; }

            // Xmu2.g:10935:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
            int alt96=4;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==24) ) {
                int LA96_1 = input.LA(2);

                if ( (LA96_1==47||LA96_1==50||LA96_1==62) ) {
                    alt96=1;
                }
                else if ( (LA96_1==40||LA96_1==49||LA96_1==54) ) {
                    alt96=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==25) ) {
                int LA96_2 = input.LA(2);

                if ( (LA96_2==NAME) ) {
                    int LA96_5 = input.LA(3);

                    if ( (LA96_5==EOF||LA96_5==NAME||(LA96_5 >= 18 && LA96_5 <= 26)||(LA96_5 >= 30 && LA96_5 <= 35)||(LA96_5 >= 37 && LA96_5 <= 39)||(LA96_5 >= 41 && LA96_5 <= 45)||LA96_5==48||LA96_5==51||LA96_5==55||(LA96_5 >= 59 && LA96_5 <= 60)||LA96_5==63||LA96_5==65||(LA96_5 >= 67 && LA96_5 <= 69)||(LA96_5 >= 71 && LA96_5 <= 72)||LA96_5==74) ) {
                        alt96=2;
                    }
                    else if ( (LA96_5==17) ) {
                        alt96=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 96, 5, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;

            }
            switch (alt96) {
                case 1 :
                    // Xmu2.g:10936:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9563);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:10937:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9573);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:10938:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9583);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:10939:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9593);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 57, parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_Path"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"
    // Xmu2.g:10943:1: parse_edu_ustb_sei_mde_xmu2_statement_CaseClause returns [edu.ustb.sei.mde.xmu2.statement.CaseClause element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause );
    public final edu.ustb.sei.mde.xmu2.statement.CaseClause parse_edu_ustb_sei_mde_xmu2_statement_CaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.CaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause c0 =null;

        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause c1 =null;

        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return element; }

            // Xmu2.g:10944:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause )
            int alt97=3;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==42) ) {
                int LA97_1 = input.LA(2);

                if ( (LA97_1==NAME) ) {
                    int LA97_3 = input.LA(3);

                    if ( (LA97_3==27) ) {
                        alt97=1;
                    }
                    else if ( ((LA97_3 >= 19 && LA97_3 <= 21)||(LA97_3 >= 23 && LA97_3 <= 26)||(LA97_3 >= 31 && LA97_3 <= 35)||LA97_3==39||LA97_3==59) ) {
                        alt97=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 3, input);

                        throw nvae;

                    }
                }
                else if ( (LA97_1==BOOLEAN||(LA97_1 >= NUMBER && LA97_1 <= QUOTED_39_39_92)||LA97_1==TYPE||LA97_1==17||LA97_1==23||(LA97_1 >= 57 && LA97_1 <= 58)||LA97_1==66) ) {
                    alt97=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA97_0==60) ) {
                alt97=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;

            }
            switch (alt97) {
                case 1 :
                    // Xmu2.g:10945:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause9614);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:10946:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause9624);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:10947:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause9634);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 58, parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"

    // $ANTLR start synpred16_Xmu2
    public final void synpred16_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;


        // Xmu2.g:2103:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:2103:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred16_Xmu21670);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Xmu2

    // $ANTLR start synpred17_Xmu2
    public final void synpred17_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;


        // Xmu2.g:2122:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:2122:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred17_Xmu21690);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Xmu2

    // $ANTLR start synpred18_Xmu2
    public final void synpred18_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;


        // Xmu2.g:2141:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:2141:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred18_Xmu21710);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Xmu2

    // $ANTLR start synpred19_Xmu2
    public final void synpred19_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;


        // Xmu2.g:2160:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:2160:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred19_Xmu21730);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Xmu2

    // $ANTLR start synpred20_Xmu2
    public final void synpred20_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;


        // Xmu2.g:2179:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:2179:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred20_Xmu21750);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Xmu2

    // $ANTLR start synpred21_Xmu2
    public final void synpred21_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;


        // Xmu2.g:2198:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:2198:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred21_Xmu21770);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Xmu2

    // $ANTLR start synpred22_Xmu2
    public final void synpred22_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;


        // Xmu2.g:2217:10: (a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:2217:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred22_Xmu21790);
        a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Xmu2

    // $ANTLR start synpred26_Xmu2
    public final void synpred26_Xmu2_fragment() throws RecognitionException {
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a4_0 =null;


        // Xmu2.g:2384:3: ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )
        // Xmu2.g:2384:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
        {
        // Xmu2.g:2384:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
        // Xmu2.g:2385:4: a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}'
        {
        a1=(Token)match(input,72,FOLLOW_72_in_synpred26_Xmu21917); if (state.failed) return ;

        // Xmu2.g:2403:4: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
        int alt103=2;
        int LA103_0 = input.LA(1);

        if ( (LA103_0==NAME||LA103_0==16) ) {
            alt103=1;
        }
        switch (alt103) {
            case 1 :
                // Xmu2.g:2404:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                {
                // Xmu2.g:2404:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                // Xmu2.g:2405:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                {
                // Xmu2.g:2405:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                // Xmu2.g:2406:7: a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                {
                pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu21958);
                a2_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                // Xmu2.g:2432:6: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                loop102:
                do {
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==22) ) {
                        alt102=1;
                    }


                    switch (alt102) {
                	case 1 :
                	    // Xmu2.g:2433:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    {
                	    // Xmu2.g:2433:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    // Xmu2.g:2434:8: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    {
                	    a3=(Token)match(input,22,FOLLOW_22_in_synpred26_Xmu22013); if (state.failed) return ;

                	    // Xmu2.g:2451:8: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    // Xmu2.g:2452:9: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                	    {
                	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu22055);
                	    a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop102;
                    }
                } while (true);


                }


                }
                break;

        }


        a5=(Token)match(input,74,FOLLOW_74_in_synpred26_Xmu22159); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred26_Xmu2

    // $ANTLR start synpred35_Xmu2
    public final void synpred35_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;


        // Xmu2.g:2989:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:2989:3: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred35_Xmu22640);
        a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred35_Xmu2

    // $ANTLR start synpred36_Xmu2
    public final void synpred36_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;


        // Xmu2.g:3013:6: (a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3013:6: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred36_Xmu22654);
        a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred36_Xmu2

    // $ANTLR start synpred37_Xmu2
    public final void synpred37_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;


        // Xmu2.g:3037:6: (a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3037:6: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred37_Xmu22668);
        a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred37_Xmu2

    // $ANTLR start synpred38_Xmu2
    public final void synpred38_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;


        // Xmu2.g:3061:6: (a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3061:6: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred38_Xmu22682);
        a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred38_Xmu2

    // $ANTLR start synpred39_Xmu2
    public final void synpred39_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;


        // Xmu2.g:3085:6: (a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3085:6: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred39_Xmu22696);
        a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Xmu2

    // $ANTLR start synpred40_Xmu2
    public final void synpred40_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;


        // Xmu2.g:3109:6: (a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3109:6: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred40_Xmu22710);
        a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred40_Xmu2

    // $ANTLR start synpred41_Xmu2
    public final void synpred41_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;


        // Xmu2.g:3133:6: (a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3133:6: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred41_Xmu22724);
        a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred41_Xmu2

    // $ANTLR start synpred45_Xmu2
    public final void synpred45_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;


        // Xmu2.g:3325:3: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3325:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred45_Xmu22914);
        a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Xmu2

    // $ANTLR start synpred46_Xmu2
    public final void synpred46_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;


        // Xmu2.g:3344:6: (a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3344:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred46_Xmu22928);
        a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Xmu2

    // $ANTLR start synpred47_Xmu2
    public final void synpred47_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;


        // Xmu2.g:3363:6: (a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3363:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred47_Xmu22942);
        a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Xmu2

    // $ANTLR start synpred48_Xmu2
    public final void synpred48_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;


        // Xmu2.g:3382:6: (a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3382:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred48_Xmu22956);
        a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred48_Xmu2

    // $ANTLR start synpred49_Xmu2
    public final void synpred49_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;


        // Xmu2.g:3401:6: (a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3401:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred49_Xmu22970);
        a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred49_Xmu2

    // $ANTLR start synpred50_Xmu2
    public final void synpred50_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;


        // Xmu2.g:3420:6: (a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3420:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred50_Xmu22984);
        a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Xmu2

    // $ANTLR start synpred51_Xmu2
    public final void synpred51_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;


        // Xmu2.g:3439:6: (a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3439:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred51_Xmu22998);
        a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred51_Xmu2

    // $ANTLR start synpred52_Xmu2
    public final void synpred52_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;


        // Xmu2.g:3725:5: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3725:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred52_Xmu23181);
        a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred52_Xmu2

    // $ANTLR start synpred53_Xmu2
    public final void synpred53_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;


        // Xmu2.g:3744:10: (a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3744:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred53_Xmu23201);
        a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred53_Xmu2

    // $ANTLR start synpred54_Xmu2
    public final void synpred54_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;


        // Xmu2.g:3763:10: (a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3763:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred54_Xmu23221);
        a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred54_Xmu2

    // $ANTLR start synpred55_Xmu2
    public final void synpred55_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;


        // Xmu2.g:3782:10: (a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3782:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred55_Xmu23241);
        a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred55_Xmu2

    // $ANTLR start synpred56_Xmu2
    public final void synpred56_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;


        // Xmu2.g:3801:10: (a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3801:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred56_Xmu23261);
        a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred56_Xmu2

    // $ANTLR start synpred57_Xmu2
    public final void synpred57_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;


        // Xmu2.g:3820:10: (a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3820:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred57_Xmu23281);
        a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred57_Xmu2

    // $ANTLR start synpred58_Xmu2
    public final void synpred58_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;


        // Xmu2.g:3839:10: (a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3839:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred58_Xmu23301);
        a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred58_Xmu2

    // $ANTLR start synpred59_Xmu2
    public final void synpred59_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;


        // Xmu2.g:3909:7: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3909:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred59_Xmu23396);
        a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred59_Xmu2

    // $ANTLR start synpred60_Xmu2
    public final void synpred60_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;


        // Xmu2.g:3928:14: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3928:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred60_Xmu23422);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred60_Xmu2

    // $ANTLR start synpred61_Xmu2
    public final void synpred61_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;


        // Xmu2.g:3947:14: (a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3947:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred61_Xmu23448);
        a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred61_Xmu2

    // $ANTLR start synpred62_Xmu2
    public final void synpred62_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;


        // Xmu2.g:3966:14: (a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3966:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred62_Xmu23474);
        a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred62_Xmu2

    // $ANTLR start synpred63_Xmu2
    public final void synpred63_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;


        // Xmu2.g:3985:14: (a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3985:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred63_Xmu23500);
        a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred63_Xmu2

    // $ANTLR start synpred64_Xmu2
    public final void synpred64_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;


        // Xmu2.g:4004:14: (a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:4004:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred64_Xmu23526);
        a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred64_Xmu2

    // $ANTLR start synpred65_Xmu2
    public final void synpred65_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;


        // Xmu2.g:4023:14: (a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4023:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred65_Xmu23552);
        a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred65_Xmu2

    // $ANTLR start synpred70_Xmu2
    public final void synpred70_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;


        // Xmu2.g:4235:4: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:4235:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred70_Xmu23778);
        a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred70_Xmu2

    // $ANTLR start synpred71_Xmu2
    public final void synpred71_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;


        // Xmu2.g:4254:8: (a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:4254:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred71_Xmu23795);
        a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred71_Xmu2

    // $ANTLR start synpred72_Xmu2
    public final void synpred72_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;


        // Xmu2.g:4273:8: (a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:4273:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred72_Xmu23812);
        a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred72_Xmu2

    // $ANTLR start synpred73_Xmu2
    public final void synpred73_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;


        // Xmu2.g:4292:8: (a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:4292:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred73_Xmu23829);
        a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred73_Xmu2

    // $ANTLR start synpred74_Xmu2
    public final void synpred74_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;


        // Xmu2.g:4311:8: (a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:4311:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred74_Xmu23846);
        a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred74_Xmu2

    // $ANTLR start synpred75_Xmu2
    public final void synpred75_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;


        // Xmu2.g:4330:8: (a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:4330:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred75_Xmu23863);
        a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred75_Xmu2

    // $ANTLR start synpred76_Xmu2
    public final void synpred76_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;


        // Xmu2.g:4349:8: (a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4349:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred76_Xmu23880);
        a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred76_Xmu2

    // $ANTLR start synpred80_Xmu2
    public final void synpred80_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.Path a1_0 =null;


        // Xmu2.g:4614:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )
        // Xmu2.g:4614:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
        {
        // Xmu2.g:4614:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
        // Xmu2.g:4615:4: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_synpred80_Xmu24051);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_Path();

        state._fsp--;
        if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred80_Xmu2

    // $ANTLR start synpred82_Xmu2
    public final void synpred82_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:5298:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:5298:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred82_Xmu24409);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred82_Xmu2

    // $ANTLR start synpred83_Xmu2
    public final void synpred83_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:5317:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:5317:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred83_Xmu24423);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred83_Xmu2

    // $ANTLR start synpred84_Xmu2
    public final void synpred84_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:5336:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:5336:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred84_Xmu24437);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred84_Xmu2

    // $ANTLR start synpred85_Xmu2
    public final void synpred85_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;


        // Xmu2.g:5355:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:5355:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred85_Xmu24451);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred85_Xmu2

    // $ANTLR start synpred86_Xmu2
    public final void synpred86_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;


        // Xmu2.g:5374:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5374:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred86_Xmu24465);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred86_Xmu2

    // $ANTLR start synpred87_Xmu2
    public final void synpred87_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;


        // Xmu2.g:5393:6: (a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5393:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred87_Xmu24479);
        a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred87_Xmu2

    // $ANTLR start synpred88_Xmu2
    public final void synpred88_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;


        // Xmu2.g:5412:6: (a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5412:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred88_Xmu24493);
        a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred88_Xmu2

    // $ANTLR start synpred90_Xmu2
    public final void synpred90_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:5564:3: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5564:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred90_Xmu24603);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred90_Xmu2

    // $ANTLR start synpred92_Xmu2
    public final void synpred92_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;


        // Xmu2.g:5675:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5675:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred92_Xmu24668);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred92_Xmu2

    // $ANTLR start synpred95_Xmu2
    public final void synpred95_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:5784:10: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5784:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred95_Xmu24798);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred95_Xmu2

    // $ANTLR start synpred97_Xmu2
    public final void synpred97_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;


        // Xmu2.g:5922:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5922:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred97_Xmu24878);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred97_Xmu2

    // $ANTLR start synpred98_Xmu2
    public final void synpred98_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;


        // Xmu2.g:5941:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5941:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred98_Xmu24892);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred98_Xmu2

    // $ANTLR start synpred99_Xmu2
    public final void synpred99_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;


        // Xmu2.g:5960:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5960:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred99_Xmu24906);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred99_Xmu2

    // $ANTLR start synpred102_Xmu2
    public final void synpred102_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;


        // Xmu2.g:6063:5: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6063:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred102_Xmu25035);
        a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred102_Xmu2

    // $ANTLR start synpred103_Xmu2
    public final void synpred103_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;


        // Xmu2.g:6082:10: (a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6082:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred103_Xmu25055);
        a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred103_Xmu2

    // $ANTLR start synpred104_Xmu2
    public final void synpred104_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;


        // Xmu2.g:6101:10: (a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6101:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred104_Xmu25075);
        a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred104_Xmu2

    // $ANTLR start synpred106_Xmu2
    public final void synpred106_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;


        // Xmu2.g:6237:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6237:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred106_Xmu25155);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred106_Xmu2

    // $ANTLR start synpred107_Xmu2
    public final void synpred107_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;


        // Xmu2.g:6256:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6256:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred107_Xmu25169);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_Xmu2

    // $ANTLR start synpred108_Xmu2
    public final void synpred108_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;


        // Xmu2.g:6275:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6275:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred108_Xmu25183);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred108_Xmu2

    // $ANTLR start synpred109_Xmu2
    public final void synpred109_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;


        // Xmu2.g:6294:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6294:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred109_Xmu25197);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred109_Xmu2

    // $ANTLR start synpred114_Xmu2
    public final void synpred114_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;


        // Xmu2.g:6421:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6421:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred114_Xmu25323);
        a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred114_Xmu2

    // $ANTLR start synpred115_Xmu2
    public final void synpred115_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;


        // Xmu2.g:6440:6: (a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6440:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred115_Xmu25337);
        a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred115_Xmu2

    // $ANTLR start synpred116_Xmu2
    public final void synpred116_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;


        // Xmu2.g:6459:6: (a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6459:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred116_Xmu25351);
        a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred116_Xmu2

    // $ANTLR start synpred117_Xmu2
    public final void synpred117_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;


        // Xmu2.g:6478:6: (a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6478:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred117_Xmu25365);
        a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred117_Xmu2

    // $ANTLR start synpred118_Xmu2
    public final void synpred118_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;


        // Xmu2.g:6562:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6562:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred118_Xmu25416);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred118_Xmu2

    // $ANTLR start synpred119_Xmu2
    public final void synpred119_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;


        // Xmu2.g:6581:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6581:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred119_Xmu25430);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred119_Xmu2

    // $ANTLR start synpred120_Xmu2
    public final void synpred120_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;


        // Xmu2.g:6600:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6600:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred120_Xmu25444);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred120_Xmu2

    // $ANTLR start synpred121_Xmu2
    public final void synpred121_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;


        // Xmu2.g:6619:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6619:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred121_Xmu25458);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred121_Xmu2

    // $ANTLR start synpred122_Xmu2
    public final void synpred122_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;


        // Xmu2.g:6638:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6638:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred122_Xmu25472);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred122_Xmu2

    // $ANTLR start synpred123_Xmu2
    public final void synpred123_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;


        // Xmu2.g:6707:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6707:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred123_Xmu25539);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred123_Xmu2

    // $ANTLR start synpred124_Xmu2
    public final void synpred124_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;


        // Xmu2.g:6726:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6726:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred124_Xmu25559);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred124_Xmu2

    // $ANTLR start synpred125_Xmu2
    public final void synpred125_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;


        // Xmu2.g:6745:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6745:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred125_Xmu25579);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred125_Xmu2

    // $ANTLR start synpred126_Xmu2
    public final void synpred126_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;


        // Xmu2.g:6764:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6764:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred126_Xmu25599);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred126_Xmu2

    // $ANTLR start synpred127_Xmu2
    public final void synpred127_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;


        // Xmu2.g:6783:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6783:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred127_Xmu25619);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred127_Xmu2

    // $ANTLR start synpred129_Xmu2
    public final void synpred129_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;


        // Xmu2.g:6907:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:6907:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred129_Xmu25699);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred129_Xmu2

    // $ANTLR start synpred130_Xmu2
    public final void synpred130_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;


        // Xmu2.g:6926:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6926:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred130_Xmu25713);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xmu2

    // $ANTLR start synpred131_Xmu2
    public final void synpred131_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;


        // Xmu2.g:6945:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6945:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred131_Xmu25727);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred131_Xmu2

    // $ANTLR start synpred132_Xmu2
    public final void synpred132_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;


        // Xmu2.g:6964:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6964:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred132_Xmu25741);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred132_Xmu2

    // $ANTLR start synpred133_Xmu2
    public final void synpred133_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;


        // Xmu2.g:6983:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6983:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred133_Xmu25755);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred133_Xmu2

    // $ANTLR start synpred134_Xmu2
    public final void synpred134_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;


        // Xmu2.g:7002:6: (a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7002:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred134_Xmu25769);
        a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred134_Xmu2

    // $ANTLR start synpred135_Xmu2
    public final void synpred135_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;


        // Xmu2.g:7071:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:7071:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred135_Xmu25836);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred135_Xmu2

    // $ANTLR start synpred136_Xmu2
    public final void synpred136_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;


        // Xmu2.g:7090:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:7090:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred136_Xmu25856);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred136_Xmu2

    // $ANTLR start synpred137_Xmu2
    public final void synpred137_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;


        // Xmu2.g:7109:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:7109:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred137_Xmu25876);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred137_Xmu2

    // $ANTLR start synpred138_Xmu2
    public final void synpred138_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;


        // Xmu2.g:7128:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:7128:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred138_Xmu25896);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred138_Xmu2

    // $ANTLR start synpred139_Xmu2
    public final void synpred139_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;


        // Xmu2.g:7147:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:7147:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred139_Xmu25916);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred139_Xmu2

    // $ANTLR start synpred140_Xmu2
    public final void synpred140_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;


        // Xmu2.g:7166:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7166:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred140_Xmu25936);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred140_Xmu2

    // $ANTLR start synpred144_Xmu2
    public final void synpred144_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;


        // Xmu2.g:7548:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )
        // Xmu2.g:7548:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        {
        // Xmu2.g:7548:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        // Xmu2.g:7549:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred144_Xmu26314);
        a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred144_Xmu2

    // $ANTLR start synpred149_Xmu2
    public final void synpred149_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:8018:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:8018:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred149_Xmu26728);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred149_Xmu2

    // $ANTLR start synpred150_Xmu2
    public final void synpred150_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:8037:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:8037:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred150_Xmu26742);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred150_Xmu2

    // $ANTLR start synpred151_Xmu2
    public final void synpred151_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:8056:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:8056:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred151_Xmu26756);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred151_Xmu2

    // $ANTLR start synpred152_Xmu2
    public final void synpred152_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;


        // Xmu2.g:8075:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:8075:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred152_Xmu26770);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred152_Xmu2

    // $ANTLR start synpred153_Xmu2
    public final void synpred153_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;


        // Xmu2.g:8094:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8094:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred153_Xmu26784);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred153_Xmu2

    // $ANTLR start synpred155_Xmu2
    public final void synpred155_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:8396:6: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8396:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred155_Xmu27025);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred155_Xmu2

    // $ANTLR start synpred157_Xmu2
    public final void synpred157_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;


        // Xmu2.g:8720:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8720:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred157_Xmu27279);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred157_Xmu2

    // $ANTLR start synpred158_Xmu2
    public final void synpred158_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:8789:7: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8789:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred158_Xmu27374);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred158_Xmu2

    // $ANTLR start synpred162_Xmu2
    public final void synpred162_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;


        // Xmu2.g:9151:3: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:9151:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred162_Xmu27705);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred162_Xmu2

    // $ANTLR start synpred163_Xmu2
    public final void synpred163_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;


        // Xmu2.g:9170:6: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:9170:6: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred163_Xmu27719);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred163_Xmu2

    // $ANTLR start synpred164_Xmu2
    public final void synpred164_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;


        // Xmu2.g:9189:6: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:9189:6: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred164_Xmu27733);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred164_Xmu2

    // $ANTLR start synpred165_Xmu2
    public final void synpred165_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;


        // Xmu2.g:9208:6: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:9208:6: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred165_Xmu27747);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred165_Xmu2

    // $ANTLR start synpred166_Xmu2
    public final void synpred166_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;


        // Xmu2.g:9227:6: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:9227:6: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred166_Xmu27761);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred166_Xmu2

    // $ANTLR start synpred167_Xmu2
    public final void synpred167_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;


        // Xmu2.g:9246:6: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:9246:6: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred167_Xmu27775);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred167_Xmu2

    // $ANTLR start synpred168_Xmu2
    public final void synpred168_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;


        // Xmu2.g:9265:6: (a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:9265:6: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred168_Xmu27789);
        a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred168_Xmu2

    // $ANTLR start synpred169_Xmu2
    public final void synpred169_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_0 =null;


        // Xmu2.g:9440:3: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:9440:3: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred169_Xmu27930);
        a3_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred169_Xmu2

    // $ANTLR start synpred170_Xmu2
    public final void synpred170_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_1 =null;


        // Xmu2.g:9459:6: (a3_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:9459:6: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred170_Xmu27944);
        a3_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred170_Xmu2

    // $ANTLR start synpred171_Xmu2
    public final void synpred171_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_2 =null;


        // Xmu2.g:9478:6: (a3_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:9478:6: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred171_Xmu27958);
        a3_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred171_Xmu2

    // $ANTLR start synpred172_Xmu2
    public final void synpred172_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_3 =null;


        // Xmu2.g:9497:6: (a3_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:9497:6: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred172_Xmu27972);
        a3_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred172_Xmu2

    // $ANTLR start synpred175_Xmu2
    public final void synpred175_Xmu2_fragment() throws RecognitionException {
        Token a4=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a7_0 =null;


        // Xmu2.g:9569:3: ( (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' ) )
        // Xmu2.g:9569:3: (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' )
        {
        // Xmu2.g:9569:3: (a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}' )
        // Xmu2.g:9570:4: a4= '{' ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a8= '}'
        {
        a4=(Token)match(input,72,FOLLOW_72_in_synpred175_Xmu28013); if (state.failed) return ;

        // Xmu2.g:9588:4: ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
        int alt133=2;
        int LA133_0 = input.LA(1);

        if ( (LA133_0==NAME||LA133_0==16) ) {
            alt133=1;
        }
        switch (alt133) {
            case 1 :
                // Xmu2.g:9589:5: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                {
                // Xmu2.g:9589:5: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                // Xmu2.g:9590:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                {
                // Xmu2.g:9590:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                // Xmu2.g:9591:7: a5_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                {
                pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred175_Xmu28054);
                a5_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                // Xmu2.g:9617:6: ( (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                loop132:
                do {
                    int alt132=2;
                    int LA132_0 = input.LA(1);

                    if ( (LA132_0==22) ) {
                        alt132=1;
                    }


                    switch (alt132) {
                	case 1 :
                	    // Xmu2.g:9618:7: (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    {
                	    // Xmu2.g:9618:7: (a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    // Xmu2.g:9619:8: a6= ',' (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    {
                	    a6=(Token)match(input,22,FOLLOW_22_in_synpred175_Xmu28109); if (state.failed) return ;

                	    // Xmu2.g:9636:8: (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    // Xmu2.g:9637:9: a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                	    {
                	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred175_Xmu28151);
                	    a7_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop132;
                    }
                } while (true);


                }


                }
                break;

        }


        a8=(Token)match(input,74,FOLLOW_74_in_synpred175_Xmu28255); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred175_Xmu2

    // $ANTLR start synpred176_Xmu2
    public final void synpred176_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_0 =null;


        // Xmu2.g:9785:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:9785:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred176_Xmu28321);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred176_Xmu2

    // $ANTLR start synpred177_Xmu2
    public final void synpred177_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_1 =null;


        // Xmu2.g:9809:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:9809:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred177_Xmu28335);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred177_Xmu2

    // $ANTLR start synpred178_Xmu2
    public final void synpred178_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_2 =null;


        // Xmu2.g:9833:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:9833:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred178_Xmu28349);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred178_Xmu2

    // $ANTLR start synpred179_Xmu2
    public final void synpred179_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_3 =null;


        // Xmu2.g:9857:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:9857:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred179_Xmu28363);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred179_Xmu2

    // $ANTLR start synpred183_Xmu2
    public final void synpred183_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_0 =null;


        // Xmu2.g:10111:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:10111:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred183_Xmu28606);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred183_Xmu2

    // $ANTLR start synpred184_Xmu2
    public final void synpred184_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_1 =null;


        // Xmu2.g:10135:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:10135:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred184_Xmu28620);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred184_Xmu2

    // $ANTLR start synpred185_Xmu2
    public final void synpred185_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_2 =null;


        // Xmu2.g:10159:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:10159:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred185_Xmu28634);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred185_Xmu2

    // $ANTLR start synpred186_Xmu2
    public final void synpred186_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_3 =null;


        // Xmu2.g:10183:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:10183:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred186_Xmu28648);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred186_Xmu2

    // $ANTLR start synpred190_Xmu2
    public final void synpred190_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a8_0 =null;


        // Xmu2.g:10384:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:10384:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred190_Xmu28840);
        a8_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred190_Xmu2

    // $ANTLR start synpred191_Xmu2
    public final void synpred191_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a8_1 =null;


        // Xmu2.g:10408:6: (a8_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:10408:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred191_Xmu28854);
        a8_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred191_Xmu2

    // $ANTLR start synpred192_Xmu2
    public final void synpred192_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a8_2 =null;


        // Xmu2.g:10432:6: (a8_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:10432:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred192_Xmu28868);
        a8_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred192_Xmu2

    // $ANTLR start synpred193_Xmu2
    public final void synpred193_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_3 =null;


        // Xmu2.g:10456:6: (a8_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:10456:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred193_Xmu28882);
        a8_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred193_Xmu2

    // $ANTLR start synpred194_Xmu2
    public final void synpred194_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_4 =null;


        // Xmu2.g:10480:6: (a8_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:10480:6: a8_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred194_Xmu28896);
        a8_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred194_Xmu2

    // $ANTLR start synpred195_Xmu2
    public final void synpred195_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_5 =null;


        // Xmu2.g:10504:6: (a8_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:10504:6: a8_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred195_Xmu28910);
        a8_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred195_Xmu2

    // $ANTLR start synpred196_Xmu2
    public final void synpred196_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_6 =null;


        // Xmu2.g:10528:6: (a8_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:10528:6: a8_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred196_Xmu28924);
        a8_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred196_Xmu2

    // $ANTLR start synpred197_Xmu2
    public final void synpred197_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a4_0 =null;


        // Xmu2.g:10668:3: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:10668:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred197_Xmu29039);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred197_Xmu2

    // $ANTLR start synpred198_Xmu2
    public final void synpred198_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a4_1 =null;


        // Xmu2.g:10687:6: (a4_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:10687:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred198_Xmu29053);
        a4_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred198_Xmu2

    // $ANTLR start synpred199_Xmu2
    public final void synpred199_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a4_2 =null;


        // Xmu2.g:10706:6: (a4_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:10706:6: a4_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred199_Xmu29067);
        a4_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred199_Xmu2

    // $ANTLR start synpred200_Xmu2
    public final void synpred200_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_3 =null;


        // Xmu2.g:10725:6: (a4_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:10725:6: a4_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred200_Xmu29081);
        a4_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred200_Xmu2

    // $ANTLR start synpred202_Xmu2
    public final void synpred202_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_1 =null;


        // Xmu2.g:10811:6: (a6_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:10811:6: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred202_Xmu29145);
        a6_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred202_Xmu2

    // $ANTLR start synpred207_Xmu2
    public final void synpred207_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement c3 =null;


        // Xmu2.g:10889:4: (c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement )
        // Xmu2.g:10889:4: c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_synpred207_Xmu29249);
        c3=parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred207_Xmu2

    // $ANTLR start synpred208_Xmu2
    public final void synpred208_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement c4 =null;


        // Xmu2.g:10890:4: (c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement )
        // Xmu2.g:10890:4: c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_synpred208_Xmu29259);
        c4=parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred208_Xmu2

    // $ANTLR start synpred211_Xmu2
    public final void synpred211_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement c7 =null;


        // Xmu2.g:10893:4: (c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement )
        // Xmu2.g:10893:4: c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_synpred211_Xmu29289);
        c7=parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred211_Xmu2

    // $ANTLR start synpred214_Xmu2
    public final void synpred214_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.AssignStatement c10 =null;


        // Xmu2.g:10896:4: (c10= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement )
        // Xmu2.g:10896:4: c10= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_synpred214_Xmu29319);
        c10=parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred214_Xmu2

    // $ANTLR start synpred222_Xmu2
    public final void synpred222_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;


        // Xmu2.g:10916:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression )
        // Xmu2.g:10916:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred222_Xmu29441);
        c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred222_Xmu2

    // $ANTLR start synpred223_Xmu2
    public final void synpred223_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression c1 =null;


        // Xmu2.g:10917:4: (c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression )
        // Xmu2.g:10917:4: c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_synpred223_Xmu29451);
        c1=parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred223_Xmu2

    // $ANTLR start synpred224_Xmu2
    public final void synpred224_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ReflectiveObjectPatternExpression c2 =null;


        // Xmu2.g:10918:4: (c2= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression )
        // Xmu2.g:10918:4: c2= parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_in_synpred224_Xmu29461);
        c2=parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred224_Xmu2

    // Delegated rules

    public final boolean synpred163_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred176_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred176_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred197_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred197_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred200_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred200_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133 = new BitSet(new long[]{0x2030400000000002L});
    public static final BitSet FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189 = new BitSet(new long[]{0x2030400000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250 = new BitSet(new long[]{0x2010400000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306 = new BitSet(new long[]{0x2010000000000002L});
    public static final BitSet FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000041L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000041L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_EntryData551 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_EntryData566 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_EntryData587 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605 = new BitSet(new long[]{0x0000004000000200L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_EntryData687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_ModelRule716 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule734 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule755 = new BitSet(new long[]{0x0000000000040080L,0x0000000000000041L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule784 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_ModelRule825 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000041L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule859 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_ModelRule933 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ModelRule947 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000522L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule976 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1004 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000522L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1046 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1101 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1119 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1140 = new BitSet(new long[]{0x0000000000040080L,0x0000000000000041L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1169 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1210 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000041L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1244 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1318 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1332 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000522L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1355 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000522L});
    public static final BitSet FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration1414 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration1435 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration1453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_Parameter1498 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_Parameter1513 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1538 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_Parameter1559 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1617 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1644 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1670 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1690 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1710 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1730 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1750 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1770 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1790 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1810 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1890 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1917 = new BitSet(new long[]{0x0000000000010080L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1958 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2013 = new BitSet(new long[]{0x0000000000010080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2055 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2226 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2262 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2318 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2359 = new BitSet(new long[]{0x0000001000000080L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2382 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2459 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2495 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2551 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2592 = new BitSet(new long[]{0x0600001000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2615 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2786 = new BitSet(new long[]{0x4004800000000000L});
    public static final BitSet FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2809 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2824 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2839 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2860 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ConcreteVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2878 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2896 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2914 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2928 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2942 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2956 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2970 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2984 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2998 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath3012 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath3030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3059 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3113 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3131 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3152 = new BitSet(new long[]{0x0600000000864790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3181 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3201 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3221 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3241 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3261 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3281 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3301 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3321 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3362 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3396 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3422 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3448 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3474 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3500 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3526 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3552 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3578 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3681 = new BitSet(new long[]{0x0042010000000000L});
    public static final BitSet FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3704 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3719 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3734 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3755 = new BitSet(new long[]{0x0600000000864790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3778 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3795 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3812 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3829 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3846 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3863 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3880 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3897 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3996 = new BitSet(new long[]{0x0000000003000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4010 = new BitSet(new long[]{0x0000000003000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4024 = new BitSet(new long[]{0x0000000003000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4051 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression4156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression4196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression4236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4276 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4297 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression4355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4391 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4409 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4423 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4437 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4451 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4465 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4479 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4493 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4507 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4563 = new BitSet(new long[]{0x0400000000024790L,0x0000000000000004L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4578 = new BitSet(new long[]{0x0400000000024790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4654 = new BitSet(new long[]{0x0000000004080000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4668 = new BitSet(new long[]{0x0000000004080000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4682 = new BitSet(new long[]{0x0000000004080000L});
    public static final BitSet FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4722 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4741 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4778 = new BitSet(new long[]{0x0000000004080002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4798 = new BitSet(new long[]{0x0000000004080002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4818 = new BitSet(new long[]{0x0000000004080002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4878 = new BitSet(new long[]{0x0000000000B00000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4892 = new BitSet(new long[]{0x0000000000B00000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4906 = new BitSet(new long[]{0x0000000000B00000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4920 = new BitSet(new long[]{0x0000000000B00000L});
    public static final BitSet FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4960 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4979 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4998 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5035 = new BitSet(new long[]{0x0000000000B00002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5055 = new BitSet(new long[]{0x0000000000B00002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5075 = new BitSet(new long[]{0x0000000000B00002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5095 = new BitSet(new long[]{0x0000000000B00002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5155 = new BitSet(new long[]{0x0000000F80000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5169 = new BitSet(new long[]{0x0000000F80000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5183 = new BitSet(new long[]{0x0000000F80000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5197 = new BitSet(new long[]{0x0000000F80000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5211 = new BitSet(new long[]{0x0000000F80000000L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5238 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5253 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5268 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5283 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5298 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5416 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5430 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5444 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5458 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5472 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5486 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5513 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5539 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5559 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5579 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5599 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5619 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5639 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5699 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5713 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5727 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5741 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5755 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5769 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5783 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5810 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5836 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5856 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5876 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5896 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5916 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5936 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5956 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6012 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000522L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6041 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6082 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000122L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6116 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6219 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6237 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6255 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6273 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6291 = new BitSet(new long[]{0x0080080000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6314 = new BitSet(new long[]{0x0080080000000002L,0x0000000000000018L});
    public static final BitSet FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6355 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6369 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6387 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6419 = new BitSet(new long[]{0x1000040000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6442 = new BitSet(new long[]{0x1000040000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6506 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6521 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6536 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6551 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6572 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000122L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6623 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6641 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6659 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000122L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6710 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6728 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6742 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6756 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6770 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6784 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6798 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6816 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000122L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6867 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6918 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6936 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6954 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6972 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6993 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement7062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7087 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7138 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7156 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7174 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000122L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7229 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7250 = new BitSet(new long[]{0x0400000000064790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7279 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7299 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7340 = new BitSet(new long[]{0x0400000000024790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7374 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7400 = new BitSet(new long[]{0x0000000000440000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_statement_Fail7532 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_statement_Fail7555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7600 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7614 = new BitSet(new long[]{0x8009300000000080L,0x0000000000000122L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7669 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7687 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration7840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ReflectiveVariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7880 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7898 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7912 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7930 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7944 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7958 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7972 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode7986 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8013 = new BitSet(new long[]{0x0000000000010080L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8054 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8109 = new BitSet(new long[]{0x0000000000010080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8151 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePatternNode8255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8303 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8321 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8335 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8349 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8363 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8377 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8410 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8466 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8507 = new BitSet(new long[]{0x0000001000000080L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8530 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression8555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8588 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8606 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8620 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8634 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8648 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8662 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8695 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8751 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8792 = new BitSet(new long[]{0x0600001000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8815 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression8938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement8971 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement8989 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9007 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9021 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9039 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9053 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9067 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9081 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9095 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9113 = new BitSet(new long[]{0x0600000000824790L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement9159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule9188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule9198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Fail_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ReflectiveDeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement9329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression9420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectivePropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression9471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression9542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path9593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause9614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause9624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause9634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred16_Xmu21670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred17_Xmu21690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred18_Xmu21710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred19_Xmu21730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred20_Xmu21750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred21_Xmu21770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred22_Xmu21790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_synpred26_Xmu21917 = new BitSet(new long[]{0x0000000000010080L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu21958 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_22_in_synpred26_Xmu22013 = new BitSet(new long[]{0x0000000000010080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu22055 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_synpred26_Xmu22159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred35_Xmu22640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred36_Xmu22654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred37_Xmu22668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred38_Xmu22682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred39_Xmu22696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred40_Xmu22710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred41_Xmu22724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred45_Xmu22914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred46_Xmu22928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred47_Xmu22942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred48_Xmu22956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred49_Xmu22970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred50_Xmu22984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred51_Xmu22998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred52_Xmu23181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred53_Xmu23201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred54_Xmu23221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred55_Xmu23241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred56_Xmu23261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred57_Xmu23281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred58_Xmu23301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred59_Xmu23396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred60_Xmu23422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred61_Xmu23448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred62_Xmu23474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred63_Xmu23500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred64_Xmu23526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred65_Xmu23552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred70_Xmu23778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred71_Xmu23795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred72_Xmu23812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred73_Xmu23829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred74_Xmu23846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred75_Xmu23863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred76_Xmu23880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_synpred80_Xmu24051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred82_Xmu24409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred83_Xmu24423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred84_Xmu24437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred85_Xmu24451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred86_Xmu24465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred87_Xmu24479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred88_Xmu24493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred90_Xmu24603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred92_Xmu24668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred95_Xmu24798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred97_Xmu24878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred98_Xmu24892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred99_Xmu24906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred102_Xmu25035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred103_Xmu25055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred104_Xmu25075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred106_Xmu25155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred107_Xmu25169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred108_Xmu25183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred109_Xmu25197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred114_Xmu25323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred115_Xmu25337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred116_Xmu25351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred117_Xmu25365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred118_Xmu25416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred119_Xmu25430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred120_Xmu25444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred121_Xmu25458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred122_Xmu25472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred123_Xmu25539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred124_Xmu25559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred125_Xmu25579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred126_Xmu25599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred127_Xmu25619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred129_Xmu25699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred130_Xmu25713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred131_Xmu25727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred132_Xmu25741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred133_Xmu25755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred134_Xmu25769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred135_Xmu25836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred136_Xmu25856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred137_Xmu25876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred138_Xmu25896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred139_Xmu25916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred140_Xmu25936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred144_Xmu26314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred149_Xmu26728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred150_Xmu26742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred151_Xmu26756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred152_Xmu26770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred153_Xmu26784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred155_Xmu27025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred157_Xmu27279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred158_Xmu27374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred162_Xmu27705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred163_Xmu27719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred164_Xmu27733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred165_Xmu27747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred166_Xmu27761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred167_Xmu27775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred168_Xmu27789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred169_Xmu27930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred170_Xmu27944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred171_Xmu27958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred172_Xmu27972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_synpred175_Xmu28013 = new BitSet(new long[]{0x0000000000010080L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred175_Xmu28054 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_22_in_synpred175_Xmu28109 = new BitSet(new long[]{0x0000000000010080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred175_Xmu28151 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_synpred175_Xmu28255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred176_Xmu28321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred177_Xmu28335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred178_Xmu28349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred179_Xmu28363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred183_Xmu28606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred184_Xmu28620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred185_Xmu28634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred186_Xmu28648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred190_Xmu28840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred191_Xmu28854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred192_Xmu28868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred193_Xmu28882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred194_Xmu28896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred195_Xmu28910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred196_Xmu28924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred197_Xmu29039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred198_Xmu29053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred199_Xmu29067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred200_Xmu29081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred202_Xmu29145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_synpred207_Xmu29249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_synpred208_Xmu29259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_synpred211_Xmu29289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_synpred214_Xmu29319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred222_Xmu29441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_synpred223_Xmu29451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ReflectiveObjectPatternExpression_in_synpred224_Xmu29461 = new BitSet(new long[]{0x0000000000000002L});

}