// $ANTLR 3.4

	package edu.ustb.sei.mde.xmu2.resource.xmu2.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xmu2Parser extends Xmu2ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "BOOLEAN", "LINEBREAK", "ML_COMMENT", "NAME", "NUMBER", "OBJ_URI", "QUOTED_39_39_92", "QUOTED_60_62_92", "SL_COMMENT", "TEXT", "TYPE", "WHITESPACE", "'('", "')'", "'*'", "'+'", "'++'", "','", "'-'", "'->'", "'.'", "'/'", "':'", "'::'", "'::='", "';'", "'<'", "'<='", "'='", "'>'", "'>='", "'?'", "'['", "']'", "'and'", "'at'", "'by'", "'case'", "'default'", "'delete'", "'enforce'", "'entry'", "'exists'", "'first'", "'forAll'", "'foreach'", "'function'", "'import'", "'last'", "'match'", "'module'", "'not'", "'null'", "'or'", "'otherwise'", "'rule'", "'select'", "'skip'", "'source'", "'switch'", "'undefined'", "'unmatchs'", "'unmatchv'", "'update'", "'view'", "'with'", "'{'", "'|'", "'}'"
    };

    public static final int EOF=-1;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int BOOLEAN=4;
    public static final int LINEBREAK=5;
    public static final int ML_COMMENT=6;
    public static final int NAME=7;
    public static final int NUMBER=8;
    public static final int OBJ_URI=9;
    public static final int QUOTED_39_39_92=10;
    public static final int QUOTED_60_62_92=11;
    public static final int SL_COMMENT=12;
    public static final int TEXT=13;
    public static final int TYPE=14;
    public static final int WHITESPACE=15;

    // delegates
    public Xmu2ANTLRParserBase[] getDelegates() {
        return new Xmu2ANTLRParserBase[] {};
    }

    // delegators


    public Xmu2Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xmu2Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(243 + 1);
         

    }

    public String[] getTokenNames() { return Xmu2Parser.tokenNames; }
    public String getGrammarFileName() { return "Xmu2.g"; }


    	private edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolverFactory tokenResolverFactory = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> expectedElements = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Problem() {
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity getSeverity() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity.ERROR;
    					}
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType getType() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement terminal = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.TERMINALS[terminalID];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[] containmentFeatures = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.LINKS[ids[i]];
    		}
    		edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xmu2Parser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.TransformationModel.class) {
    				return parse_edu_ustb_sei_mde_xmu2_TransformationModel();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryPoint.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryPoint();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryData.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryData();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ModelRule.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ModelRule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ArithmeticRule.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ArithmeticRule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.VariableDeclaration.class) {
    				return parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.Parameter.class) {
    				return parse_edu_ustb_sei_mde_xmu2_Parameter();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.Pattern.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PatternNode.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.LoopPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.FeaturePath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.OperationPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PositionPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.VariableExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PathExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EmptyExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ParenExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.UnaryExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.AdditiveExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.RelationalExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.BlockStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.SwitchStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.PatternCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ForEachStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.RuleCallStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.Skip.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_Skip();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.AssignStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement();
    			}
    		}
    		throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>>();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult parseResult = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> newFollowSet = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 206;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]> newFollowerPair : newFollowers) {
    							edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(null, newFollowerPair.getRight());
    							edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal newFollowTerminal = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xmu2.g:628:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.TransformationModel c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xmu2.g:629:2: ( (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF )
            // Xmu2.g:630:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[0]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xmu2.g:635:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel )
            // Xmu2.g:636:3: c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82);
            c0=parse_edu_ustb_sei_mde_xmu2_TransformationModel();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_TransformationModel"
    // Xmu2.g:644:1: parse_edu_ustb_sei_mde_xmu2_TransformationModel returns [edu.ustb.sei.mde.xmu2.TransformationModel element = null] : a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* ;
    public final edu.ustb.sei.mde.xmu2.TransformationModel parse_edu_ustb_sei_mde_xmu2_TransformationModel() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.TransformationModel element =  null;

        int parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.EntryPoint a4_0 =null;

        edu.ustb.sei.mde.xmu2.AbstractRule a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xmu2.g:647:2: (a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* )
            // Xmu2.g:648:2: a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1]);
            	}

            // Xmu2.g:662:2: (a1= NAME )
            // Xmu2.g:663:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[3]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[5]);
            	}

            // Xmu2.g:701:2: ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==51) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // Xmu2.g:702:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    {
            	    // Xmu2.g:702:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    // Xmu2.g:703:4: a2= 'import' (a3= QUOTED_60_62_92 )
            	    {
            	    a2=(Token)match(input,51,FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[6]);
            	    			}

            	    // Xmu2.g:717:4: (a3= QUOTED_60_62_92 )
            	    // Xmu2.g:718:5: a3= QUOTED_60_62_92
            	    {
            	    a3=(Token)match(input,QUOTED_60_62_92,FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3 != null) {
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_60_62_92");
            	    						tokenResolver.setOptions(getOptions());
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            	    						tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), result);
            	    						Object resolvedObject = result.getResolvedToken();
            	    						if (resolvedObject == null) {
            	    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            	    						}
            	    						String resolved = (String) resolvedObject;
            	    						org.eclipse.emf.ecore.EPackage proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEPackage();
            	    						collectHiddenTokens(element);
            	    						registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TransformationModel, org.eclipse.emf.ecore.EPackage>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTransformationModelPackagesReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), resolved, proxy);
            	    						if (proxy != null) {
            	    							Object value = proxy;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES, value);
            	    							completedElement(value, false);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_1, proxy, true);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[7]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[8]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[9]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[10]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[12]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[14]);
            	}

            // Xmu2.g:770:2: ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==45) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // Xmu2.g:771:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    {
            	    // Xmu2.g:771:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    // Xmu2.g:772:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    {
            	    // Xmu2.g:772:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    // Xmu2.g:773:5: a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250);
            	    a4_0=parse_edu_ustb_sei_mde_xmu2_EntryPoint();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a4_0 != null) {
            	    						if (a4_0 != null) {
            	    							Object value = a4_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__ENTRY_POINTS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_3_0_0_0, a4_0, true);
            	    						copyLocalizationInfos(a4_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[15]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[16]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[17]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[18]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[19]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[20]);
            	}

            // Xmu2.g:809:2: ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==50||LA3_0==59) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // Xmu2.g:810:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    {
            	    // Xmu2.g:810:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    // Xmu2.g:811:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    {
            	    // Xmu2.g:811:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    // Xmu2.g:812:5: a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_AbstractRule();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__RULES, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_4_0_0_0, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[21]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[22]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[23]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[24]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_TransformationModel"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryPoint"
    // Xmu2.g:848:1: parse_edu_ustb_sei_mde_xmu2_EntryPoint returns [edu.ustb.sei.mde.xmu2.EntryPoint element = null] : a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.EntryPoint parse_edu_ustb_sei_mde_xmu2_EntryPoint() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryPoint element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.EntryData a3_0 =null;

        edu.ustb.sei.mde.xmu2.EntryData a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xmu2.g:851:2: (a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' )
            // Xmu2.g:852:2: a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')'
            {
            a0=(Token)match(input,45,FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[25]);
            	}

            // Xmu2.g:866:2: (a1= NAME )
            // Xmu2.g:867:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.ModelRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.EntryPoint, edu.ustb.sei.mde.xmu2.ModelRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEntryPointRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[26]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[27]);
            	}

            // Xmu2.g:920:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            // Xmu2.g:921:3: a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419);
            a3_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[28]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[29]);
            	}

            // Xmu2.g:947:2: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==21) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xmu2.g:948:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    {
            	    // Xmu2.g:948:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    // Xmu2.g:949:4: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    {
            	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[30]);
            	    			}

            	    // Xmu2.g:963:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    // Xmu2.g:964:5: a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[31]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[32]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[33]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[34]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[35]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[36]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[37]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryPoint"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryData"
    // Xmu2.g:1016:1: parse_edu_ustb_sei_mde_xmu2_EntryData returns [edu.ustb.sei.mde.xmu2.EntryData element = null] : ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' ;
    public final edu.ustb.sei.mde.xmu2.EntryData parse_edu_ustb_sei_mde_xmu2_EntryData() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryData element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xmu2.g:1019:2: ( ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' )
            // Xmu2.g:1020:2: ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']'
            {
            // Xmu2.g:1020:2: ( (a0= 'source' |a1= 'view' ) )
            // Xmu2.g:1021:3: (a0= 'source' |a1= 'view' )
            {
            // Xmu2.g:1021:3: (a0= 'source' |a1= 'view' )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==62) ) {
                alt5=1;
            }
            else if ( (LA5_0==68) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }
            switch (alt5) {
                case 1 :
                    // Xmu2.g:1022:4: a0= 'source'
                    {
                    a0=(Token)match(input,62,FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_EntryData551); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1035:8: a1= 'view'
                    {
                    a1=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_EntryData566); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[38]);
            	}

            a4=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_EntryData587); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[39]);
            	}

            // Xmu2.g:1069:2: (a5= NUMBER )
            // Xmu2.g:1070:3: a5= NUMBER
            {
            a5=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            				startIncompleteElement(element);
            			}
            			if (a5 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[40]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[41]);
            	}

            // Xmu2.g:1106:2: ( ( (a6= OBJ_URI ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==OBJ_URI) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // Xmu2.g:1107:3: ( (a6= OBJ_URI ) )
                    {
                    // Xmu2.g:1107:3: ( (a6= OBJ_URI ) )
                    // Xmu2.g:1108:4: (a6= OBJ_URI )
                    {
                    // Xmu2.g:1108:4: (a6= OBJ_URI )
                    // Xmu2.g:1109:5: a6= OBJ_URI
                    {
                    a6=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    						startIncompleteElement(element);
                    					}
                    					if (a6 != null) {
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
                    						tokenResolver.setOptions(getOptions());
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
                    						}
                    						java.lang.String resolved = (java.lang.String) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_3_0_0_0, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[42]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[43]);
            	}

            a7=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_EntryData687); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[44]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[45]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryData"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ModelRule"
    // Xmu2.g:1168:1: parse_edu_ustb_sei_mde_xmu2_ModelRule returns [edu.ustb.sei.mde.xmu2.ModelRule element = null] : a0= 'rule' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a9= ';' ) )* ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a11= '}' ;
    public final edu.ustb.sei.mde.xmu2.ModelRule parse_edu_ustb_sei_mde_xmu2_ModelRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ModelRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a11=null;
        edu.ustb.sei.mde.xmu2.Parameter a3_0 =null;

        edu.ustb.sei.mde.xmu2.Parameter a5_0 =null;

        edu.ustb.sei.mde.xmu2.VariableDeclaration a8_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a10_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xmu2.g:1171:2: (a0= 'rule' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a9= ';' ) )* ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a11= '}' )
            // Xmu2.g:1172:2: a0= 'rule' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a9= ';' ) )* ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a11= '}'
            {
            a0=(Token)match(input,59,FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_ModelRule716); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[46]);
            	}

            // Xmu2.g:1186:2: (a1= NAME )
            // Xmu2.g:1187:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule734); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[47]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ModelRule755); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[48]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[49]);
            	}

            // Xmu2.g:1237:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==NAME||LA8_0==62||LA8_0==68) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // Xmu2.g:1238:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    {
                    // Xmu2.g:1238:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    // Xmu2.g:1239:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    {
                    // Xmu2.g:1239:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    // Xmu2.g:1240:5: a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule784);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[50]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[51]);
                    			}

                    // Xmu2.g:1266:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==21) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // Xmu2.g:1267:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    {
                    	    // Xmu2.g:1267:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    // Xmu2.g:1268:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    {
                    	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ModelRule825); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[52]);
                    	    					}

                    	    // Xmu2.g:1282:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    // Xmu2.g:1283:7: a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule859);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[53]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[54]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[55]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[56]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[57]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule933); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[58]);
            	}

            a7=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_ModelRule947); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[59]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[60]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[61]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[62]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[63]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[64]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[65]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[66]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[67]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[68]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[69]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[70]);
            	}

            // Xmu2.g:1363:2: ( ( (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a9= ';' ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==NAME) ) {
                    int LA9_2 = input.LA(2);

                    if ( (LA9_2==26) ) {
                        alt9=1;
                    }


                }


                switch (alt9) {
            	case 1 :
            	    // Xmu2.g:1364:3: ( (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a9= ';' )
            	    {
            	    // Xmu2.g:1364:3: ( (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a9= ';' )
            	    // Xmu2.g:1365:4: (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a9= ';'
            	    {
            	    // Xmu2.g:1365:4: (a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            	    // Xmu2.g:1366:5: a8_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule976);
            	    a8_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a8_0 != null) {
            	    						if (a8_0 != null) {
            	    							Object value = a8_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__VARIABLE_DECLARATIONS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_6_0_0_0, a8_0, true);
            	    						copyLocalizationInfos(a8_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[71]);
            	    			}

            	    a9=(Token)match(input,29,FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1004); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_6_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[72]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[73]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[74]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[75]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[76]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[77]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[78]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[79]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[80]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[81]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[82]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[83]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[84]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[85]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[86]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[87]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[88]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[89]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[90]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[91]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[92]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[93]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[94]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[95]);
            	}

            // Xmu2.g:1434:2: ( (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==NAME||(LA10_0 >= 43 && LA10_0 <= 44)||LA10_0==49||LA10_0==61||LA10_0==63||LA10_0==67||LA10_0==70) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // Xmu2.g:1435:3: (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    {
                    // Xmu2.g:1435:3: (a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:1436:4: a10_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1046);
                    a10_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    					startIncompleteElement(element);
                    				}
                    				if (a10_0 != null) {
                    					if (a10_0 != null) {
                    						Object value = a10_0;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__STATEMENT), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_7, a10_0, true);
                    					copyLocalizationInfos(a10_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[96]);
            	}

            a11=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1072); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_8, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a11, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[97]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[98]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ModelRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ArithmeticRule"
    // Xmu2.g:1479:1: parse_edu_ustb_sei_mde_xmu2_ArithmeticRule returns [edu.ustb.sei.mde.xmu2.ArithmeticRule element = null] : a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}' ;
    public final edu.ustb.sei.mde.xmu2.ArithmeticRule parse_edu_ustb_sei_mde_xmu2_ArithmeticRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ArithmeticRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        edu.ustb.sei.mde.xmu2.Parameter a3_0 =null;

        edu.ustb.sei.mde.xmu2.Parameter a5_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a8_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xmu2.g:1482:2: (a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}' )
            // Xmu2.g:1483:2: a0= 'function' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a6= ')' a7= '{' ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )* a9= '}'
            {
            a0=(Token)match(input,50,FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1101); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[99]);
            	}

            // Xmu2.g:1497:2: (a1= NAME )
            // Xmu2.g:1498:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1119); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[100]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1140); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[101]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[102]);
            	}

            // Xmu2.g:1548:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==NAME||LA12_0==62||LA12_0==68) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // Xmu2.g:1549:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    {
                    // Xmu2.g:1549:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    // Xmu2.g:1550:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    {
                    // Xmu2.g:1550:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    // Xmu2.g:1551:5: a3_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1169);
                    a3_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_0, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[103]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[104]);
                    			}

                    // Xmu2.g:1577:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==21) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // Xmu2.g:1578:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    {
                    	    // Xmu2.g:1578:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    // Xmu2.g:1579:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    {
                    	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1210); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[105]);
                    	    					}

                    	    // Xmu2.g:1593:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    // Xmu2.g:1594:7: a5_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1244);
                    	    a5_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a5_0 != null) {
                    	    								if (a5_0 != null) {
                    	    									Object value = a5_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	    								copyLocalizationInfos(a5_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[106]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[107]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[108]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[109]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[110]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1318); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[111]);
            	}

            a7=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1332); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[112]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[113]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[114]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[115]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[116]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[117]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[118]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[119]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[120]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[121]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[122]);
            	}

            // Xmu2.g:1673:2: ( (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==NAME||(LA13_0 >= 43 && LA13_0 <= 44)||LA13_0==49||LA13_0==61||LA13_0==63||LA13_0==67||LA13_0==70) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // Xmu2.g:1674:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            	    {
            	    // Xmu2.g:1674:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            	    // Xmu2.g:1675:4: a8_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1355);
            	    a8_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a8_0 != null) {
            	    					if (a8_0 != null) {
            	    						Object value = a8_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ARITHMETIC_RULE__STATEMENTS, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_6, a8_0, true);
            	    					copyLocalizationInfos(a8_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[124]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[127]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[129]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[130]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[131]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[132]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[133]);
            	}

            a9=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1381); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createArithmeticRule();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_7, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[134]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[135]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ArithmeticRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_VariableDeclaration"
    // Xmu2.g:1728:1: parse_edu_ustb_sei_mde_xmu2_VariableDeclaration returns [edu.ustb.sei.mde.xmu2.VariableDeclaration element = null] : (a0= NAME ) a1= ':' (a2= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.VariableDeclaration parse_edu_ustb_sei_mde_xmu2_VariableDeclaration() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.VariableDeclaration element =  null;

        int parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xmu2.g:1731:2: ( (a0= NAME ) a1= ':' (a2= TYPE ) )
            // Xmu2.g:1732:2: (a0= NAME ) a1= ':' (a2= TYPE )
            {
            // Xmu2.g:1732:2: (a0= NAME )
            // Xmu2.g:1733:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1414); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[136]);
            	}

            a1=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1435); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[137]);
            	}

            // Xmu2.g:1782:2: (a2= TYPE )
            // Xmu2.g:1783:3: a2= TYPE
            {
            a2=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1453); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[138]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[139]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[140]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[141]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[142]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[143]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[144]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[145]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[146]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[147]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[148]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[149]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[152]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[153]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[156]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[157]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[159]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[160]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_VariableDeclaration"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_Parameter"
    // Xmu2.g:1846:1: parse_edu_ustb_sei_mde_xmu2_Parameter returns [edu.ustb.sei.mde.xmu2.Parameter element = null] : ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.Parameter parse_edu_ustb_sei_mde_xmu2_Parameter() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.Parameter element =  null;

        int parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xmu2.g:1849:2: ( ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) )
            // Xmu2.g:1850:2: ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE )
            {
            // Xmu2.g:1850:2: ( (a0= 'source' |a1= 'view' )? )
            // Xmu2.g:1851:3: (a0= 'source' |a1= 'view' )?
            {
            // Xmu2.g:1851:3: (a0= 'source' |a1= 'view' )?
            int alt14=3;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==62) ) {
                alt14=1;
            }
            else if ( (LA14_0==68) ) {
                alt14=2;
            }
            switch (alt14) {
                case 1 :
                    // Xmu2.g:1852:4: a0= 'source'
                    {
                    a0=(Token)match(input,62,FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_Parameter1498); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1868:8: a1= 'view'
                    {
                    a1=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_Parameter1513); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[161]);
            	}

            // Xmu2.g:1890:2: (a4= NAME )
            // Xmu2.g:1891:3: a4= NAME
            {
            a4=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1538); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a4 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[162]);
            	}

            a5=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_Parameter1559); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            			startIncompleteElement(element);
            			// initialize enumeration attribute
            			Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            			element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[163]);
            	}

            // Xmu2.g:1946:2: (a6= TYPE )
            // Xmu2.g:1947:3: a6= TYPE
            {
            a6=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1577); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a6 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_3, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[165]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[166]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[167]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_Parameter"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"
    // Xmu2.g:1994:1: parse_edu_ustb_sei_mde_xmu2_pattern_Pattern returns [edu.ustb.sei.mde.xmu2.pattern.Pattern element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.Pattern parse_edu_ustb_sei_mde_xmu2_pattern_Pattern() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.Pattern element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternNode a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xmu2.g:1997:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? )
            // Xmu2.g:1998:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            {
            // Xmu2.g:1998:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:1999:3: a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1617);
            a0_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[168]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[169]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[170]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[171]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[172]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[173]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[174]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[175]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[176]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[177]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[178]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[179]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[180]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[181]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[182]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[183]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[184]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[185]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[187]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[188]);
            	}

            // Xmu2.g:2044:2: ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==36) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // Xmu2.g:2045:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    {
                    // Xmu2.g:2045:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    // Xmu2.g:2046:4: a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']'
                    {
                    a1=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1644); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[189]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[190]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[191]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[192]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[193]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[194]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[195]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[196]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[197]);
                    			}

                    // Xmu2.g:2068:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt15=8;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        int LA15_1 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt15=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA15_2 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred21_Xmu2()) ) {
                            alt15=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA15_3 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA15_4 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 64:
                        {
                        int LA15_5 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA15_6 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA15_7 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA15_8 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA15_9 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA15_10 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA15_11 = input.LA(2);

                        if ( (synpred16_Xmu2()) ) {
                            alt15=1;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt15=2;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt15=3;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt15=4;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt15=5;
                        }
                        else if ( (synpred22_Xmu2()) ) {
                            alt15=7;
                        }
                        else if ( (true) ) {
                            alt15=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 15, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 0, input);

                        throw nvae;

                    }

                    switch (alt15) {
                        case 1 :
                            // Xmu2.g:2069:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1670);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:2088:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1690);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:2107:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1710);
                            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_2 != null) {
                            						if (a2_2 != null) {
                            							Object value = a2_2;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_2, true);
                            						copyLocalizationInfos(a2_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:2126:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1730);
                            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_3 != null) {
                            						if (a2_3 != null) {
                            							Object value = a2_3;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_3, true);
                            						copyLocalizationInfos(a2_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:2145:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1750);
                            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_4 != null) {
                            						if (a2_4 != null) {
                            							Object value = a2_4;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_4, true);
                            						copyLocalizationInfos(a2_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:2164:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1770);
                            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_5 != null) {
                            						if (a2_5 != null) {
                            							Object value = a2_5;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_5, true);
                            						copyLocalizationInfos(a2_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:2183:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1790);
                            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_6 != null) {
                            						if (a2_6 != null) {
                            							Object value = a2_6;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_6, true);
                            						copyLocalizationInfos(a2_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:2202:10: a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1810);
                            a2_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_7 != null) {
                            						if (a2_7 != null) {
                            							Object value = a2_7;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1, a2_7, true);
                            						copyLocalizationInfos(a2_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[198]);
                    			}

                    a3=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1838); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[199]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[200]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[201]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[202]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[203]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[204]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[205]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[206]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[207]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[208]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[209]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[210]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[211]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[212]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[213]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[214]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[215]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[216]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[217]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[218]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[219]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[220]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[221]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[222]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[223]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[224]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[225]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[226]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[227]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[228]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[229]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[230]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[231]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[232]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[233]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[234]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[235]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[236]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[237]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[238]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"
    // Xmu2.g:2288:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode returns [edu.ustb.sei.mde.xmu2.pattern.PatternNode element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.PatternNode parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternNode element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.VariableDeclaration a0_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xmu2.g:2291:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? )
            // Xmu2.g:2292:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
            {
            // Xmu2.g:2292:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            // Xmu2.g:2293:3: a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1890);
            a0_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[239]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[240]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[241]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[242]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[243]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[244]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[245]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[246]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[247]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[248]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[249]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[250]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[251]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[252]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[253]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[254]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[255]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[256]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[258]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[259]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[260]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[261]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[262]);
            	}

            // Xmu2.g:2341:2: ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==70) ) {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==NAME) ) {
                    int LA19_3 = input.LA(3);

                    if ( (LA19_3==23||LA19_3==32) ) {
                        alt19=1;
                    }
                }
                else if ( (LA19_1==72) ) {
                    int LA19_4 = input.LA(3);

                    if ( (synpred26_Xmu2()) ) {
                        alt19=1;
                    }
                }
            }
            switch (alt19) {
                case 1 :
                    // Xmu2.g:2342:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                    {
                    // Xmu2.g:2342:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                    // Xmu2.g:2343:4: a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}'
                    {
                    a1=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1917); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[263]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[264]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[265]);
                    			}

                    // Xmu2.g:2359:4: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==NAME) ) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            // Xmu2.g:2360:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            {
                            // Xmu2.g:2360:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            // Xmu2.g:2361:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            {
                            // Xmu2.g:2361:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            // Xmu2.g:2362:7: a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1958);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            							if (terminateParsing) {
                            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            							}
                            							if (element == null) {
                            								element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            								startIncompleteElement(element);
                            							}
                            							if (a2_0 != null) {
                            								if (a2_0 != null) {
                            									Object value = a2_0;
                            									addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                            									completedElement(value, true);
                            								}
                            								collectHiddenTokens(element);
                            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_0, a2_0, true);
                            								copyLocalizationInfos(a2_0, element);
                            							}
                            						}

                            }


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[266]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[267]);
                            					}

                            // Xmu2.g:2388:6: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==21) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // Xmu2.g:2389:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    {
                            	    // Xmu2.g:2389:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    // Xmu2.g:2390:8: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    {
                            	    a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2013); if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    								if (element == null) {
                            	    									element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            	    									startIncompleteElement(element);
                            	    								}
                            	    								collectHiddenTokens(element);
                            	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_1_0_0_0, null, true);
                            	    								copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                            	    							}

                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[268]);
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[269]);
                            	    							}

                            	    // Xmu2.g:2405:8: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    // Xmu2.g:2406:9: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            	    {
                            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2055);
                            	    a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            	    state._fsp--;
                            	    if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    									if (terminateParsing) {
                            	    										throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            	    									}
                            	    									if (element == null) {
                            	    										element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            	    										startIncompleteElement(element);
                            	    									}
                            	    									if (a4_0 != null) {
                            	    										if (a4_0 != null) {
                            	    											Object value = a4_0;
                            	    											addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                            	    											completedElement(value, true);
                            	    										}
                            	    										collectHiddenTokens(element);
                            	    										retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_1_0_0_1_0_0_1, a4_0, true);
                            	    										copyLocalizationInfos(a4_0, element);
                            	    									}
                            	    								}

                            	    }


                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[270]);
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[271]);
                            	    							}

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop17;
                                }
                            } while (true);


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[272]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[273]);
                            					}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[274]);
                    			}

                    a5=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2159); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[275]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[276]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[277]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[278]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[279]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[280]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[281]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[282]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[283]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[284]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[285]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[286]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[287]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[288]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[289]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[290]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[291]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[292]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[293]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[294]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[295]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[296]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[297]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[298]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[299]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[300]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[301]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[302]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[303]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[304]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[305]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[306]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[307]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[308]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[309]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[310]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[311]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[312]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[313]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[314]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[315]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[316]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[317]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[318]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[319]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[320]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"
    // Xmu2.g:2514:1: parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element = null] : (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternNode a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xmu2.g:2517:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) )
            // Xmu2.g:2518:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            {
            // Xmu2.g:2518:2: (a0= NAME )
            // Xmu2.g:2519:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2211); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            				}
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[321]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[322]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[323]);
            	}

            // Xmu2.g:2565:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==23) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==46||LA20_1==48||LA20_1==60) ) {
                    alt20=1;
                }
            }
            switch (alt20) {
                case 1 :
                    // Xmu2.g:2566:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:2566:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:2567:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:2567:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:2568:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2247);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[324]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[325]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[326]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[327]);
            	}

            // Xmu2.g:2607:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==23) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // Xmu2.g:2608:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:2608:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:2609:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:2609:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:2610:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2303);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[328]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[329]);
            	}

            a3=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2344); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[330]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[331]);
            	}

            // Xmu2.g:2667:2: ( (a4= '?' )? )
            // Xmu2.g:2668:3: (a4= '?' )?
            {
            // Xmu2.g:2668:3: (a4= '?' )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==35) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // Xmu2.g:2669:4: a4= '?'
                    {
                    a4=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2367); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[332]);
            	}

            // Xmu2.g:2693:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:2694:3: a7_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2392);
            a7_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__NULLABLE), value);
            				}
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__TARGET_NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_5, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[333]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[334]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"
    // Xmu2.g:2727:1: parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element = null] : (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a7_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xmu2.g:2730:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:2731:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' ( (a4= '?' )? ) (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:2731:2: (a0= NAME )
            // Xmu2.g:2732:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2429); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
            				}
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[335]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[336]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[337]);
            	}

            // Xmu2.g:2778:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==23) ) {
                int LA23_1 = input.LA(2);

                if ( (LA23_1==46||LA23_1==48||LA23_1==60) ) {
                    alt23=1;
                }
            }
            switch (alt23) {
                case 1 :
                    // Xmu2.g:2779:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:2779:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:2780:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:2780:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:2781:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2465);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[338]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[339]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[340]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[341]);
            	}

            // Xmu2.g:2820:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==23) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // Xmu2.g:2821:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:2821:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:2822:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:2822:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:2823:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2521);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    						}
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[342]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[343]);
            	}

            a3=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2562); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[344]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[345]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[346]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[347]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[348]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[349]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[350]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[351]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[352]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[353]);
            	}

            // Xmu2.g:2888:2: ( (a4= '?' )? )
            // Xmu2.g:2889:3: (a4= '?' )?
            {
            // Xmu2.g:2889:3: (a4= '?' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==35) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // Xmu2.g:2890:4: a4= '?'
                    {
                    a4=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2585); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_4, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[354]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[355]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[356]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[357]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[358]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[359]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[360]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[361]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[362]);
            	}

            // Xmu2.g:2922:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt26=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA26_1 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt26=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA26_2 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred38_Xmu2()) ) {
                    alt26=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA26_3 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA26_4 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA26_5 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA26_6 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA26_7 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA26_8 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA26_9 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA26_10 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA26_11 = input.LA(2);

                if ( (synpred33_Xmu2()) ) {
                    alt26=1;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt26=2;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt26=3;
                }
                else if ( (synpred36_Xmu2()) ) {
                    alt26=4;
                }
                else if ( (synpred37_Xmu2()) ) {
                    alt26=5;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt26=7;
                }
                else if ( (true) ) {
                    alt26=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;

            }

            switch (alt26) {
                case 1 :
                    // Xmu2.g:2923:3: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2610);
                    a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_0 != null) {
                    				if (a7_0 != null) {
                    					Object value = a7_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_0, true);
                    				copyLocalizationInfos(a7_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:2947:6: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2624);
                    a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_1 != null) {
                    				if (a7_1 != null) {
                    					Object value = a7_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_1, true);
                    				copyLocalizationInfos(a7_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:2971:6: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2638);
                    a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_2 != null) {
                    				if (a7_2 != null) {
                    					Object value = a7_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_2, true);
                    				copyLocalizationInfos(a7_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:2995:6: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2652);
                    a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_3 != null) {
                    				if (a7_3 != null) {
                    					Object value = a7_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_3, true);
                    				copyLocalizationInfos(a7_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:3019:6: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2666);
                    a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_4 != null) {
                    				if (a7_4 != null) {
                    					Object value = a7_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_4, true);
                    				copyLocalizationInfos(a7_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:3043:6: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2680);
                    a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_5 != null) {
                    				if (a7_5 != null) {
                    					Object value = a7_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_5, true);
                    				copyLocalizationInfos(a7_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:3067:6: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2694);
                    a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_6 != null) {
                    				if (a7_6 != null) {
                    					Object value = a7_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_6, true);
                    				copyLocalizationInfos(a7_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:3091:6: a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2708);
                    a7_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    				// initialize boolean attribute
                    				{
                    					Object value = false;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__NULLABLE), value);
                    				}
                    			}
                    			if (a7_7 != null) {
                    				if (a7_7 != null) {
                    					Object value = a7_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a7_7, true);
                    				copyLocalizationInfos(a7_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[363]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[364]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"
    // Xmu2.g:3124:1: parse_edu_ustb_sei_mde_xmu2_expression_LoopPath returns [edu.ustb.sei.mde.xmu2.expression.LoopPath element = null] : a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.LoopPath parse_edu_ustb_sei_mde_xmu2_expression_LoopPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.LoopPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        Token a10=null;
        edu.ustb.sei.mde.xmu2.VariableDeclaration a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a9_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xmu2.g:3127:2: (a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' )
            // Xmu2.g:3128:2: a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')'
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2741); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[365]);
            	}

            // Xmu2.g:3142:2: ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) )
            // Xmu2.g:3143:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            {
            // Xmu2.g:3143:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            int alt27=3;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt27=1;
                }
                break;
            case 48:
                {
                alt27=2;
                }
                break;
            case 46:
                {
                alt27=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;

            }

            switch (alt27) {
                case 1 :
                    // Xmu2.g:3144:4: a1= 'select'
                    {
                    a1=(Token)match(input,60,FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2764); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.SELECT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3157:8: a2= 'forAll'
                    {
                    a2=(Token)match(input,48,FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2779); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.FOR_ALL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3170:8: a3= 'exists'
                    {
                    a3=(Token)match(input,46,FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2794); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.EXISTS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[366]);
            	}

            a6=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2815); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[367]);
            	}

            // Xmu2.g:3204:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            // Xmu2.g:3205:3: a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2833);
            a7_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_3, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[368]);
            	}

            a8=(Token)match(input,71,FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2851); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[369]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[370]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[371]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[372]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[373]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[374]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[375]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[376]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[377]);
            	}

            // Xmu2.g:3252:2: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt28=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA28_1 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt28=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA28_2 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred47_Xmu2()) ) {
                    alt28=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA28_3 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA28_4 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA28_5 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA28_6 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA28_7 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA28_8 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA28_9 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA28_10 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA28_11 = input.LA(2);

                if ( (synpred42_Xmu2()) ) {
                    alt28=1;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt28=2;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt28=3;
                }
                else if ( (synpred45_Xmu2()) ) {
                    alt28=4;
                }
                else if ( (synpred46_Xmu2()) ) {
                    alt28=5;
                }
                else if ( (synpred48_Xmu2()) ) {
                    alt28=7;
                }
                else if ( (true) ) {
                    alt28=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;

            }

            switch (alt28) {
                case 1 :
                    // Xmu2.g:3253:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2869);
                    a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_0 != null) {
                    				if (a9_0 != null) {
                    					Object value = a9_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_0, true);
                    				copyLocalizationInfos(a9_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3272:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2883);
                    a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_1 != null) {
                    				if (a9_1 != null) {
                    					Object value = a9_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_1, true);
                    				copyLocalizationInfos(a9_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3291:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2897);
                    a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_2 != null) {
                    				if (a9_2 != null) {
                    					Object value = a9_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_2, true);
                    				copyLocalizationInfos(a9_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:3310:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2911);
                    a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_3 != null) {
                    				if (a9_3 != null) {
                    					Object value = a9_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_3, true);
                    				copyLocalizationInfos(a9_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:3329:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2925);
                    a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_4 != null) {
                    				if (a9_4 != null) {
                    					Object value = a9_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_4, true);
                    				copyLocalizationInfos(a9_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:3348:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2939);
                    a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_5 != null) {
                    				if (a9_5 != null) {
                    					Object value = a9_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_5, true);
                    				copyLocalizationInfos(a9_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:3367:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2953);
                    a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_6 != null) {
                    				if (a9_6 != null) {
                    					Object value = a9_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_6, true);
                    				copyLocalizationInfos(a9_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:3386:6: a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2967);
                    a9_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_7 != null) {
                    				if (a9_7 != null) {
                    					Object value = a9_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_5, a9_7, true);
                    				copyLocalizationInfos(a9_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[378]);
            	}

            a10=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2985); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[379]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[380]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[381]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[382]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[383]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[384]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[385]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[386]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[387]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[388]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[389]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[390]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[391]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[392]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[393]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[394]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[395]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[396]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[397]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[398]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[399]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[400]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[401]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[402]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[403]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[404]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[405]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[406]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[407]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[408]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[409]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[410]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[413]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[414]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[415]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[416]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[417]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"
    // Xmu2.g:3465:1: parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath returns [edu.ustb.sei.mde.xmu2.expression.FeaturePath element = null] : a0= '.' (a1= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.FeaturePath parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.FeaturePath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xmu2.g:3468:2: (a0= '.' (a1= NAME ) )
            // Xmu2.g:3469:2: a0= '.' (a1= NAME )
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3014); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[418]);
            	}

            // Xmu2.g:3483:2: (a1= NAME )
            // Xmu2.g:3484:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3032); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[419]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[420]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[426]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[428]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[429]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[430]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[431]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[432]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[433]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[434]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[435]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[436]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[437]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[438]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[439]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[443]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[452]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[456]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[457]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"
    // Xmu2.g:3559:1: parse_edu_ustb_sei_mde_xmu2_expression_OperationPath returns [edu.ustb.sei.mde.xmu2.expression.OperationPath element = null] : a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.OperationPath parse_edu_ustb_sei_mde_xmu2_expression_OperationPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.OperationPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a3_7 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xmu2.g:3562:2: (a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' )
            // Xmu2.g:3563:2: a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')'
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3068); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[458]);
            	}

            // Xmu2.g:3577:2: (a1= NAME )
            // Xmu2.g:3578:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3086); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[459]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3107); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[460]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[461]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[462]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[463]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[464]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[465]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[466]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[467]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[468]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[469]);
            	}

            // Xmu2.g:3636:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==BOOLEAN||(LA32_0 >= NAME && LA32_0 <= QUOTED_39_39_92)||LA32_0==TYPE||LA32_0==16||LA32_0==22||(LA32_0 >= 55 && LA32_0 <= 56)||LA32_0==64) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // Xmu2.g:3637:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:3637:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:3638:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:3638:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt29=8;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        int LA29_1 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt29=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA29_2 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred54_Xmu2()) ) {
                            alt29=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA29_3 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA29_4 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 64:
                        {
                        int LA29_5 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA29_6 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA29_7 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA29_8 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA29_9 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA29_10 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA29_11 = input.LA(2);

                        if ( (synpred49_Xmu2()) ) {
                            alt29=1;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt29=2;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt29=3;
                        }
                        else if ( (synpred52_Xmu2()) ) {
                            alt29=4;
                        }
                        else if ( (synpred53_Xmu2()) ) {
                            alt29=5;
                        }
                        else if ( (synpred55_Xmu2()) ) {
                            alt29=7;
                        }
                        else if ( (true) ) {
                            alt29=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 29, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 29, 0, input);

                        throw nvae;

                    }

                    switch (alt29) {
                        case 1 :
                            // Xmu2.g:3639:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3136);
                            a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_0 != null) {
                            						if (a3_0 != null) {
                            							Object value = a3_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_0, true);
                            						copyLocalizationInfos(a3_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:3658:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3156);
                            a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_1 != null) {
                            						if (a3_1 != null) {
                            							Object value = a3_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_1, true);
                            						copyLocalizationInfos(a3_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:3677:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3176);
                            a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_2 != null) {
                            						if (a3_2 != null) {
                            							Object value = a3_2;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_2, true);
                            						copyLocalizationInfos(a3_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:3696:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3196);
                            a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_3 != null) {
                            						if (a3_3 != null) {
                            							Object value = a3_3;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_3, true);
                            						copyLocalizationInfos(a3_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:3715:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3216);
                            a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_4 != null) {
                            						if (a3_4 != null) {
                            							Object value = a3_4;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_4, true);
                            						copyLocalizationInfos(a3_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:3734:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3236);
                            a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_5 != null) {
                            						if (a3_5 != null) {
                            							Object value = a3_5;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_5, true);
                            						copyLocalizationInfos(a3_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:3753:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3256);
                            a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_6 != null) {
                            						if (a3_6 != null) {
                            							Object value = a3_6;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_6, true);
                            						copyLocalizationInfos(a3_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:3772:10: a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3276);
                            a3_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_7 != null) {
                            						if (a3_7 != null) {
                            							Object value = a3_7;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_0, a3_7, true);
                            						copyLocalizationInfos(a3_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[470]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[471]);
                    			}

                    // Xmu2.g:3798:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==21) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // Xmu2.g:3799:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:3799:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:3800:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3317); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[472]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[473]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[474]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[475]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[476]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[477]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[478]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[479]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[480]);
                    	    					}

                    	    // Xmu2.g:3822:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt30=8;
                    	    switch ( input.LA(1) ) {
                    	    case 55:
                    	        {
                    	        int LA30_1 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt30=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 22:
                    	        {
                    	        int LA30_2 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred61_Xmu2()) ) {
                    	            alt30=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NAME:
                    	        {
                    	        int LA30_3 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 56:
                    	        {
                    	        int LA30_4 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 64:
                    	        {
                    	        int LA30_5 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA30_6 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA30_7 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA30_8 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA30_9 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA30_10 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 10, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 16:
                    	        {
                    	        int LA30_11 = input.LA(2);

                    	        if ( (synpred56_Xmu2()) ) {
                    	            alt30=1;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt30=2;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt30=3;
                    	        }
                    	        else if ( (synpred59_Xmu2()) ) {
                    	            alt30=4;
                    	        }
                    	        else if ( (synpred60_Xmu2()) ) {
                    	            alt30=5;
                    	        }
                    	        else if ( (synpred62_Xmu2()) ) {
                    	            alt30=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt30=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 30, 11, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 30, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt30) {
                    	        case 1 :
                    	            // Xmu2.g:3823:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3351);
                    	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_0 != null) {
                    	            								if (a5_0 != null) {
                    	            									Object value = a5_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	            								copyLocalizationInfos(a5_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:3842:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3377);
                    	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_1 != null) {
                    	            								if (a5_1 != null) {
                    	            									Object value = a5_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_1, true);
                    	            								copyLocalizationInfos(a5_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 3 :
                    	            // Xmu2.g:3861:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3403);
                    	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_2 != null) {
                    	            								if (a5_2 != null) {
                    	            									Object value = a5_2;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_2, true);
                    	            								copyLocalizationInfos(a5_2, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 4 :
                    	            // Xmu2.g:3880:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3429);
                    	            a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_3 != null) {
                    	            								if (a5_3 != null) {
                    	            									Object value = a5_3;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_3, true);
                    	            								copyLocalizationInfos(a5_3, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 5 :
                    	            // Xmu2.g:3899:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3455);
                    	            a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_4 != null) {
                    	            								if (a5_4 != null) {
                    	            									Object value = a5_4;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_4, true);
                    	            								copyLocalizationInfos(a5_4, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 6 :
                    	            // Xmu2.g:3918:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3481);
                    	            a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_5 != null) {
                    	            								if (a5_5 != null) {
                    	            									Object value = a5_5;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_5, true);
                    	            								copyLocalizationInfos(a5_5, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 7 :
                    	            // Xmu2.g:3937:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3507);
                    	            a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_6 != null) {
                    	            								if (a5_6 != null) {
                    	            									Object value = a5_6;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_6, true);
                    	            								copyLocalizationInfos(a5_6, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 8 :
                    	            // Xmu2.g:3956:14: a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3533);
                    	            a5_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_7 != null) {
                    	            								if (a5_7 != null) {
                    	            									Object value = a5_7;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3_0_0_1_0_0_1, a5_7, true);
                    	            								copyLocalizationInfos(a5_7, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[481]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[482]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[483]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[484]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[485]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3607); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[486]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[487]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[488]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[489]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[490]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[491]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[492]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[493]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[494]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[495]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[496]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[497]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[498]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[499]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[500]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[501]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[502]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[503]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[504]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[505]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[506]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[507]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[508]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[509]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[510]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[511]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[512]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[513]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[514]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[515]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[516]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[517]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[518]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[519]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[520]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[521]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[522]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[523]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[524]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"
    // Xmu2.g:4051:1: parse_edu_ustb_sei_mde_xmu2_expression_PositionPath returns [edu.ustb.sei.mde.xmu2.expression.PositionPath element = null] : a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.PositionPath parse_edu_ustb_sei_mde_xmu2_expression_PositionPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PositionPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a7_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xmu2.g:4054:2: (a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' )
            // Xmu2.g:4055:2: a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')'
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3636); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[525]);
            	}

            // Xmu2.g:4069:2: ( (a1= 'first' |a2= 'last' |a3= 'at' ) )
            // Xmu2.g:4070:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            {
            // Xmu2.g:4070:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            int alt33=3;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt33=1;
                }
                break;
            case 52:
                {
                alt33=2;
                }
                break;
            case 39:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;

            }

            switch (alt33) {
                case 1 :
                    // Xmu2.g:4071:4: a1= 'first'
                    {
                    a1=(Token)match(input,47,FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3659); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.FIRST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4084:8: a2= 'last'
                    {
                    a2=(Token)match(input,52,FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3674); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.LAST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4097:8: a3= 'at'
                    {
                    a3=(Token)match(input,39,FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3689); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.AT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[526]);
            	}

            a6=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3710); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[527]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[528]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[529]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[530]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[531]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[532]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[533]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[534]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[535]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[536]);
            	}

            // Xmu2.g:4140:2: ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==BOOLEAN||(LA35_0 >= NAME && LA35_0 <= QUOTED_39_39_92)||LA35_0==TYPE||LA35_0==16||LA35_0==22||(LA35_0 >= 55 && LA35_0 <= 56)||LA35_0==64) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // Xmu2.g:4141:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    {
                    // Xmu2.g:4141:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt34=8;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        int LA34_1 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt34=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA34_2 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred72_Xmu2()) ) {
                            alt34=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA34_3 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA34_4 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 64:
                        {
                        int LA34_5 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA34_6 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA34_7 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA34_8 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA34_9 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA34_10 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA34_11 = input.LA(2);

                        if ( (synpred67_Xmu2()) ) {
                            alt34=1;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt34=2;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt34=3;
                        }
                        else if ( (synpred70_Xmu2()) ) {
                            alt34=4;
                        }
                        else if ( (synpred71_Xmu2()) ) {
                            alt34=5;
                        }
                        else if ( (synpred73_Xmu2()) ) {
                            alt34=7;
                        }
                        else if ( (true) ) {
                            alt34=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 34, 0, input);

                        throw nvae;

                    }

                    switch (alt34) {
                        case 1 :
                            // Xmu2.g:4142:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3733);
                            a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_0 != null) {
                            					if (a7_0 != null) {
                            						Object value = a7_0;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_0, true);
                            					copyLocalizationInfos(a7_0, element);
                            				}
                            			}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:4161:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3750);
                            a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_1 != null) {
                            					if (a7_1 != null) {
                            						Object value = a7_1;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_1, true);
                            					copyLocalizationInfos(a7_1, element);
                            				}
                            			}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:4180:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3767);
                            a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_2 != null) {
                            					if (a7_2 != null) {
                            						Object value = a7_2;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_2, true);
                            					copyLocalizationInfos(a7_2, element);
                            				}
                            			}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:4199:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3784);
                            a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_3 != null) {
                            					if (a7_3 != null) {
                            						Object value = a7_3;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_3, true);
                            					copyLocalizationInfos(a7_3, element);
                            				}
                            			}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:4218:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3801);
                            a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_4 != null) {
                            					if (a7_4 != null) {
                            						Object value = a7_4;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_4, true);
                            					copyLocalizationInfos(a7_4, element);
                            				}
                            			}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:4237:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3818);
                            a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_5 != null) {
                            					if (a7_5 != null) {
                            						Object value = a7_5;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_5, true);
                            					copyLocalizationInfos(a7_5, element);
                            				}
                            			}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:4256:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3835);
                            a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_6 != null) {
                            					if (a7_6 != null) {
                            						Object value = a7_6;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_6, true);
                            					copyLocalizationInfos(a7_6, element);
                            				}
                            			}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:4275:8: a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3852);
                            a7_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_7 != null) {
                            					if (a7_7 != null) {
                            						Object value = a7_7;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_3, a7_7, true);
                            					copyLocalizationInfos(a7_7, element);
                            				}
                            			}

                            }
                            break;

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[537]);
            	}

            a8=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3878); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[538]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[539]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[540]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[541]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[542]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[543]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[544]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[546]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[547]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[548]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[549]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[550]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[551]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[552]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[553]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[554]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[555]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[556]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[557]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[558]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[559]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[560]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[561]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[562]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[563]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[564]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[565]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[566]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[567]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[568]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[569]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[570]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[571]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[572]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[573]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[574]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[575]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[576]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"
    // Xmu2.g:4355:1: parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression returns [edu.ustb.sei.mde.xmu2.expression.VariableExpression element = null] : (a0= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.VariableExpression parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.VariableExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xmu2.g:4358:2: ( (a0= NAME ) )
            // Xmu2.g:4359:2: (a0= NAME )
            {
            // Xmu2.g:4359:2: (a0= NAME )
            // Xmu2.g:4360:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3911); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createVariableExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_15_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[577]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[578]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[579]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[580]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[581]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[582]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[583]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[584]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[585]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[586]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[587]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[588]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[589]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[590]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[591]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[592]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[593]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[594]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[595]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[596]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[597]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[598]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[599]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[600]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[601]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[602]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[603]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[604]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[605]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[606]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[607]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[608]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[609]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[610]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[611]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[612]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[613]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[614]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[615]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"
    // Xmu2.g:4435:1: parse_edu_ustb_sei_mde_xmu2_expression_PathExpression returns [edu.ustb.sei.mde.xmu2.expression.PathExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.PathExpression parse_edu_ustb_sei_mde_xmu2_expression_PathExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.ConstantExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.Path a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xmu2.g:4438:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ )
            // Xmu2.g:4439:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            {
            // Xmu2.g:4439:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt36=3;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt36=1;
                }
                break;
            case BOOLEAN:
            case NUMBER:
            case OBJ_URI:
            case QUOTED_39_39_92:
            case TYPE:
            case 56:
            case 64:
                {
                alt36=2;
                }
                break;
            case 16:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }

            switch (alt36) {
                case 1 :
                    // Xmu2.g:4440:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3951);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4459:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3965);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4478:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3979);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[616]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[617]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[618]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[619]);
            	}

            // Xmu2.g:4506:2: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            int cnt37=0;
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==23) ) {
                    int LA37_2 = input.LA(2);

                    if ( (LA37_2==39||(LA37_2 >= 46 && LA37_2 <= 48)||LA37_2==52||LA37_2==60) ) {
                        alt37=1;
                    }


                }
                else if ( (LA37_0==24) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // Xmu2.g:4507:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    {
            	    // Xmu2.g:4507:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    // Xmu2.g:4508:4: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4006);
            	    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_Path();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__PATH, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt37 >= 1 ) break loop37;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(37, input);
                        throw eee;
                }
                cnt37++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[620]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[621]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[626]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[627]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[630]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[632]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[633]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[636]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[637]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[638]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[639]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[641]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[642]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[643]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[644]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[645]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[646]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[647]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[648]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[649]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[650]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[651]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[652]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[653]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[654]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[655]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[656]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[657]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[658]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"
    // Xmu2.g:4574:1: parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression returns [edu.ustb.sei.mde.xmu2.expression.EmptyExpression element = null] : ( (a0= 'null' |a1= 'undefined' ) ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EmptyExpression parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EmptyExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xmu2.g:4577:2: ( ( (a0= 'null' |a1= 'undefined' ) ) )
            // Xmu2.g:4578:2: ( (a0= 'null' |a1= 'undefined' ) )
            {
            // Xmu2.g:4578:2: ( (a0= 'null' |a1= 'undefined' ) )
            // Xmu2.g:4579:3: (a0= 'null' |a1= 'undefined' )
            {
            // Xmu2.g:4579:3: (a0= 'null' |a1= 'undefined' )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==56) ) {
                alt38=1;
            }
            else if ( (LA38_0==64) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;

            }
            switch (alt38) {
                case 1 :
                    // Xmu2.g:4580:4: a0= 'null'
                    {
                    a0=(Token)match(input,56,FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4056); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_17_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.NULL_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4593:8: a1= 'undefined'
                    {
                    a1=(Token)match(input,64,FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4071); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_17_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.EMPTY_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[659]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[660]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[661]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[662]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[663]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[664]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[665]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[666]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[667]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[668]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[669]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[670]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[671]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[672]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[673]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[674]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[675]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[676]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[677]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[678]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[679]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[680]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[681]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[682]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[683]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[684]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[685]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[686]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[687]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[688]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[689]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[690]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[691]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[692]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[693]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[694]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[695]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[696]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[697]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"
    // Xmu2.g:4653:1: parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element = null] : (a0= QUOTED_39_39_92 ) ;
    public final edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xmu2.g:4656:2: ( (a0= QUOTED_39_39_92 ) )
            // Xmu2.g:4657:2: (a0= QUOTED_39_39_92 )
            {
            // Xmu2.g:4657:2: (a0= QUOTED_39_39_92 )
            // Xmu2.g:4658:3: a0= QUOTED_39_39_92
            {
            a0=(Token)match(input,QUOTED_39_39_92,FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression4111); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createStringLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_39_39_92");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_18_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[698]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[699]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[700]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[701]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[702]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[703]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[704]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[705]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[706]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[707]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[708]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[709]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[710]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[711]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[712]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[713]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[714]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[715]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[716]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[717]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[718]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[719]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[720]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[721]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[722]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[723]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[726]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[736]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"
    // Xmu2.g:4733:1: parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element = null] : (a0= NUMBER ) ;
    public final edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xmu2.g:4736:2: ( (a0= NUMBER ) )
            // Xmu2.g:4737:2: (a0= NUMBER )
            {
            // Xmu2.g:4737:2: (a0= NUMBER )
            // Xmu2.g:4738:3: a0= NUMBER
            {
            a0=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression4151); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createIntegerLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_19_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[737]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[738]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[739]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[740]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[741]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[742]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[743]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[744]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[745]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[746]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[747]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[748]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[749]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[750]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[751]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[752]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[753]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[754]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[755]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[756]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[757]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[758]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[770]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[771]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[772]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[773]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[774]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[775]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"
    // Xmu2.g:4813:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element = null] : (a0= BOOLEAN ) ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xmu2.g:4816:2: ( (a0= BOOLEAN ) )
            // Xmu2.g:4817:2: (a0= BOOLEAN )
            {
            // Xmu2.g:4817:2: (a0= BOOLEAN )
            // Xmu2.g:4818:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression4191); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_20_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[776]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[780]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[782]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[783]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[784]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[785]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[786]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[787]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[788]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[789]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[790]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[791]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[792]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[793]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[794]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[795]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[796]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[797]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[798]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[799]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[800]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[801]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[802]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[803]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[804]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[805]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[806]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[807]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[808]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[809]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[810]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[811]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[812]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[813]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[814]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"
    // Xmu2.g:4893:1: parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element = null] : (a0= TYPE ) a1= '::' (a2= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xmu2.g:4896:2: ( (a0= TYPE ) a1= '::' (a2= NAME ) )
            // Xmu2.g:4897:2: (a0= TYPE ) a1= '::' (a2= NAME )
            {
            // Xmu2.g:4897:2: (a0= TYPE )
            // Xmu2.g:4898:3: a0= TYPE
            {
            a0=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4231); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnum proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnum();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnum>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[815]);
            	}

            a1=(Token)match(input,27,FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4252); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[816]);
            	}

            // Xmu2.g:4951:2: (a2= NAME )
            // Xmu2.g:4952:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4270); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnumLiteral proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnumLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnumLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionValueReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[817]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[820]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[823]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[824]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[825]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[826]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[827]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[828]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[829]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[830]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[831]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[832]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[833]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[834]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[835]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[836]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[837]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[838]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[839]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[840]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[841]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[842]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[843]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[845]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[846]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[847]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[848]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[849]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[853]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[854]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[855]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"
    // Xmu2.g:5031:1: parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression returns [edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element = null] : (a0= OBJ_URI ) ;
    public final edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xmu2.g:5034:2: ( (a0= OBJ_URI ) )
            // Xmu2.g:5035:2: (a0= OBJ_URI )
            {
            // Xmu2.g:5035:2: (a0= OBJ_URI )
            // Xmu2.g:5036:3: a0= OBJ_URI
            {
            a0=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression4310); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createObjectURIExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EObject proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEObject();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression, org.eclipse.emf.ecore.EObject>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectURIExpressionObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[856]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[863]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[864]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[865]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[866]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[868]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[869]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[870]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[871]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[872]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[873]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[874]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[875]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[876]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[879]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[880]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[884]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[885]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[886]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[887]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[888]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[889]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[890]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[891]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[892]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[893]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[894]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"
    // Xmu2.g:5115:1: parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression returns [edu.ustb.sei.mde.xmu2.expression.ParenExpression element = null] : a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.ParenExpression parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ParenExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xmu2.g:5118:2: (a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' )
            // Xmu2.g:5119:2: a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')'
            {
            a0=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4346); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[895]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[896]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[897]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[900]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[901]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[902]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[903]);
            	}

            // Xmu2.g:5141:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt39=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA39_1 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt39=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA39_2 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred84_Xmu2()) ) {
                    alt39=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA39_3 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA39_4 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA39_5 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA39_6 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA39_7 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA39_8 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA39_9 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA39_10 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA39_11 = input.LA(2);

                if ( (synpred79_Xmu2()) ) {
                    alt39=1;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt39=2;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt39=3;
                }
                else if ( (synpred82_Xmu2()) ) {
                    alt39=4;
                }
                else if ( (synpred83_Xmu2()) ) {
                    alt39=5;
                }
                else if ( (synpred85_Xmu2()) ) {
                    alt39=7;
                }
                else if ( (true) ) {
                    alt39=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }

            switch (alt39) {
                case 1 :
                    // Xmu2.g:5142:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4364);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5161:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4378);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5180:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4392);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5199:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4406);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:5218:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4420);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:5237:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4434);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:5256:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4448);
                    a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_6 != null) {
                    				if (a1_6 != null) {
                    					Object value = a1_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_6, true);
                    				copyLocalizationInfos(a1_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:5275:6: a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4462);
                    a1_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_7 != null) {
                    				if (a1_7 != null) {
                    					Object value = a1_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a1_7, true);
                    				copyLocalizationInfos(a1_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[904]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4480); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[905]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[906]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[907]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[908]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[911]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[912]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[913]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[914]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[915]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[916]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[917]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[919]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[920]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[922]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[923]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[924]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[925]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[926]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[927]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[935]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[937]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[938]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[939]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[943]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"
    // Xmu2.g:5354:1: parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression returns [edu.ustb.sei.mde.xmu2.expression.UnaryExpression element = null] : ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.UnaryExpression parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xmu2.g:5357:2: ( ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:5358:2: ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:5358:2: ( (a0= 'not' |a1= '-' ) )
            // Xmu2.g:5359:3: (a0= 'not' |a1= '-' )
            {
            // Xmu2.g:5359:3: (a0= 'not' |a1= '-' )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==55) ) {
                alt40=1;
            }
            else if ( (LA40_0==22) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }
            switch (alt40) {
                case 1 :
                    // Xmu2.g:5360:4: a0= 'not'
                    {
                    a0=(Token)match(input,55,FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4518); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.NOT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5373:8: a1= '-'
                    {
                    a1=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4533); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.MINUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[945]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[946]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[947]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[948]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[949]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[950]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[951]);
            	}

            // Xmu2.g:5400:2: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt41=2;
            switch ( input.LA(1) ) {
            case NAME:
                {
                int LA41_1 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA41_2 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 2, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA41_3 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA41_4 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 4, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA41_5 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 5, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA41_6 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 6, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA41_7 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 7, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA41_8 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 8, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA41_9 = input.LA(2);

                if ( (synpred87_Xmu2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;

            }

            switch (alt41) {
                case 1 :
                    // Xmu2.g:5401:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4558);
                    a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5420:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4572);
                    a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[952]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[953]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[954]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[955]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[956]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[957]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[958]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[959]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[961]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[962]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[975]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[976]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[982]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[984]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"
    // Xmu2.g:5479:1: parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression returns [edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xmu2.g:5482:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5483:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5483:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt42=3;
            switch ( input.LA(1) ) {
            case 22:
            case 55:
                {
                alt42=1;
                }
                break;
            case NAME:
                {
                int LA42_3 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA42_4 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA42_5 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA42_6 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA42_7 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA42_8 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA42_9 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA42_10 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA42_11 = input.LA(2);

                if ( (synpred89_Xmu2()) ) {
                    alt42=2;
                }
                else if ( (true) ) {
                    alt42=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // Xmu2.g:5484:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4609);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5503:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4623);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5522:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4637);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[985]);
            	}

            // Xmu2.g:5547:2: ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt45=0;
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==18||LA45_0==25) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // Xmu2.g:5548:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:5548:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:5549:4: ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:5549:4: ( (a1= '*' |a2= '/' ) )
            	    // Xmu2.g:5550:5: (a1= '*' |a2= '/' )
            	    {
            	    // Xmu2.g:5550:5: (a1= '*' |a2= '/' )
            	    int alt43=2;
            	    int LA43_0 = input.LA(1);

            	    if ( (LA43_0==18) ) {
            	        alt43=1;
            	    }
            	    else if ( (LA43_0==25) ) {
            	        alt43=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 43, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt43) {
            	        case 1 :
            	            // Xmu2.g:5551:6: a1= '*'
            	            {
            	            a1=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4677); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.MUL_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5564:12: a2= '/'
            	            {
            	            a2=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4696); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.DIV_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[986]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[987]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[988]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[989]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[990]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[991]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[992]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[993]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[994]);
            	    			}

            	    // Xmu2.g:5592:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt44=3;
            	    switch ( input.LA(1) ) {
            	    case 22:
            	    case 55:
            	        {
            	        alt44=1;
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA44_3 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA44_4 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 64:
            	        {
            	        int LA44_5 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA44_6 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA44_7 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA44_8 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA44_9 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA44_10 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA44_11 = input.LA(2);

            	        if ( (synpred92_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else if ( (true) ) {
            	            alt44=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt44) {
            	        case 1 :
            	            // Xmu2.g:5593:5: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4733);
            	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_0 != null) {
            	            						if (a5_0 != null) {
            	            							Object value = a5_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_0, true);
            	            						copyLocalizationInfos(a5_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5612:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4753);
            	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_1 != null) {
            	            						if (a5_1 != null) {
            	            							Object value = a5_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_1, true);
            	            						copyLocalizationInfos(a5_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5631:10: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4773);
            	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_2 != null) {
            	            						if (a5_2 != null) {
            	            							Object value = a5_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a5_2, true);
            	            						copyLocalizationInfos(a5_2, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[995]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[996]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[997]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[998]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[999]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1000]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1001]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1002]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1003]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1004]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1005]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1006]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1007]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1008]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1009]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1010]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1011]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1012]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1013]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1014]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1015]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1016]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1017]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1018]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1019]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1020]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1021]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1022]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1023]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1024]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1025]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1026]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt45 >= 1 ) break loop45;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(45, input);
                        throw eee;
                }
                cnt45++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1027]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1028]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1029]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1030]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1031]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1033]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1034]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1043]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1044]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1045]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1046]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1047]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1048]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1049]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1050]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1051]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1052]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1053]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1054]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1055]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1056]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1057]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1058]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"
    // Xmu2.g:5727:1: parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression returns [edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.AdditiveExpression parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a6_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xmu2.g:5730:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5731:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5731:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt46=4;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA46_1 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred95_Xmu2()) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA46_2 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred95_Xmu2()) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA46_3 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA46_4 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA46_5 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA46_6 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA46_7 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA46_8 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA46_9 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA46_10 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA46_11 = input.LA(2);

                if ( (synpred94_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred96_Xmu2()) ) {
                    alt46=3;
                }
                else if ( (true) ) {
                    alt46=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }

            switch (alt46) {
                case 1 :
                    // Xmu2.g:5732:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4833);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5751:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4847);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5770:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4861);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5789:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4875);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1059]);
            	}

            // Xmu2.g:5814:2: ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt49=0;
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0 >= 19 && LA49_0 <= 20)||LA49_0==22) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // Xmu2.g:5815:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:5815:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:5816:4: ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:5816:4: ( (a1= '+' |a2= '-' |a3= '++' ) )
            	    // Xmu2.g:5817:5: (a1= '+' |a2= '-' |a3= '++' )
            	    {
            	    // Xmu2.g:5817:5: (a1= '+' |a2= '-' |a3= '++' )
            	    int alt47=3;
            	    switch ( input.LA(1) ) {
            	    case 19:
            	        {
            	        alt47=1;
            	        }
            	        break;
            	    case 22:
            	        {
            	        alt47=2;
            	        }
            	        break;
            	    case 20:
            	        {
            	        alt47=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 47, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt47) {
            	        case 1 :
            	            // Xmu2.g:5818:6: a1= '+'
            	            {
            	            a1=(Token)match(input,19,FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4915); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.ADD_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5831:12: a2= '-'
            	            {
            	            a2=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4934); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.SUB_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5844:12: a3= '++'
            	            {
            	            a3=(Token)match(input,20,FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4953); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.APPEND_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1060]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1061]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1062]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1063]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1064]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1065]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1066]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1067]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1068]);
            	    			}

            	    // Xmu2.g:5872:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt48=4;
            	    switch ( input.LA(1) ) {
            	    case 55:
            	        {
            	        int LA48_1 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred100_Xmu2()) ) {
            	            alt48=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA48_2 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred100_Xmu2()) ) {
            	            alt48=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA48_3 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA48_4 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 64:
            	        {
            	        int LA48_5 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA48_6 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA48_7 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA48_8 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA48_9 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA48_10 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA48_11 = input.LA(2);

            	        if ( (synpred99_Xmu2()) ) {
            	            alt48=1;
            	        }
            	        else if ( (synpred101_Xmu2()) ) {
            	            alt48=3;
            	        }
            	        else if ( (true) ) {
            	            alt48=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 48, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 48, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt48) {
            	        case 1 :
            	            // Xmu2.g:5873:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4990);
            	            a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_0 != null) {
            	            						if (a6_0 != null) {
            	            							Object value = a6_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_0, true);
            	            						copyLocalizationInfos(a6_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5892:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5010);
            	            a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_1 != null) {
            	            						if (a6_1 != null) {
            	            							Object value = a6_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_1, true);
            	            						copyLocalizationInfos(a6_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5911:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5030);
            	            a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_2 != null) {
            	            						if (a6_2 != null) {
            	            							Object value = a6_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_2, true);
            	            						copyLocalizationInfos(a6_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:5930:10: a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5050);
            	            a6_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_3 != null) {
            	            						if (a6_3 != null) {
            	            							Object value = a6_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1_0_0_1, a6_3, true);
            	            						copyLocalizationInfos(a6_3, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1069]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1070]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1071]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1072]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1073]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1074]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1075]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1076]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1077]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1078]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1079]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1080]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1081]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1082]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1083]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1084]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1085]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1086]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1087]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1088]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1089]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1090]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1091]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1092]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1093]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1094]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1095]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1096]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1097]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1098]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1099]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt49 >= 1 ) break loop49;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(49, input);
                        throw eee;
                }
                cnt49++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1100]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1101]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1102]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1103]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1104]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1105]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1106]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1107]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1108]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1109]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1110]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1111]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1112]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1113]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1114]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1115]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1116]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1117]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1124]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1126]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1127]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1128]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1129]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1130]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"
    // Xmu2.g:6024:1: parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression returns [edu.ustb.sei.mde.xmu2.expression.RelationalExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.RelationalExpression parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a8_4 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xmu2.g:6027:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:6028:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:6028:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt50=5;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA50_1 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt50=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA50_2 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred105_Xmu2()) ) {
                    alt50=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA50_3 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA50_4 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA50_5 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA50_6 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA50_7 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA50_8 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA50_9 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA50_10 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA50_11 = input.LA(2);

                if ( (synpred103_Xmu2()) ) {
                    alt50=1;
                }
                else if ( (synpred104_Xmu2()) ) {
                    alt50=2;
                }
                else if ( (synpred106_Xmu2()) ) {
                    alt50=4;
                }
                else if ( (true) ) {
                    alt50=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }

            switch (alt50) {
                case 1 :
                    // Xmu2.g:6029:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5110);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6048:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5124);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6067:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5138);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6086:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5152);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6105:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5166);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1131]);
            	}

            // Xmu2.g:6130:2: ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xmu2.g:6131:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xmu2.g:6131:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt51=5;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt51=1;
                }
                break;
            case 30:
                {
                alt51=2;
                }
                break;
            case 31:
                {
                alt51=3;
                }
                break;
            case 33:
                {
                alt51=4;
                }
                break;
            case 34:
                {
                alt51=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;

            }

            switch (alt51) {
                case 1 :
                    // Xmu2.g:6132:4: a1= '='
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5193); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6145:8: a2= '<'
                    {
                    a2=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5208); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6158:8: a3= '<='
                    {
                    a3=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5223); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6171:8: a4= '>'
                    {
                    a4=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5238); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6184:8: a5= '>='
                    {
                    a5=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5253); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1132]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1133]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1134]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1135]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1136]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1137]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1138]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1139]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1140]);
            	}

            // Xmu2.g:6212:2: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt52=5;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA52_1 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA52_2 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt52=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA52_3 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA52_4 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA52_5 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA52_6 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA52_7 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA52_8 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA52_9 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA52_10 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA52_11 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (true) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }

            switch (alt52) {
                case 1 :
                    // Xmu2.g:6213:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5278);
                    a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6232:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5292);
                    a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6251:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5306);
                    a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6270:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5320);
                    a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6289:6: a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5334);
                    a8_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_4 != null) {
                    				if (a8_4 != null) {
                    					Object value = a8_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_2, a8_4, true);
                    				copyLocalizationInfos(a8_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1141]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1142]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1143]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1144]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1145]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1146]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1147]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1148]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1149]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1150]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1151]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1152]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1153]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1154]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1155]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1156]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1157]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1158]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1159]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1160]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1161]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1162]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1163]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1164]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1165]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1166]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1167]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1168]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1169]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1170]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"
    // Xmu2.g:6345:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_5 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xmu2.g:6348:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:6349:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:6349:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt53=6;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA53_1 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt53=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA53_2 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred118_Xmu2()) ) {
                    alt53=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA53_3 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA53_4 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA53_5 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA53_6 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA53_7 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA53_8 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA53_9 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA53_10 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA53_11 = input.LA(2);

                if ( (synpred115_Xmu2()) ) {
                    alt53=1;
                }
                else if ( (synpred116_Xmu2()) ) {
                    alt53=2;
                }
                else if ( (synpred117_Xmu2()) ) {
                    alt53=3;
                }
                else if ( (synpred119_Xmu2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;

            }

            switch (alt53) {
                case 1 :
                    // Xmu2.g:6350:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5371);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6369:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5385);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6388:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5399);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6407:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5413);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6426:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5427);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:6445:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5441);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1171]);
            	}

            // Xmu2.g:6470:2: ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt55=0;
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==38) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // Xmu2.g:6471:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:6471:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:6472:4: a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5468); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1172]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1173]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1174]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1175]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1176]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1177]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1178]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1179]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1180]);
            	    			}

            	    // Xmu2.g:6494:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt54=6;
            	    switch ( input.LA(1) ) {
            	    case 55:
            	        {
            	        int LA54_1 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt54=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA54_2 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred123_Xmu2()) ) {
            	            alt54=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA54_3 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA54_4 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 64:
            	        {
            	        int LA54_5 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA54_6 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA54_7 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA54_8 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA54_9 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA54_10 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA54_11 = input.LA(2);

            	        if ( (synpred120_Xmu2()) ) {
            	            alt54=1;
            	        }
            	        else if ( (synpred121_Xmu2()) ) {
            	            alt54=2;
            	        }
            	        else if ( (synpred122_Xmu2()) ) {
            	            alt54=3;
            	        }
            	        else if ( (synpred124_Xmu2()) ) {
            	            alt54=5;
            	        }
            	        else if ( (true) ) {
            	            alt54=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 54, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 54, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt54) {
            	        case 1 :
            	            // Xmu2.g:6495:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5494);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6514:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5514);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6533:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5534);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:6552:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5554);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:6571:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5574);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:6590:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5594);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1181]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1182]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1183]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1184]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1185]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1186]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1187]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1188]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1189]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1190]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1191]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1192]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1193]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1194]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1195]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1196]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1197]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1198]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1199]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1200]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1201]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1202]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1203]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1204]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1205]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1206]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1207]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1208]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1209]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1210]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt55 >= 1 ) break loop55;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(55, input);
                        throw eee;
                }
                cnt55++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1211]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1212]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1213]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1214]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1215]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1216]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1217]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1218]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1219]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1220]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1221]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1222]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1223]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1224]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1225]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1226]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1227]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1228]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1229]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1230]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1231]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1232]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1233]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1234]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1235]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1236]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1237]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1238]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1239]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1240]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"
    // Xmu2.g:6682:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_6 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_6 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xmu2.g:6685:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:6686:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:6686:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt56=7;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA56_1 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt56=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA56_2 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred130_Xmu2()) ) {
                    alt56=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA56_3 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA56_4 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA56_5 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA56_6 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA56_7 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA56_8 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA56_9 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA56_10 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA56_11 = input.LA(2);

                if ( (synpred126_Xmu2()) ) {
                    alt56=1;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt56=2;
                }
                else if ( (synpred128_Xmu2()) ) {
                    alt56=3;
                }
                else if ( (synpred129_Xmu2()) ) {
                    alt56=4;
                }
                else if ( (synpred131_Xmu2()) ) {
                    alt56=6;
                }
                else if ( (true) ) {
                    alt56=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;

            }

            switch (alt56) {
                case 1 :
                    // Xmu2.g:6687:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5654);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6706:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5668);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6725:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5682);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6744:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5696);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6763:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5710);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:6782:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5724);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:6801:6: a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5738);
                    a0_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_6 != null) {
                    				if (a0_6 != null) {
                    					Object value = a0_6;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, a0_6, true);
                    				copyLocalizationInfos(a0_6, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1241]);
            	}

            // Xmu2.g:6826:2: ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt58=0;
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==57) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // Xmu2.g:6827:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:6827:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:6828:4: a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,57,FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5765); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1242]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1243]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1244]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1245]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1246]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1247]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1248]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1249]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1250]);
            	    			}

            	    // Xmu2.g:6850:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt57=7;
            	    switch ( input.LA(1) ) {
            	    case 55:
            	        {
            	        int LA57_1 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA57_2 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred136_Xmu2()) ) {
            	            alt57=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA57_3 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 56:
            	        {
            	        int LA57_4 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 64:
            	        {
            	        int LA57_5 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA57_6 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA57_7 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA57_8 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA57_9 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA57_10 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA57_11 = input.LA(2);

            	        if ( (synpred132_Xmu2()) ) {
            	            alt57=1;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt57=2;
            	        }
            	        else if ( (synpred134_Xmu2()) ) {
            	            alt57=3;
            	        }
            	        else if ( (synpred135_Xmu2()) ) {
            	            alt57=4;
            	        }
            	        else if ( (synpred137_Xmu2()) ) {
            	            alt57=6;
            	        }
            	        else if ( (true) ) {
            	            alt57=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 57, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt57) {
            	        case 1 :
            	            // Xmu2.g:6851:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5791);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6870:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5811);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6889:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5831);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:6908:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5851);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:6927:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5871);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:6946:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5891);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 7 :
            	            // Xmu2.g:6965:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5911);
            	            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_6 != null) {
            	            						if (a2_6 != null) {
            	            							Object value = a2_6;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1, a2_6, true);
            	            						copyLocalizationInfos(a2_6, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1251]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1252]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1253]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1254]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1255]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1256]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1257]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1258]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1259]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1260]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1261]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1262]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1263]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1264]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1265]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1266]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1267]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1268]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1269]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1270]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1271]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1272]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1273]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1274]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1275]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1276]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1277]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1278]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1279]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt58 >= 1 ) break loop58;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(58, input);
                        throw eee;
                }
                cnt58++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1280]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1281]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1282]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1283]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1284]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1285]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1286]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1287]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1288]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1289]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1290]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1291]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1292]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1293]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1294]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1295]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1296]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1297]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1298]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1299]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1300]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1301]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1302]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1303]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1304]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1305]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1306]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1307]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1308]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"
    // Xmu2.g:7055:1: parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement returns [edu.ustb.sei.mde.xmu2.statement.BlockStatement element = null] : a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.BlockStatement parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.BlockStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xmu2.g:7058:2: (a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' )
            // Xmu2.g:7059:2: a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}'
            {
            a0=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5967); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1309]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1310]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1311]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1312]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1313]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1314]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1315]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1316]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1317]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1318]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1319]);
            	}

            // Xmu2.g:7083:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==NAME||(LA60_0 >= 43 && LA60_0 <= 44)||LA60_0==49||LA60_0==61||LA60_0==63||LA60_0==67||LA60_0==70) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // Xmu2.g:7084:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    {
                    // Xmu2.g:7084:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    // Xmu2.g:7085:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    {
                    // Xmu2.g:7085:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:7086:5: a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5996);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1320]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1321]);
                    			}

                    // Xmu2.g:7112:4: ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==29) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // Xmu2.g:7113:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    {
                    	    // Xmu2.g:7113:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    // Xmu2.g:7114:6: a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    {
                    	    a2=(Token)match(input,29,FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6037); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1322]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1323]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1324]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1325]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1326]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1327]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1328]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1329]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1330]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1331]);
                    	    					}

                    	    // Xmu2.g:7137:6: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    // Xmu2.g:7138:7: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6071);
                    	    a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a3_0 != null) {
                    	    								if (a3_0 != null) {
                    	    									Object value = a3_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1_0_0_1_0_0_1, a3_0, true);
                    	    								copyLocalizationInfos(a3_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1332]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1333]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop59;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1334]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1335]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1336]);
            	}

            a4=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6145); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1337]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1338]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1339]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1340]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1341]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1342]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1343]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1344]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1345]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1346]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1347]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1348]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1349]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1350]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1351]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1352]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1353]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1354]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1355]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"
    // Xmu2.g:7213:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement returns [edu.ustb.sei.mde.xmu2.statement.UpdateStatement element = null] : a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateStatement parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.Pattern a3_0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xmu2.g:7216:2: (a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ )
            // Xmu2.g:7217:2: a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            {
            a0=(Token)match(input,67,FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6174); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1356]);
            	}

            // Xmu2.g:7231:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7232:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6192);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1357]);
            	}

            a2=(Token)match(input,69,FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6210); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1358]);
            	}

            // Xmu2.g:7271:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7272:3: a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6228);
            a3_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__VIEW), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1359]);
            	}

            a4=(Token)match(input,40,FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6246); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1360]);
            	}

            // Xmu2.g:7311:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            int cnt61=0;
            loop61:
            do {
                int alt61=2;
                switch ( input.LA(1) ) {
                case 53:
                    {
                    int LA61_2 = input.LA(2);

                    if ( (synpred141_Xmu2()) ) {
                        alt61=1;
                    }


                    }
                    break;
                case 65:
                    {
                    int LA61_3 = input.LA(2);

                    if ( (synpred141_Xmu2()) ) {
                        alt61=1;
                    }


                    }
                    break;
                case 66:
                    {
                    int LA61_4 = input.LA(2);

                    if ( (synpred141_Xmu2()) ) {
                        alt61=1;
                    }


                    }
                    break;
                case 42:
                    {
                    int LA61_5 = input.LA(2);

                    if ( (synpred141_Xmu2()) ) {
                        alt61=1;
                    }


                    }
                    break;

                }

                switch (alt61) {
            	case 1 :
            	    // Xmu2.g:7312:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    {
            	    // Xmu2.g:7312:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    // Xmu2.g:7313:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6269);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__CLAUSES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt61 >= 1 ) break loop61;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(61, input);
                        throw eee;
                }
                cnt61++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1361]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1362]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1363]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1364]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1365]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1366]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1367]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1368]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1369]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1370]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1371]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1372]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1373]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1374]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1375]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1376]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1377]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1378]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1379]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"
    // Xmu2.g:7359:1: parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement returns [edu.ustb.sei.mde.xmu2.statement.SwitchStatement element = null] : a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.SwitchStatement parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.SwitchStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.statement.CaseClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xmu2.g:7362:2: (a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' )
            // Xmu2.g:7363:2: a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}'
            {
            a0=(Token)match(input,63,FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6310); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1380]);
            	}

            a1=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6324); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1381]);
            	}

            // Xmu2.g:7391:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:7392:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6342);
            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1382]);
            	}

            a3=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6360); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1383]);
            	}

            a4=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6374); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1384]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1385]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1386]);
            	}

            // Xmu2.g:7447:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+
            int cnt62=0;
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==41||LA62_0==58) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // Xmu2.g:7448:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    {
            	    // Xmu2.g:7448:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    // Xmu2.g:7449:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6397);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_CaseClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__CASES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt62 >= 1 ) break loop62;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(62, input);
                        throw eee;
                }
                cnt62++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1387]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1388]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1389]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1390]);
            	}

            a6=(Token)match(input,72,FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6423); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1391]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1392]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1393]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1394]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1395]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1396]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1397]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1398]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1399]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1400]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1401]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1402]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1403]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1404]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1405]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1406]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1407]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1408]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1409]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"
    // Xmu2.g:7512:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause returns [edu.ustb.sei.mde.xmu2.statement.UpdateClause element = null] : ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateClause parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xmu2.g:7515:2: ( ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7516:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            // Xmu2.g:7516:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) )
            // Xmu2.g:7517:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            {
            // Xmu2.g:7517:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            int alt63=4;
            switch ( input.LA(1) ) {
            case 53:
                {
                alt63=1;
                }
                break;
            case 65:
                {
                alt63=2;
                }
                break;
            case 66:
                {
                alt63=3;
                }
                break;
            case 42:
                {
                alt63=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;

            }

            switch (alt63) {
                case 1 :
                    // Xmu2.g:7518:4: a0= 'match'
                    {
                    a0=(Token)match(input,53,FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6461); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.MATCH_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:7531:8: a1= 'unmatchs'
                    {
                    a1=(Token)match(input,65,FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6476); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:7544:8: a2= 'unmatchv'
                    {
                    a2=(Token)match(input,66,FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6491); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHV_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:7557:8: a3= 'default'
                    {
                    a3=(Token)match(input,42,FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6506); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.DEFAULT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1410]);
            	}

            a6=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6527); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1411]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1412]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1413]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1414]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1415]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1416]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1417]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1418]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1419]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1420]);
            	}

            // Xmu2.g:7600:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7601:3: a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6545);
            a7_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_2, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1421]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1422]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1423]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1424]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1425]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1426]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1427]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1428]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1429]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1430]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1431]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1432]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1433]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1434]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1435]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1436]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1437]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1438]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1439]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"
    // Xmu2.g:7646:1: parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause returns [edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.PatternCaseClause parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xmu2.g:7649:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7650:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6578); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1440]);
            	}

            // Xmu2.g:7664:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7665:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6596);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__CONDITION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1441]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6614); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1442]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1443]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1444]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1445]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1446]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1447]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1448]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1449]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1450]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1451]);
            	}

            // Xmu2.g:7713:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7714:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6632);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1452]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1453]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1454]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1455]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"
    // Xmu2.g:7744:1: parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause returns [edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xmu2.g:7747:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7748:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6665); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1456]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1457]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1458]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1459]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1460]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1461]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1462]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1463]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1464]);
            	}

            // Xmu2.g:7770:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt64=6;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA64_1 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt64=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA64_2 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred149_Xmu2()) ) {
                    alt64=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA64_3 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA64_4 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA64_5 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA64_6 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA64_7 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA64_8 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA64_9 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA64_10 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA64_11 = input.LA(2);

                if ( (synpred146_Xmu2()) ) {
                    alt64=1;
                }
                else if ( (synpred147_Xmu2()) ) {
                    alt64=2;
                }
                else if ( (synpred148_Xmu2()) ) {
                    alt64=3;
                }
                else if ( (synpred150_Xmu2()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;

            }

            switch (alt64) {
                case 1 :
                    // Xmu2.g:7771:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6683);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:7790:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6697);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:7809:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6711);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:7828:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6725);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:7847:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6739);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:7866:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6753);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1465]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6771); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1466]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1467]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1468]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1469]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1470]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1471]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1472]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1473]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1474]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1475]);
            	}

            // Xmu2.g:7914:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7915:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6789);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1476]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1477]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1478]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1479]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"
    // Xmu2.g:7945:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xmu2.g:7948:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) )
            // Xmu2.g:7949:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6822); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteNodeStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1480]);
            	}

            // Xmu2.g:7963:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:7964:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6840);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_NODE_STATEMENT__NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1481]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1482]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1483]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1484]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1485]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1486]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1487]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1488]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1489]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1490]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1491]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1492]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1493]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1494]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1495]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1496]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1497]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1498]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1499]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"
    // Xmu2.g:8009:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xmu2.g:8012:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:8013:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6873); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1500]);
            	}

            // Xmu2.g:8027:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:8028:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6891);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1501]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6909); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1502]);
            	}

            // Xmu2.g:8067:2: (a3= NAME )
            // Xmu2.g:8068:3: a3= NAME
            {
            a3=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6927); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            				startIncompleteElement(element);
            			}
            			if (a3 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_3, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1503]);
            	}

            a4=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6948); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1504]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1505]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1506]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1507]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1508]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1509]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1510]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1511]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1512]);
            	}

            // Xmu2.g:8125:2: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt65=3;
            switch ( input.LA(1) ) {
            case 22:
            case 55:
                {
                alt65=1;
                }
                break;
            case NAME:
                {
                int LA65_3 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA65_4 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA65_5 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA65_6 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA65_7 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA65_8 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA65_9 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA65_10 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA65_11 = input.LA(2);

                if ( (synpred152_Xmu2()) ) {
                    alt65=2;
                }
                else if ( (true) ) {
                    alt65=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;

            }

            switch (alt65) {
                case 1 :
                    // Xmu2.g:8126:3: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6966);
                    a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_0 != null) {
                    				if (a5_0 != null) {
                    					Object value = a5_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_0, true);
                    				copyLocalizationInfos(a5_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:8145:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6980);
                    a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_1 != null) {
                    				if (a5_1 != null) {
                    					Object value = a5_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_1, true);
                    				copyLocalizationInfos(a5_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:8164:6: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6994);
                    a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_2 != null) {
                    				if (a5_2 != null) {
                    					Object value = a5_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_5, a5_2, true);
                    				copyLocalizationInfos(a5_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1513]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1514]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1515]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1516]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1517]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1518]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1519]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1520]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1521]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1522]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1523]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1524]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1525]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1526]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1527]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1528]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1529]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1530]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1531]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"
    // Xmu2.g:8209:1: parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement returns [edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element = null] : a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) ;
    public final edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xmu2.g:8212:2: (a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) )
            // Xmu2.g:8213:2: a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7027); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getEnforcePatternStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1532]);
            	}

            // Xmu2.g:8227:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:8228:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7045);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ENFORCE_PATTERN_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1533]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1534]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1535]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1536]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1537]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1538]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1539]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1540]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1541]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1542]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1543]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1544]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1545]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1546]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1547]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1548]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1549]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1550]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1551]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"
    // Xmu2.g:8273:1: parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement returns [edu.ustb.sei.mde.xmu2.statement.ForEachStatement element = null] : a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ForEachStatement parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ForEachStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xmu2.g:8276:2: (a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:8277:2: a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7078); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1552]);
            	}

            // Xmu2.g:8291:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:8292:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7096);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1553]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7114); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1554]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1555]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1556]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1557]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1558]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1559]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1560]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1561]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1562]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1563]);
            	}

            // Xmu2.g:8340:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:8341:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7132);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1564]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1565]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1566]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1567]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1568]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1569]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1570]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1571]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1572]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1573]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1574]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1575]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1576]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1577]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1578]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1579]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1580]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1581]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1582]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"
    // Xmu2.g:8386:1: parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement returns [edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element = null] : (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' ;
    public final edu.ustb.sei.mde.xmu2.statement.RuleCallStatement parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xmu2.g:8389:2: ( (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' )
            // Xmu2.g:8390:2: (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')'
            {
            // Xmu2.g:8390:2: (a0= NAME )
            // Xmu2.g:8391:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7169); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.AbstractRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.statement.RuleCallStatement, edu.ustb.sei.mde.xmu2.AbstractRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getRuleCallStatementRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1583]);
            	}

            a1=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7190); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1584]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1585]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1586]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1587]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1588]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1589]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1590]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1591]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1592]);
            	}

            // Xmu2.g:8452:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==BOOLEAN||(LA69_0 >= NAME && LA69_0 <= QUOTED_39_39_92)||LA69_0==TYPE||LA69_0==16||LA69_0==56||LA69_0==64) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // Xmu2.g:8453:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:8453:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:8454:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:8454:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt66=2;
                    switch ( input.LA(1) ) {
                    case NAME:
                        {
                        int LA66_1 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 56:
                        {
                        int LA66_2 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 64:
                        {
                        int LA66_3 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA66_4 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA66_5 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA66_6 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA66_7 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA66_8 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA66_9 = input.LA(2);

                        if ( (synpred153_Xmu2()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 66, 0, input);

                        throw nvae;

                    }

                    switch (alt66) {
                        case 1 :
                            // Xmu2.g:8455:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7219);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:8474:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7239);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_0, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1593]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1594]);
                    			}

                    // Xmu2.g:8500:4: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==21) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // Xmu2.g:8501:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:8501:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:8502:6: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7280); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1595]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1596]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1597]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1598]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1599]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1600]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1601]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1602]);
                    	    					}

                    	    // Xmu2.g:8523:6: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt67=2;
                    	    switch ( input.LA(1) ) {
                    	    case NAME:
                    	        {
                    	        int LA67_1 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 56:
                    	        {
                    	        int LA67_2 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 64:
                    	        {
                    	        int LA67_3 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA67_4 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA67_5 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA67_6 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA67_7 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA67_8 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 16:
                    	        {
                    	        int LA67_9 = input.LA(2);

                    	        if ( (synpred154_Xmu2()) ) {
                    	            alt67=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt67=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 67, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 67, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt67) {
                    	        case 1 :
                    	            // Xmu2.g:8524:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7314);
                    	            a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_0 != null) {
                    	            								if (a4_0 != null) {
                    	            									Object value = a4_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	            								copyLocalizationInfos(a4_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:8543:14: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7340);
                    	            a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_1 != null) {
                    	            								if (a4_1 != null) {
                    	            									Object value = a4_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_2_0_0_1_0_0_1, a4_1, true);
                    	            								copyLocalizationInfos(a4_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1603]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1604]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1605]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1606]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1607]);
            	}

            a5=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7414); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1608]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1609]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1610]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1611]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1612]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1613]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1614]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1615]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1616]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1617]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1618]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1619]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1620]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1621]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1622]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1623]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1624]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1625]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1626]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Skip"
    // Xmu2.g:8618:1: parse_edu_ustb_sei_mde_xmu2_statement_Skip returns [edu.ustb.sei.mde.xmu2.statement.Skip element = null] : a0= 'skip' ;
    public final edu.ustb.sei.mde.xmu2.statement.Skip parse_edu_ustb_sei_mde_xmu2_statement_Skip() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Skip element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xmu2.g:8621:2: (a0= 'skip' )
            // Xmu2.g:8622:2: a0= 'skip'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7443); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSkip();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_41_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1627]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1628]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1629]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1630]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1631]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1632]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1633]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1634]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1635]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1636]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1637]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1638]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1639]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1640]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1641]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1642]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1643]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1644]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1645]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Skip"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"
    // Xmu2.g:8656:1: parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause returns [edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element = null] : a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xmu2.g:8659:2: (a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:8660:2: a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,58,FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7472); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1646]);
            	}

            a1=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7486); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1647]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1648]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1649]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1650]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1651]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1652]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1653]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1654]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1655]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1656]);
            	}

            // Xmu2.g:8697:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:8698:3: a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7504);
            a2_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DEFAULT_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_42_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1657]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1658]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1659]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1660]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement"
    // Xmu2.g:8728:1: parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement returns [edu.ustb.sei.mde.xmu2.statement.AssignStatement element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.AssignStatement parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.AssignStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xmu2.g:8731:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:8732:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a1= '::=' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:8732:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:8733:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7541);
            a0_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__UPDATED_VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1661]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7559); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1662]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1663]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1664]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1665]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1666]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1667]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1668]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1669]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getAssignStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1670]);
            	}

            // Xmu2.g:8780:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt70=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA70_1 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt70=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA70_2 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred162_Xmu2()) ) {
                    alt70=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA70_3 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 3, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA70_4 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 4, input);

                    throw nvae;

                }
                }
                break;
            case 64:
                {
                int LA70_5 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA70_6 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA70_7 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA70_8 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA70_9 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA70_10 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA70_11 = input.LA(2);

                if ( (synpred157_Xmu2()) ) {
                    alt70=1;
                }
                else if ( (synpred158_Xmu2()) ) {
                    alt70=2;
                }
                else if ( (synpred159_Xmu2()) ) {
                    alt70=3;
                }
                else if ( (synpred160_Xmu2()) ) {
                    alt70=4;
                }
                else if ( (synpred161_Xmu2()) ) {
                    alt70=5;
                }
                else if ( (synpred163_Xmu2()) ) {
                    alt70=7;
                }
                else if ( (true) ) {
                    alt70=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;

            }

            switch (alt70) {
                case 1 :
                    // Xmu2.g:8781:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7577);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_0 != null) {
                    				if (a2_0 != null) {
                    					Object value = a2_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_0, true);
                    				copyLocalizationInfos(a2_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:8800:6: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7591);
                    a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_1 != null) {
                    				if (a2_1 != null) {
                    					Object value = a2_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_1, true);
                    				copyLocalizationInfos(a2_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:8819:6: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7605);
                    a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_2 != null) {
                    				if (a2_2 != null) {
                    					Object value = a2_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_2, true);
                    				copyLocalizationInfos(a2_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:8838:6: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7619);
                    a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_3 != null) {
                    				if (a2_3 != null) {
                    					Object value = a2_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_3, true);
                    				copyLocalizationInfos(a2_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:8857:6: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7633);
                    a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_4 != null) {
                    				if (a2_4 != null) {
                    					Object value = a2_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_4, true);
                    				copyLocalizationInfos(a2_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:8876:6: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7647);
                    a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_5 != null) {
                    				if (a2_5 != null) {
                    					Object value = a2_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_5, true);
                    				copyLocalizationInfos(a2_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:8895:6: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7661);
                    a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_6 != null) {
                    				if (a2_6 != null) {
                    					Object value = a2_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_6, true);
                    				copyLocalizationInfos(a2_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:8914:6: a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7675);
                    a2_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createAssignStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_7 != null) {
                    				if (a2_7 != null) {
                    					Object value = a2_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ASSIGN_STATEMENT__VALUE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_43_0_0_2, a2_7, true);
                    				copyLocalizationInfos(a2_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1671]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1672]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1673]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1674]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1675]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1676]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1677]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1678]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1679]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1680]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getArithmeticRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1681]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1682]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1683]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1684]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1685]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1686]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1687]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1688]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1689]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_AbstractRule"
    // Xmu2.g:8959:1: parse_edu_ustb_sei_mde_xmu2_AbstractRule returns [edu.ustb.sei.mde.xmu2.AbstractRule element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_ModelRule |c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule );
    public final edu.ustb.sei.mde.xmu2.AbstractRule parse_edu_ustb_sei_mde_xmu2_AbstractRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.AbstractRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.ModelRule c0 =null;

        edu.ustb.sei.mde.xmu2.ArithmeticRule c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xmu2.g:8960:2: (c0= parse_edu_ustb_sei_mde_xmu2_ModelRule |c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==59) ) {
                alt71=1;
            }
            else if ( (LA71_0==50) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }
            switch (alt71) {
                case 1 :
                    // Xmu2.g:8961:2: c0= parse_edu_ustb_sei_mde_xmu2_ModelRule
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7704);
                    c0=parse_edu_ustb_sei_mde_xmu2_ModelRule();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:8962:4: c1= parse_edu_ustb_sei_mde_xmu2_ArithmeticRule
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7714);
                    c1=parse_edu_ustb_sei_mde_xmu2_ArithmeticRule();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_AbstractRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Statement"
    // Xmu2.g:8966:1: parse_edu_ustb_sei_mde_xmu2_statement_Statement returns [edu.ustb.sei.mde.xmu2.statement.Statement element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip |c9= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement );
    public final edu.ustb.sei.mde.xmu2.statement.Statement parse_edu_ustb_sei_mde_xmu2_statement_Statement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Statement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.BlockStatement c0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateStatement c1 =null;

        edu.ustb.sei.mde.xmu2.statement.SwitchStatement c2 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement c3 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement c4 =null;

        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement c5 =null;

        edu.ustb.sei.mde.xmu2.statement.ForEachStatement c6 =null;

        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement c7 =null;

        edu.ustb.sei.mde.xmu2.statement.Skip c8 =null;

        edu.ustb.sei.mde.xmu2.statement.AssignStatement c9 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xmu2.g:8967:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip |c9= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement )
            int alt72=10;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt72=1;
                }
                break;
            case 67:
                {
                alt72=2;
                }
                break;
            case 63:
                {
                alt72=3;
                }
                break;
            case 43:
                {
                int LA72_4 = input.LA(2);

                if ( (LA72_4==NAME) ) {
                    int LA72_9 = input.LA(3);

                    if ( (LA72_9==EOF||LA72_9==NAME||LA72_9==29||(LA72_9 >= 41 && LA72_9 <= 44)||LA72_9==49||LA72_9==53||LA72_9==58||LA72_9==61||LA72_9==63||(LA72_9 >= 65 && LA72_9 <= 67)||LA72_9==70||LA72_9==72) ) {
                        alt72=4;
                    }
                    else if ( (LA72_9==24) ) {
                        alt72=5;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 9, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 4, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                alt72=6;
                }
                break;
            case 49:
                {
                alt72=7;
                }
                break;
            case NAME:
                {
                int LA72_7 = input.LA(2);

                if ( (LA72_7==16) ) {
                    alt72=8;
                }
                else if ( (LA72_7==28) ) {
                    alt72=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 7, input);

                    throw nvae;

                }
                }
                break;
            case 61:
                {
                alt72=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;

            }

            switch (alt72) {
                case 1 :
                    // Xmu2.g:8968:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7735);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:8969:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7745);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:8970:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7755);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:8971:4: c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7765);
                    c3=parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:8972:4: c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7775);
                    c4=parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:8973:4: c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7785);
                    c5=parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:8974:4: c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7795);
                    c6=parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:8975:4: c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7805);
                    c7=parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xmu2.g:8976:4: c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7815);
                    c8=parse_edu_ustb_sei_mde_xmu2_statement_Skip();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xmu2.g:8977:4: c9= parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7825);
                    c9=parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Statement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"
    // Xmu2.g:8981:1: parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression returns [edu.ustb.sei.mde.xmu2.expression.AtomicExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression );
    public final edu.ustb.sei.mde.xmu2.expression.AtomicExpression parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AtomicExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c5 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c6 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xmu2.g:8982:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt73=8;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt73=1;
                }
                break;
            case 56:
            case 64:
                {
                alt73=2;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt73=3;
                }
                break;
            case NUMBER:
                {
                alt73=4;
                }
                break;
            case BOOLEAN:
                {
                alt73=5;
                }
                break;
            case TYPE:
                {
                alt73=6;
                }
                break;
            case OBJ_URI:
                {
                alt73=7;
                }
                break;
            case 16:
                {
                alt73=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;

            }

            switch (alt73) {
                case 1 :
                    // Xmu2.g:8983:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7846);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:8984:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7856);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:8985:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7866);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:8986:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7876);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:8987:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7886);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:8988:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7896);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:8989:4: c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7906);
                    c6=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:8990:4: c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7916);
                    c7=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"
    // Xmu2.g:8994:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PatternExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression );
    public final edu.ustb.sei.mde.xmu2.pattern.PatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xmu2.g:8995:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==NAME) ) {
                int LA74_1 = input.LA(2);

                if ( (synpred181_Xmu2()) ) {
                    alt74=1;
                }
                else if ( (true) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;

            }
            switch (alt74) {
                case 1 :
                    // Xmu2.g:8996:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7937);
                    c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:8997:4: c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7947);
                    c1=parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"
    // Xmu2.g:9001:1: parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression returns [edu.ustb.sei.mde.xmu2.expression.ConstantExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression );
    public final edu.ustb.sei.mde.xmu2.expression.ConstantExpression parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ConstantExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c5 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xmu2.g:9002:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression )
            int alt75=6;
            switch ( input.LA(1) ) {
            case 56:
            case 64:
                {
                alt75=1;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt75=2;
                }
                break;
            case NUMBER:
                {
                alt75=3;
                }
                break;
            case BOOLEAN:
                {
                alt75=4;
                }
                break;
            case TYPE:
                {
                alt75=5;
                }
                break;
            case OBJ_URI:
                {
                alt75=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }

            switch (alt75) {
                case 1 :
                    // Xmu2.g:9003:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7968);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9004:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7978);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9005:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7988);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:9006:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7998);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:9007:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8008);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:9008:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8018);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_Path"
    // Xmu2.g:9012:1: parse_edu_ustb_sei_mde_xmu2_expression_Path returns [edu.ustb.sei.mde.xmu2.expression.Path element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath );
    public final edu.ustb.sei.mde.xmu2.expression.Path parse_edu_ustb_sei_mde_xmu2_expression_Path() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.Path element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.LoopPath c0 =null;

        edu.ustb.sei.mde.xmu2.expression.FeaturePath c1 =null;

        edu.ustb.sei.mde.xmu2.expression.OperationPath c2 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xmu2.g:9013:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
            int alt76=4;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==23) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==46||LA76_1==48||LA76_1==60) ) {
                    alt76=1;
                }
                else if ( (LA76_1==39||LA76_1==47||LA76_1==52) ) {
                    alt76=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA76_0==24) ) {
                int LA76_2 = input.LA(2);

                if ( (LA76_2==NAME) ) {
                    int LA76_5 = input.LA(3);

                    if ( (LA76_5==EOF||LA76_5==NAME||(LA76_5 >= 17 && LA76_5 <= 25)||(LA76_5 >= 29 && LA76_5 <= 34)||(LA76_5 >= 37 && LA76_5 <= 38)||(LA76_5 >= 41 && LA76_5 <= 44)||LA76_5==49||LA76_5==53||(LA76_5 >= 57 && LA76_5 <= 58)||LA76_5==61||LA76_5==63||(LA76_5 >= 65 && LA76_5 <= 67)||LA76_5==70||LA76_5==72) ) {
                        alt76=2;
                    }
                    else if ( (LA76_5==16) ) {
                        alt76=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 76, 5, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;

            }
            switch (alt76) {
                case 1 :
                    // Xmu2.g:9014:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8039);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9015:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8049);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9016:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8059);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:9017:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8069);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_Path"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"
    // Xmu2.g:9021:1: parse_edu_ustb_sei_mde_xmu2_statement_CaseClause returns [edu.ustb.sei.mde.xmu2.statement.CaseClause element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause );
    public final edu.ustb.sei.mde.xmu2.statement.CaseClause parse_edu_ustb_sei_mde_xmu2_statement_CaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.CaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause c0 =null;

        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause c1 =null;

        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Xmu2.g:9022:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause )
            int alt77=3;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==41) ) {
                int LA77_1 = input.LA(2);

                if ( (LA77_1==NAME) ) {
                    int LA77_3 = input.LA(3);

                    if ( (LA77_3==26) ) {
                        alt77=1;
                    }
                    else if ( ((LA77_3 >= 18 && LA77_3 <= 20)||(LA77_3 >= 22 && LA77_3 <= 25)||(LA77_3 >= 30 && LA77_3 <= 34)||LA77_3==38||LA77_3==57) ) {
                        alt77=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 77, 3, input);

                        throw nvae;

                    }
                }
                else if ( (LA77_1==BOOLEAN||(LA77_1 >= NUMBER && LA77_1 <= QUOTED_39_39_92)||LA77_1==TYPE||LA77_1==16||LA77_1==22||(LA77_1 >= 55 && LA77_1 <= 56)||LA77_1==64) ) {
                    alt77=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA77_0==58) ) {
                alt77=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;

            }
            switch (alt77) {
                case 1 :
                    // Xmu2.g:9023:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8090);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:9024:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8100);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:9025:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8110);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"

    // $ANTLR start synpred16_Xmu2
    public final void synpred16_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;


        // Xmu2.g:2069:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:2069:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred16_Xmu21670);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Xmu2

    // $ANTLR start synpred17_Xmu2
    public final void synpred17_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;


        // Xmu2.g:2088:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:2088:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred17_Xmu21690);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Xmu2

    // $ANTLR start synpred18_Xmu2
    public final void synpred18_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;


        // Xmu2.g:2107:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:2107:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred18_Xmu21710);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Xmu2

    // $ANTLR start synpred19_Xmu2
    public final void synpred19_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;


        // Xmu2.g:2126:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:2126:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred19_Xmu21730);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Xmu2

    // $ANTLR start synpred20_Xmu2
    public final void synpred20_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;


        // Xmu2.g:2145:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:2145:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred20_Xmu21750);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Xmu2

    // $ANTLR start synpred21_Xmu2
    public final void synpred21_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;


        // Xmu2.g:2164:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:2164:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred21_Xmu21770);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Xmu2

    // $ANTLR start synpred22_Xmu2
    public final void synpred22_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;


        // Xmu2.g:2183:10: (a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:2183:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred22_Xmu21790);
        a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Xmu2

    // $ANTLR start synpred26_Xmu2
    public final void synpred26_Xmu2_fragment() throws RecognitionException {
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a4_0 =null;


        // Xmu2.g:2342:3: ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )
        // Xmu2.g:2342:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
        {
        // Xmu2.g:2342:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
        // Xmu2.g:2343:4: a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}'
        {
        a1=(Token)match(input,70,FOLLOW_70_in_synpred26_Xmu21917); if (state.failed) return ;

        // Xmu2.g:2359:4: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
        int alt83=2;
        int LA83_0 = input.LA(1);

        if ( (LA83_0==NAME) ) {
            alt83=1;
        }
        switch (alt83) {
            case 1 :
                // Xmu2.g:2360:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                {
                // Xmu2.g:2360:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                // Xmu2.g:2361:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                {
                // Xmu2.g:2361:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                // Xmu2.g:2362:7: a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                {
                pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu21958);
                a2_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                // Xmu2.g:2388:6: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                loop82:
                do {
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==21) ) {
                        alt82=1;
                    }


                    switch (alt82) {
                	case 1 :
                	    // Xmu2.g:2389:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    {
                	    // Xmu2.g:2389:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                	    // Xmu2.g:2390:8: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    {
                	    a3=(Token)match(input,21,FOLLOW_21_in_synpred26_Xmu22013); if (state.failed) return ;

                	    // Xmu2.g:2405:8: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                	    // Xmu2.g:2406:9: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                	    {
                	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu22055);
                	    a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop82;
                    }
                } while (true);


                }


                }
                break;

        }


        a5=(Token)match(input,72,FOLLOW_72_in_synpred26_Xmu22159); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred26_Xmu2

    // $ANTLR start synpred33_Xmu2
    public final void synpred33_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;


        // Xmu2.g:2923:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:2923:3: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred33_Xmu22610);
        a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred33_Xmu2

    // $ANTLR start synpred34_Xmu2
    public final void synpred34_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;


        // Xmu2.g:2947:6: (a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:2947:6: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred34_Xmu22624);
        a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred34_Xmu2

    // $ANTLR start synpred35_Xmu2
    public final void synpred35_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;


        // Xmu2.g:2971:6: (a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:2971:6: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred35_Xmu22638);
        a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred35_Xmu2

    // $ANTLR start synpred36_Xmu2
    public final void synpred36_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;


        // Xmu2.g:2995:6: (a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:2995:6: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred36_Xmu22652);
        a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred36_Xmu2

    // $ANTLR start synpred37_Xmu2
    public final void synpred37_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;


        // Xmu2.g:3019:6: (a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3019:6: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred37_Xmu22666);
        a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred37_Xmu2

    // $ANTLR start synpred38_Xmu2
    public final void synpred38_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;


        // Xmu2.g:3043:6: (a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3043:6: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred38_Xmu22680);
        a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred38_Xmu2

    // $ANTLR start synpred39_Xmu2
    public final void synpred39_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;


        // Xmu2.g:3067:6: (a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3067:6: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred39_Xmu22694);
        a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Xmu2

    // $ANTLR start synpred42_Xmu2
    public final void synpred42_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;


        // Xmu2.g:3253:3: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3253:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred42_Xmu22869);
        a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred42_Xmu2

    // $ANTLR start synpred43_Xmu2
    public final void synpred43_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;


        // Xmu2.g:3272:6: (a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3272:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred43_Xmu22883);
        a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Xmu2

    // $ANTLR start synpred44_Xmu2
    public final void synpred44_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;


        // Xmu2.g:3291:6: (a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3291:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred44_Xmu22897);
        a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred44_Xmu2

    // $ANTLR start synpred45_Xmu2
    public final void synpred45_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;


        // Xmu2.g:3310:6: (a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3310:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred45_Xmu22911);
        a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Xmu2

    // $ANTLR start synpred46_Xmu2
    public final void synpred46_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;


        // Xmu2.g:3329:6: (a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3329:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred46_Xmu22925);
        a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Xmu2

    // $ANTLR start synpred47_Xmu2
    public final void synpred47_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;


        // Xmu2.g:3348:6: (a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3348:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred47_Xmu22939);
        a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Xmu2

    // $ANTLR start synpred48_Xmu2
    public final void synpred48_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;


        // Xmu2.g:3367:6: (a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3367:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred48_Xmu22953);
        a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred48_Xmu2

    // $ANTLR start synpred49_Xmu2
    public final void synpred49_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;


        // Xmu2.g:3639:5: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3639:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred49_Xmu23136);
        a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred49_Xmu2

    // $ANTLR start synpred50_Xmu2
    public final void synpred50_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;


        // Xmu2.g:3658:10: (a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3658:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred50_Xmu23156);
        a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Xmu2

    // $ANTLR start synpred51_Xmu2
    public final void synpred51_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;


        // Xmu2.g:3677:10: (a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3677:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred51_Xmu23176);
        a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred51_Xmu2

    // $ANTLR start synpred52_Xmu2
    public final void synpred52_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;


        // Xmu2.g:3696:10: (a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3696:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred52_Xmu23196);
        a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred52_Xmu2

    // $ANTLR start synpred53_Xmu2
    public final void synpred53_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;


        // Xmu2.g:3715:10: (a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3715:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred53_Xmu23216);
        a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred53_Xmu2

    // $ANTLR start synpred54_Xmu2
    public final void synpred54_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;


        // Xmu2.g:3734:10: (a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3734:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred54_Xmu23236);
        a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred54_Xmu2

    // $ANTLR start synpred55_Xmu2
    public final void synpred55_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;


        // Xmu2.g:3753:10: (a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3753:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred55_Xmu23256);
        a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred55_Xmu2

    // $ANTLR start synpred56_Xmu2
    public final void synpred56_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;


        // Xmu2.g:3823:7: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3823:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred56_Xmu23351);
        a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred56_Xmu2

    // $ANTLR start synpred57_Xmu2
    public final void synpred57_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;


        // Xmu2.g:3842:14: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3842:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred57_Xmu23377);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred57_Xmu2

    // $ANTLR start synpred58_Xmu2
    public final void synpred58_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;


        // Xmu2.g:3861:14: (a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3861:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred58_Xmu23403);
        a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred58_Xmu2

    // $ANTLR start synpred59_Xmu2
    public final void synpred59_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;


        // Xmu2.g:3880:14: (a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3880:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred59_Xmu23429);
        a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred59_Xmu2

    // $ANTLR start synpred60_Xmu2
    public final void synpred60_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;


        // Xmu2.g:3899:14: (a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3899:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred60_Xmu23455);
        a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred60_Xmu2

    // $ANTLR start synpred61_Xmu2
    public final void synpred61_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;


        // Xmu2.g:3918:14: (a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3918:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred61_Xmu23481);
        a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred61_Xmu2

    // $ANTLR start synpred62_Xmu2
    public final void synpred62_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;


        // Xmu2.g:3937:14: (a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3937:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred62_Xmu23507);
        a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred62_Xmu2

    // $ANTLR start synpred67_Xmu2
    public final void synpred67_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;


        // Xmu2.g:4142:4: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:4142:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred67_Xmu23733);
        a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred67_Xmu2

    // $ANTLR start synpred68_Xmu2
    public final void synpred68_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;


        // Xmu2.g:4161:8: (a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:4161:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred68_Xmu23750);
        a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred68_Xmu2

    // $ANTLR start synpred69_Xmu2
    public final void synpred69_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;


        // Xmu2.g:4180:8: (a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:4180:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred69_Xmu23767);
        a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred69_Xmu2

    // $ANTLR start synpred70_Xmu2
    public final void synpred70_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;


        // Xmu2.g:4199:8: (a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:4199:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred70_Xmu23784);
        a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred70_Xmu2

    // $ANTLR start synpred71_Xmu2
    public final void synpred71_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;


        // Xmu2.g:4218:8: (a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:4218:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred71_Xmu23801);
        a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred71_Xmu2

    // $ANTLR start synpred72_Xmu2
    public final void synpred72_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;


        // Xmu2.g:4237:8: (a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:4237:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred72_Xmu23818);
        a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred72_Xmu2

    // $ANTLR start synpred73_Xmu2
    public final void synpred73_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;


        // Xmu2.g:4256:8: (a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4256:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred73_Xmu23835);
        a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred73_Xmu2

    // $ANTLR start synpred79_Xmu2
    public final void synpred79_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:5142:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:5142:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred79_Xmu24364);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred79_Xmu2

    // $ANTLR start synpred80_Xmu2
    public final void synpred80_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:5161:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:5161:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred80_Xmu24378);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred80_Xmu2

    // $ANTLR start synpred81_Xmu2
    public final void synpred81_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:5180:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:5180:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred81_Xmu24392);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred81_Xmu2

    // $ANTLR start synpred82_Xmu2
    public final void synpred82_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;


        // Xmu2.g:5199:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:5199:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred82_Xmu24406);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred82_Xmu2

    // $ANTLR start synpred83_Xmu2
    public final void synpred83_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;


        // Xmu2.g:5218:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5218:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred83_Xmu24420);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred83_Xmu2

    // $ANTLR start synpred84_Xmu2
    public final void synpred84_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;


        // Xmu2.g:5237:6: (a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5237:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred84_Xmu24434);
        a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred84_Xmu2

    // $ANTLR start synpred85_Xmu2
    public final void synpred85_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;


        // Xmu2.g:5256:6: (a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5256:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred85_Xmu24448);
        a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred85_Xmu2

    // $ANTLR start synpred87_Xmu2
    public final void synpred87_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:5401:3: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5401:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred87_Xmu24558);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred87_Xmu2

    // $ANTLR start synpred89_Xmu2
    public final void synpred89_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;


        // Xmu2.g:5503:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5503:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred89_Xmu24623);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred89_Xmu2

    // $ANTLR start synpred92_Xmu2
    public final void synpred92_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:5612:10: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5612:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred92_Xmu24753);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred92_Xmu2

    // $ANTLR start synpred94_Xmu2
    public final void synpred94_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;


        // Xmu2.g:5732:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5732:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred94_Xmu24833);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred94_Xmu2

    // $ANTLR start synpred95_Xmu2
    public final void synpred95_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;


        // Xmu2.g:5751:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5751:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred95_Xmu24847);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred95_Xmu2

    // $ANTLR start synpred96_Xmu2
    public final void synpred96_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;


        // Xmu2.g:5770:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5770:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred96_Xmu24861);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred96_Xmu2

    // $ANTLR start synpred99_Xmu2
    public final void synpred99_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;


        // Xmu2.g:5873:5: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5873:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred99_Xmu24990);
        a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred99_Xmu2

    // $ANTLR start synpred100_Xmu2
    public final void synpred100_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;


        // Xmu2.g:5892:10: (a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5892:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred100_Xmu25010);
        a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred100_Xmu2

    // $ANTLR start synpred101_Xmu2
    public final void synpred101_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;


        // Xmu2.g:5911:10: (a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5911:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred101_Xmu25030);
        a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred101_Xmu2

    // $ANTLR start synpred103_Xmu2
    public final void synpred103_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;


        // Xmu2.g:6029:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6029:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred103_Xmu25110);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred103_Xmu2

    // $ANTLR start synpred104_Xmu2
    public final void synpred104_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;


        // Xmu2.g:6048:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6048:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred104_Xmu25124);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred104_Xmu2

    // $ANTLR start synpred105_Xmu2
    public final void synpred105_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;


        // Xmu2.g:6067:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6067:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred105_Xmu25138);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred105_Xmu2

    // $ANTLR start synpred106_Xmu2
    public final void synpred106_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;


        // Xmu2.g:6086:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6086:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred106_Xmu25152);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred106_Xmu2

    // $ANTLR start synpred111_Xmu2
    public final void synpred111_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;


        // Xmu2.g:6213:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6213:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred111_Xmu25278);
        a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred111_Xmu2

    // $ANTLR start synpred112_Xmu2
    public final void synpred112_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;


        // Xmu2.g:6232:6: (a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6232:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred112_Xmu25292);
        a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred112_Xmu2

    // $ANTLR start synpred113_Xmu2
    public final void synpred113_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;


        // Xmu2.g:6251:6: (a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6251:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred113_Xmu25306);
        a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred113_Xmu2

    // $ANTLR start synpred114_Xmu2
    public final void synpred114_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;


        // Xmu2.g:6270:6: (a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6270:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred114_Xmu25320);
        a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred114_Xmu2

    // $ANTLR start synpred115_Xmu2
    public final void synpred115_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;


        // Xmu2.g:6350:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6350:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred115_Xmu25371);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred115_Xmu2

    // $ANTLR start synpred116_Xmu2
    public final void synpred116_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;


        // Xmu2.g:6369:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6369:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred116_Xmu25385);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred116_Xmu2

    // $ANTLR start synpred117_Xmu2
    public final void synpred117_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;


        // Xmu2.g:6388:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6388:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred117_Xmu25399);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred117_Xmu2

    // $ANTLR start synpred118_Xmu2
    public final void synpred118_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;


        // Xmu2.g:6407:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6407:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred118_Xmu25413);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred118_Xmu2

    // $ANTLR start synpred119_Xmu2
    public final void synpred119_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;


        // Xmu2.g:6426:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6426:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred119_Xmu25427);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred119_Xmu2

    // $ANTLR start synpred120_Xmu2
    public final void synpred120_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;


        // Xmu2.g:6495:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6495:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred120_Xmu25494);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred120_Xmu2

    // $ANTLR start synpred121_Xmu2
    public final void synpred121_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;


        // Xmu2.g:6514:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6514:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred121_Xmu25514);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred121_Xmu2

    // $ANTLR start synpred122_Xmu2
    public final void synpred122_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;


        // Xmu2.g:6533:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6533:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred122_Xmu25534);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred122_Xmu2

    // $ANTLR start synpred123_Xmu2
    public final void synpred123_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;


        // Xmu2.g:6552:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6552:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred123_Xmu25554);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred123_Xmu2

    // $ANTLR start synpred124_Xmu2
    public final void synpred124_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;


        // Xmu2.g:6571:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6571:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred124_Xmu25574);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred124_Xmu2

    // $ANTLR start synpred126_Xmu2
    public final void synpred126_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;


        // Xmu2.g:6687:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:6687:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred126_Xmu25654);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred126_Xmu2

    // $ANTLR start synpred127_Xmu2
    public final void synpred127_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;


        // Xmu2.g:6706:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6706:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred127_Xmu25668);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred127_Xmu2

    // $ANTLR start synpred128_Xmu2
    public final void synpred128_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;


        // Xmu2.g:6725:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6725:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred128_Xmu25682);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred128_Xmu2

    // $ANTLR start synpred129_Xmu2
    public final void synpred129_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;


        // Xmu2.g:6744:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6744:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred129_Xmu25696);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred129_Xmu2

    // $ANTLR start synpred130_Xmu2
    public final void synpred130_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;


        // Xmu2.g:6763:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6763:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred130_Xmu25710);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xmu2

    // $ANTLR start synpred131_Xmu2
    public final void synpred131_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;


        // Xmu2.g:6782:6: (a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6782:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred131_Xmu25724);
        a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred131_Xmu2

    // $ANTLR start synpred132_Xmu2
    public final void synpred132_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;


        // Xmu2.g:6851:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:6851:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred132_Xmu25791);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred132_Xmu2

    // $ANTLR start synpred133_Xmu2
    public final void synpred133_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;


        // Xmu2.g:6870:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6870:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred133_Xmu25811);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred133_Xmu2

    // $ANTLR start synpred134_Xmu2
    public final void synpred134_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;


        // Xmu2.g:6889:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6889:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred134_Xmu25831);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred134_Xmu2

    // $ANTLR start synpred135_Xmu2
    public final void synpred135_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;


        // Xmu2.g:6908:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6908:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred135_Xmu25851);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred135_Xmu2

    // $ANTLR start synpred136_Xmu2
    public final void synpred136_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;


        // Xmu2.g:6927:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6927:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred136_Xmu25871);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred136_Xmu2

    // $ANTLR start synpred137_Xmu2
    public final void synpred137_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;


        // Xmu2.g:6946:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6946:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred137_Xmu25891);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred137_Xmu2

    // $ANTLR start synpred141_Xmu2
    public final void synpred141_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;


        // Xmu2.g:7312:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )
        // Xmu2.g:7312:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        {
        // Xmu2.g:7312:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        // Xmu2.g:7313:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred141_Xmu26269);
        a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred141_Xmu2

    // $ANTLR start synpred146_Xmu2
    public final void synpred146_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:7771:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:7771:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred146_Xmu26683);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred146_Xmu2

    // $ANTLR start synpred147_Xmu2
    public final void synpred147_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:7790:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:7790:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred147_Xmu26697);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred147_Xmu2

    // $ANTLR start synpred148_Xmu2
    public final void synpred148_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:7809:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:7809:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred148_Xmu26711);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred148_Xmu2

    // $ANTLR start synpred149_Xmu2
    public final void synpred149_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;


        // Xmu2.g:7828:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:7828:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred149_Xmu26725);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred149_Xmu2

    // $ANTLR start synpred150_Xmu2
    public final void synpred150_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;


        // Xmu2.g:7847:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7847:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred150_Xmu26739);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred150_Xmu2

    // $ANTLR start synpred152_Xmu2
    public final void synpred152_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:8145:6: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8145:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred152_Xmu26980);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred152_Xmu2

    // $ANTLR start synpred153_Xmu2
    public final void synpred153_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;


        // Xmu2.g:8455:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8455:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred153_Xmu27219);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred153_Xmu2

    // $ANTLR start synpred154_Xmu2
    public final void synpred154_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:8524:7: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8524:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred154_Xmu27314);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred154_Xmu2

    // $ANTLR start synpred157_Xmu2
    public final void synpred157_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;


        // Xmu2.g:8781:3: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:8781:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred157_Xmu27577);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred157_Xmu2

    // $ANTLR start synpred158_Xmu2
    public final void synpred158_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;


        // Xmu2.g:8800:6: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:8800:6: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred158_Xmu27591);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred158_Xmu2

    // $ANTLR start synpred159_Xmu2
    public final void synpred159_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;


        // Xmu2.g:8819:6: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:8819:6: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred159_Xmu27605);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred159_Xmu2

    // $ANTLR start synpred160_Xmu2
    public final void synpred160_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;


        // Xmu2.g:8838:6: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:8838:6: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred160_Xmu27619);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred160_Xmu2

    // $ANTLR start synpred161_Xmu2
    public final void synpred161_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;


        // Xmu2.g:8857:6: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:8857:6: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred161_Xmu27633);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred161_Xmu2

    // $ANTLR start synpred162_Xmu2
    public final void synpred162_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;


        // Xmu2.g:8876:6: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:8876:6: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred162_Xmu27647);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred162_Xmu2

    // $ANTLR start synpred163_Xmu2
    public final void synpred163_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;


        // Xmu2.g:8895:6: (a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:8895:6: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred163_Xmu27661);
        a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred163_Xmu2

    // $ANTLR start synpred181_Xmu2
    public final void synpred181_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;


        // Xmu2.g:8996:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression )
        // Xmu2.g:8996:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred181_Xmu27937);
        c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred181_Xmu2

    // Delegated rules

    public final boolean synpred163_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133 = new BitSet(new long[]{0x080C200000000002L});
    public static final BitSet FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189 = new BitSet(new long[]{0x080C200000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250 = new BitSet(new long[]{0x0804200000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306 = new BitSet(new long[]{0x0804000000000002L});
    public static final BitSet FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401 = new BitSet(new long[]{0x4000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446 = new BitSet(new long[]{0x4000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_EntryData551 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_EntryData566 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_EntryData587 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605 = new BitSet(new long[]{0x0000002000000200L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_EntryData687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_ModelRule716 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule734 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ModelRule755 = new BitSet(new long[]{0x4000000000020080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule784 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ModelRule825 = new BitSet(new long[]{0x4000000000000080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule859 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule933 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_ModelRule947 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000148L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule976 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1004 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000148L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1046 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1101 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1119 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1140 = new BitSet(new long[]{0x4000000000020080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1169 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1210 = new BitSet(new long[]{0x4000000000000080L,0x0000000000000010L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1244 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1318 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1332 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000148L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1355 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000148L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule1381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1414 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1435 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_Parameter1498 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_Parameter1513 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1538 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_Parameter1559 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1617 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1644 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1670 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1690 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1710 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1730 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1750 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1770 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1790 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1810 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1890 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1917 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1958 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000100L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2013 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2055 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode2159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2211 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2247 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2303 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2344 = new BitSet(new long[]{0x0000000800000080L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2367 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2429 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2465 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2521 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2562 = new BitSet(new long[]{0x0180000800414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2585 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2741 = new BitSet(new long[]{0x1001400000000000L});
    public static final BitSet FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2764 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2779 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2794 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2815 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2833 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2851 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2869 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2883 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2897 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2911 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2925 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2939 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2953 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2967 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3014 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath3032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3068 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3086 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3107 = new BitSet(new long[]{0x0180000000434790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3136 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3156 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3176 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3196 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3216 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3236 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3256 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3276 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3317 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3351 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3377 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3403 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3429 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3455 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3481 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3507 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3533 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3636 = new BitSet(new long[]{0x0010808000000000L});
    public static final BitSet FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3659 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3674 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3689 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3710 = new BitSet(new long[]{0x0180000000434790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3733 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3750 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3767 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3784 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3801 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3818 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3835 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3852 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3951 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3965 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3979 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression4006 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression4071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression4111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression4151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression4191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4231 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4252 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression4270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression4310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4346 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4364 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4378 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4392 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4406 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4420 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4434 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4448 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4462 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4518 = new BitSet(new long[]{0x0100000000014790L,0x0000000000000001L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4533 = new BitSet(new long[]{0x0100000000014790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4609 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4623 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4637 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4677 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4696 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4733 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4753 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4773 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4833 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4847 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4861 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4875 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4915 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4934 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4953 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4990 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5010 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5030 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression5050 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5110 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5124 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5138 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5152 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5166 = new BitSet(new long[]{0x00000007C0000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5193 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5208 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5223 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5238 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5253 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression5334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5371 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5385 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5399 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5413 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5427 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5441 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5468 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5494 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5514 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5534 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5554 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5574 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5594 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5654 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5668 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5682 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5696 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5710 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5724 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5738 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5765 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5791 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5811 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5831 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5851 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5871 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5891 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5911 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5967 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000148L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5996 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6037 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000048L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6071 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement6145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6174 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6192 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6210 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6228 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6246 = new BitSet(new long[]{0x0020040000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement6269 = new BitSet(new long[]{0x0020040000000002L,0x0000000000000006L});
    public static final BitSet FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6310 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6324 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6342 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6360 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6374 = new BitSet(new long[]{0x0400020000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6397 = new BitSet(new long[]{0x0400020000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6461 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6476 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6491 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6506 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6527 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000048L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6578 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6596 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6614 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000048L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6665 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6683 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6697 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6711 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6725 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6739 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6753 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6771 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000048L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6822 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6873 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6891 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6909 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6927 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6948 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7027 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement7045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7078 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7096 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7114 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000048L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement7132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7169 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7190 = new BitSet(new long[]{0x0100000000034790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7219 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7239 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7280 = new BitSet(new long[]{0x0100000000014790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7314 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7340 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7472 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7486 = new BitSet(new long[]{0xA002180000000080L,0x0000000000000048L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7541 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7559 = new BitSet(new long[]{0x0180000000414790L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement7675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ArithmeticRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_AssignStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression8018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path8069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause8110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred16_Xmu21670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred17_Xmu21690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred18_Xmu21710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred19_Xmu21730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred20_Xmu21750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred21_Xmu21770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred22_Xmu21790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_synpred26_Xmu21917 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu21958 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000100L});
    public static final BitSet FOLLOW_21_in_synpred26_Xmu22013 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_synpred26_Xmu22055 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_synpred26_Xmu22159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred33_Xmu22610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred34_Xmu22624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred35_Xmu22638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred36_Xmu22652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred37_Xmu22666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred38_Xmu22680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred39_Xmu22694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred42_Xmu22869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred43_Xmu22883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred44_Xmu22897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred45_Xmu22911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred46_Xmu22925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred47_Xmu22939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred48_Xmu22953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred49_Xmu23136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred50_Xmu23156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred51_Xmu23176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred52_Xmu23196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred53_Xmu23216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred54_Xmu23236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred55_Xmu23256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred56_Xmu23351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred57_Xmu23377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred58_Xmu23403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred59_Xmu23429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred60_Xmu23455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred61_Xmu23481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred62_Xmu23507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred67_Xmu23733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred68_Xmu23750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred69_Xmu23767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred70_Xmu23784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred71_Xmu23801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred72_Xmu23818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred73_Xmu23835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred79_Xmu24364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred80_Xmu24378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred81_Xmu24392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred82_Xmu24406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred83_Xmu24420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred84_Xmu24434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred85_Xmu24448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred87_Xmu24558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred89_Xmu24623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred92_Xmu24753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred94_Xmu24833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred95_Xmu24847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred96_Xmu24861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred99_Xmu24990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred100_Xmu25010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred101_Xmu25030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred103_Xmu25110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred104_Xmu25124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred105_Xmu25138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred106_Xmu25152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred111_Xmu25278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred112_Xmu25292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred113_Xmu25306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred114_Xmu25320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred115_Xmu25371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred116_Xmu25385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred117_Xmu25399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred118_Xmu25413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred119_Xmu25427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred120_Xmu25494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred121_Xmu25514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred122_Xmu25534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred123_Xmu25554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred124_Xmu25574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred126_Xmu25654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred127_Xmu25668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred128_Xmu25682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred129_Xmu25696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred130_Xmu25710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred131_Xmu25724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred132_Xmu25791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred133_Xmu25811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred134_Xmu25831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred135_Xmu25851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred136_Xmu25871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred137_Xmu25891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred141_Xmu26269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred146_Xmu26683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred147_Xmu26697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred148_Xmu26711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred149_Xmu26725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred150_Xmu26739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred152_Xmu26980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred153_Xmu27219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred154_Xmu27314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred157_Xmu27577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred158_Xmu27591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred159_Xmu27605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred160_Xmu27619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred161_Xmu27633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred162_Xmu27647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred163_Xmu27661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred181_Xmu27937 = new BitSet(new long[]{0x0000000000000002L});

}