// $ANTLR 3.4

	package edu.ustb.sei.mde.xmu2.resource.xmu2.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xmu2Parser extends Xmu2ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "BOOLEAN", "LINEBREAK", "ML_COMMENT", "NAME", "NUMBER", "OBJ_URI", "QUOTED_39_39_92", "QUOTED_60_62_92", "SL_COMMENT", "TEXT", "TYPE", "WHITESPACE", "'('", "')'", "'*'", "'+'", "'++'", "','", "'-'", "'->'", "'.'", "'/'", "':'", "'::'", "';'", "'<'", "'<='", "'='", "'>'", "'>='", "'['", "']'", "'and'", "'at'", "'by'", "'case'", "'default'", "'delete'", "'enforce'", "'entry'", "'exists'", "'first'", "'forAll'", "'foreach'", "'import'", "'last'", "'match'", "'module'", "'not'", "'null'", "'or'", "'otherwise'", "'rule'", "'select'", "'skip'", "'source'", "'switch'", "'top'", "'undefined'", "'unmatchs'", "'unmatchv'", "'update'", "'view'", "'with'", "'{'", "'|'", "'}'"
    };

    public static final int EOF=-1;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int BOOLEAN=4;
    public static final int LINEBREAK=5;
    public static final int ML_COMMENT=6;
    public static final int NAME=7;
    public static final int NUMBER=8;
    public static final int OBJ_URI=9;
    public static final int QUOTED_39_39_92=10;
    public static final int QUOTED_60_62_92=11;
    public static final int SL_COMMENT=12;
    public static final int TEXT=13;
    public static final int TYPE=14;
    public static final int WHITESPACE=15;

    // delegates
    public Xmu2ANTLRParserBase[] getDelegates() {
        return new Xmu2ANTLRParserBase[] {};
    }

    // delegators


    public Xmu2Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xmu2Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(228 + 1);
         

    }

    public String[] getTokenNames() { return Xmu2Parser.tokenNames; }
    public String getGrammarFileName() { return "Xmu2.g"; }


    	private edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolverFactory tokenResolverFactory = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> expectedElements = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Problem() {
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity getSeverity() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemSeverity.ERROR;
    					}
    					public edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType getType() {
    						return edu.ustb.sei.mde.xmu2.resource.xmu2.Xmu2EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement terminal = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.TERMINALS[terminalID];
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[] containmentFeatures = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2FollowSetProvider.LINKS[ids[i]];
    		}
    		edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>() {
    			public boolean execute(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource resource) {
    				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xmu2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xmu2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xmu2Parser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xmu2Lexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.TransformationModel.class) {
    				return parse_edu_ustb_sei_mde_xmu2_TransformationModel();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryPoint.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryPoint();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.EntryData.class) {
    				return parse_edu_ustb_sei_mde_xmu2_EntryData();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.ModelRule.class) {
    				return parse_edu_ustb_sei_mde_xmu2_ModelRule();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.VariableDeclaration.class) {
    				return parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.Parameter.class) {
    				return parse_edu_ustb_sei_mde_xmu2_Parameter();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.Pattern.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PatternNode.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.LoopPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.FeaturePath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.OperationPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PositionPath.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.VariableExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.PathExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EmptyExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.ParenExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.UnaryExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.AdditiveExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.RelationalExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression.class) {
    				return parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.BlockStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.SwitchStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.UpdateClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.PatternCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.ForEachStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.RuleCallStatement.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.Skip.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_Skip();
    			}
    			if (type.getInstanceClass() == edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause.class) {
    				return parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();
    			}
    		}
    		throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource>>();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult parseResult = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2Command<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		java.util.List<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal> newFollowSet = new java.util.ArrayList<edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 190;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (edu.ustb.sei.mde.xmu2.resource.xmu2.util.Xmu2Pair<edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContainedFeature[]> newFollowerPair : newFollowers) {
    							edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2ExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace containmentTrace = new edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2ContainmentTrace(null, newFollowerPair.getRight());
    							edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal newFollowTerminal = new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xmu2.g:622:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.TransformationModel c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xmu2.g:623:2: ( (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF )
            // Xmu2.g:624:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[0]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xmu2.g:629:2: (c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel )
            // Xmu2.g:630:3: c0= parse_edu_ustb_sei_mde_xmu2_TransformationModel
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82);
            c0=parse_edu_ustb_sei_mde_xmu2_TransformationModel();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_TransformationModel"
    // Xmu2.g:638:1: parse_edu_ustb_sei_mde_xmu2_TransformationModel returns [edu.ustb.sei.mde.xmu2.TransformationModel element = null] : a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* ;
    public final edu.ustb.sei.mde.xmu2.TransformationModel parse_edu_ustb_sei_mde_xmu2_TransformationModel() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.TransformationModel element =  null;

        int parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.EntryPoint a4_0 =null;

        edu.ustb.sei.mde.xmu2.AbstractRule a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xmu2.g:641:2: (a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )* )
            // Xmu2.g:642:2: a0= 'module' (a1= NAME ) ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )* ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )* ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1]);
            	}

            // Xmu2.g:656:2: (a1= NAME )
            // Xmu2.g:657:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[3]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[5]);
            	}

            // Xmu2.g:695:2: ( (a2= 'import' (a3= QUOTED_60_62_92 ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==48) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // Xmu2.g:696:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    {
            	    // Xmu2.g:696:3: (a2= 'import' (a3= QUOTED_60_62_92 ) )
            	    // Xmu2.g:697:4: a2= 'import' (a3= QUOTED_60_62_92 )
            	    {
            	    a2=(Token)match(input,48,FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[6]);
            	    			}

            	    // Xmu2.g:711:4: (a3= QUOTED_60_62_92 )
            	    // Xmu2.g:712:5: a3= QUOTED_60_62_92
            	    {
            	    a3=(Token)match(input,QUOTED_60_62_92,FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3 != null) {
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_60_62_92");
            	    						tokenResolver.setOptions(getOptions());
            	    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            	    						tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), result);
            	    						Object resolvedObject = result.getResolvedToken();
            	    						if (resolvedObject == null) {
            	    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            	    						}
            	    						String resolved = (String) resolvedObject;
            	    						org.eclipse.emf.ecore.EPackage proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEPackage();
            	    						collectHiddenTokens(element);
            	    						registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TransformationModel, org.eclipse.emf.ecore.EPackage>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTransformationModelPackagesReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES), resolved, proxy);
            	    						if (proxy != null) {
            	    							Object value = proxy;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__PACKAGES, value);
            	    							completedElement(value, false);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_2_0_0_1, proxy, true);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[7]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[8]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[9]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[10]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[12]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[14]);
            	}

            // Xmu2.g:764:2: ( ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==43) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // Xmu2.g:765:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    {
            	    // Xmu2.g:765:3: ( (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint ) )
            	    // Xmu2.g:766:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    {
            	    // Xmu2.g:766:4: (a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint )
            	    // Xmu2.g:767:5: a4_0= parse_edu_ustb_sei_mde_xmu2_EntryPoint
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250);
            	    a4_0=parse_edu_ustb_sei_mde_xmu2_EntryPoint();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a4_0 != null) {
            	    						if (a4_0 != null) {
            	    							Object value = a4_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__ENTRY_POINTS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_3_0_0_0, a4_0, true);
            	    						copyLocalizationInfos(a4_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[15]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[16]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[17]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[18]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[19]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[20]);
            	}

            // Xmu2.g:803:2: ( ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==56||LA3_0==61) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // Xmu2.g:804:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    {
            	    // Xmu2.g:804:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule ) )
            	    // Xmu2.g:805:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    {
            	    // Xmu2.g:805:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule )
            	    // Xmu2.g:806:5: a5_0= parse_edu_ustb_sei_mde_xmu2_AbstractRule
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_AbstractRule();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createTransformationModel();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.TRANSFORMATION_MODEL__RULES, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_0_0_0_4_0_0_0, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[21]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[22]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[23]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[24]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_edu_ustb_sei_mde_xmu2_TransformationModel_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_TransformationModel"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryPoint"
    // Xmu2.g:842:1: parse_edu_ustb_sei_mde_xmu2_EntryPoint returns [edu.ustb.sei.mde.xmu2.EntryPoint element = null] : a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.EntryPoint parse_edu_ustb_sei_mde_xmu2_EntryPoint() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryPoint element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.EntryData a3_0 =null;

        edu.ustb.sei.mde.xmu2.EntryData a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xmu2.g:845:2: (a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')' )
            // Xmu2.g:846:2: a0= 'entry' (a1= NAME ) a2= '(' (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )* a6= ')'
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[25]);
            	}

            // Xmu2.g:860:2: (a1= NAME )
            // Xmu2.g:861:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.ModelRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.EntryPoint, edu.ustb.sei.mde.xmu2.ModelRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEntryPointRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_1, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[26]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[27]);
            	}

            // Xmu2.g:914:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            // Xmu2.g:915:3: a3_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419);
            a3_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[28]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[29]);
            	}

            // Xmu2.g:941:2: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==21) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xmu2.g:942:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    {
            	    // Xmu2.g:942:3: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData ) )
            	    // Xmu2.g:943:4: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    {
            	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getEntryPoint(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[30]);
            	    			}

            	    // Xmu2.g:957:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData )
            	    // Xmu2.g:958:5: a5_0= parse_edu_ustb_sei_mde_xmu2_EntryData
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_EntryData();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_POINT__PARAMETERS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_4_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[31]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[32]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[33]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[34]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryPoint();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_1_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[35]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[36]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[37]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_edu_ustb_sei_mde_xmu2_EntryPoint_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryPoint"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_EntryData"
    // Xmu2.g:1010:1: parse_edu_ustb_sei_mde_xmu2_EntryData returns [edu.ustb.sei.mde.xmu2.EntryData element = null] : ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' ;
    public final edu.ustb.sei.mde.xmu2.EntryData parse_edu_ustb_sei_mde_xmu2_EntryData() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.EntryData element =  null;

        int parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xmu2.g:1013:2: ( ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']' )
            // Xmu2.g:1014:2: ( (a0= 'source' |a1= 'view' ) ) a4= '[' (a5= NUMBER ) ( ( (a6= OBJ_URI ) ) )? a7= ']'
            {
            // Xmu2.g:1014:2: ( (a0= 'source' |a1= 'view' ) )
            // Xmu2.g:1015:3: (a0= 'source' |a1= 'view' )
            {
            // Xmu2.g:1015:3: (a0= 'source' |a1= 'view' )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==59) ) {
                alt5=1;
            }
            else if ( (LA5_0==66) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }
            switch (alt5) {
                case 1 :
                    // Xmu2.g:1016:4: a0= 'source'
                    {
                    a0=(Token)match(input,59,FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_EntryData551); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1029:8: a1= 'view'
                    {
                    a1=(Token)match(input,66,FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_EntryData566); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[38]);
            	}

            a4=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_EntryData587); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[39]);
            	}

            // Xmu2.g:1063:2: (a5= NUMBER )
            // Xmu2.g:1064:3: a5= NUMBER
            {
            a5=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            				startIncompleteElement(element);
            			}
            			if (a5 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__INDEX), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[40]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[41]);
            	}

            // Xmu2.g:1100:2: ( ( (a6= OBJ_URI ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==OBJ_URI) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // Xmu2.g:1101:3: ( (a6= OBJ_URI ) )
                    {
                    // Xmu2.g:1101:3: ( (a6= OBJ_URI ) )
                    // Xmu2.g:1102:4: (a6= OBJ_URI )
                    {
                    // Xmu2.g:1102:4: (a6= OBJ_URI )
                    // Xmu2.g:1103:5: a6= OBJ_URI
                    {
                    a6=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
                    						startIncompleteElement(element);
                    					}
                    					if (a6 != null) {
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
                    						tokenResolver.setOptions(getOptions());
                    						edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
                    						}
                    						java.lang.String resolved = (java.lang.String) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.ENTRY_DATA__FRAGMENT), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_3_0_0_0, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[42]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[43]);
            	}

            a7=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_EntryData687); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createEntryData();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_2_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[44]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[45]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_edu_ustb_sei_mde_xmu2_EntryData_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_EntryData"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_ModelRule"
    // Xmu2.g:1162:1: parse_edu_ustb_sei_mde_xmu2_ModelRule returns [edu.ustb.sei.mde.xmu2.ModelRule element = null] : ( (a0= 'top' )? ) a3= 'rule' (a4= NAME ) a5= '(' ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a9= ')' a10= '{' ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )* ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a14= '}' ;
    public final edu.ustb.sei.mde.xmu2.ModelRule parse_edu_ustb_sei_mde_xmu2_ModelRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.ModelRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a12=null;
        Token a14=null;
        edu.ustb.sei.mde.xmu2.Parameter a6_0 =null;

        edu.ustb.sei.mde.xmu2.Parameter a8_0 =null;

        edu.ustb.sei.mde.xmu2.VariableDeclaration a11_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a13_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xmu2.g:1165:2: ( ( (a0= 'top' )? ) a3= 'rule' (a4= NAME ) a5= '(' ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a9= ')' a10= '{' ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )* ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a14= '}' )
            // Xmu2.g:1166:2: ( (a0= 'top' )? ) a3= 'rule' (a4= NAME ) a5= '(' ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )? a9= ')' a10= '{' ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )* ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )? a14= '}'
            {
            // Xmu2.g:1166:2: ( (a0= 'top' )? )
            // Xmu2.g:1167:3: (a0= 'top' )?
            {
            // Xmu2.g:1167:3: (a0= 'top' )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==61) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // Xmu2.g:1168:4: a0= 'top'
                    {
                    a0=(Token)match(input,61,FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_ModelRule725); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_0, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[46]);
            	}

            a3=(Token)match(input,56,FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_ModelRule746); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[47]);
            	}

            // Xmu2.g:1211:2: (a4= NAME )
            // Xmu2.g:1212:3: a4= NAME
            {
            a4=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule764); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            				}
            			}
            			if (a4 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[48]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ModelRule785); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[49]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[50]);
            	}

            // Xmu2.g:1272:2: ( ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==NAME||LA9_0==59||LA9_0==66) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // Xmu2.g:1273:3: ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    {
                    // Xmu2.g:1273:3: ( (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )* )
                    // Xmu2.g:1274:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    {
                    // Xmu2.g:1274:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    // Xmu2.g:1275:5: a6_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule814);
                    a6_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    						}
                    					}
                    					if (a6_0 != null) {
                    						if (a6_0 != null) {
                    							Object value = a6_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4_0_0_0, a6_0, true);
                    						copyLocalizationInfos(a6_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[51]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[52]);
                    			}

                    // Xmu2.g:1306:4: ( (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) ) )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==21) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // Xmu2.g:1307:5: (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    {
                    	    // Xmu2.g:1307:5: (a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter ) )
                    	    // Xmu2.g:1308:6: a7= ',' (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    {
                    	    a7=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ModelRule855); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    							startIncompleteElement(element);
                    	    							// initialize boolean attribute
                    	    							{
                    	    								Object value = false;
                    	    								element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    	    							}
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[53]);
                    	    					}

                    	    // Xmu2.g:1327:6: (a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter )
                    	    // Xmu2.g:1328:7: a8_0= parse_edu_ustb_sei_mde_xmu2_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule889);
                    	    a8_0=parse_edu_ustb_sei_mde_xmu2_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    	    								startIncompleteElement(element);
                    	    								// initialize boolean attribute
                    	    								{
                    	    									Object value = false;
                    	    									element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    	    								}
                    	    							}
                    	    							if (a8_0 != null) {
                    	    								if (a8_0 != null) {
                    	    									Object value = a8_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_4_0_0_1_0_0_1, a8_0, true);
                    	    								copyLocalizationInfos(a8_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[54]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[55]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[56]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[57]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[58]);
            	}

            a9=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule963); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[59]);
            	}

            a10=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_ModelRule977); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[60]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[61]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[62]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[63]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[64]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[65]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[66]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[67]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[68]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[69]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[70]);
            	}

            // Xmu2.g:1422:2: ( ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==NAME) ) {
                    int LA10_2 = input.LA(2);

                    if ( (LA10_2==26) ) {
                        alt10=1;
                    }


                }


                switch (alt10) {
            	case 1 :
            	    // Xmu2.g:1423:3: ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' )
            	    {
            	    // Xmu2.g:1423:3: ( (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';' )
            	    // Xmu2.g:1424:4: (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a12= ';'
            	    {
            	    // Xmu2.g:1424:4: (a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            	    // Xmu2.g:1425:5: a11_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1006);
            	    a11_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    						startIncompleteElement(element);
            	    						// initialize boolean attribute
            	    						{
            	    							Object value = false;
            	    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            	    						}
            	    					}
            	    					if (a11_0 != null) {
            	    						if (a11_0 != null) {
            	    							Object value = a11_0;
            	    							addObjectToList(element, edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__VARIABLE_DECLARATIONS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_7_0_0_0, a11_0, true);
            	    						copyLocalizationInfos(a11_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[71]);
            	    			}

            	    a12=(Token)match(input,28,FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1034); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            	    					startIncompleteElement(element);
            	    					// initialize boolean attribute
            	    					{
            	    						Object value = false;
            	    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            	    					}
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_7_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a12, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[72]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[73]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[74]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[75]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[76]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[77]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[78]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[79]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[80]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[81]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[82]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[83]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[84]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[85]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[86]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[87]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[88]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[89]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[90]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[91]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getModelRule(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[92]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[93]);
            	}

            // Xmu2.g:1501:2: ( (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==NAME||(LA11_0 >= 41 && LA11_0 <= 42)||LA11_0==47||LA11_0==58||LA11_0==60||LA11_0==65||LA11_0==68) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // Xmu2.g:1502:3: (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    {
                    // Xmu2.g:1502:3: (a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:1503:4: a13_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1076);
                    a13_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
                    					}
                    				}
                    				if (a13_0 != null) {
                    					if (a13_0 != null) {
                    						Object value = a13_0;
                    						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__STATEMENT), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_8, a13_0, true);
                    					copyLocalizationInfos(a13_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[94]);
            	}

            a14=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1102); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.MODEL_RULE__ACTIVE), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_3_0_0_9, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a14, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[95]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.Xmu2Package.eINSTANCE.getTransformationModel(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[96]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_edu_ustb_sei_mde_xmu2_ModelRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_ModelRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_VariableDeclaration"
    // Xmu2.g:1556:1: parse_edu_ustb_sei_mde_xmu2_VariableDeclaration returns [edu.ustb.sei.mde.xmu2.VariableDeclaration element = null] : (a0= NAME ) a1= ':' (a2= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.VariableDeclaration parse_edu_ustb_sei_mde_xmu2_VariableDeclaration() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.VariableDeclaration element =  null;

        int parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xmu2.g:1559:2: ( (a0= NAME ) a1= ':' (a2= TYPE ) )
            // Xmu2.g:1560:2: (a0= NAME ) a1= ':' (a2= TYPE )
            {
            // Xmu2.g:1560:2: (a0= NAME )
            // Xmu2.g:1561:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1135); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[97]);
            	}

            a1=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1156); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[98]);
            	}

            // Xmu2.g:1610:2: (a2= TYPE )
            // Xmu2.g:1611:3: a2= TYPE
            {
            a2=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1174); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createVariableDeclaration();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.VARIABLE_DECLARATION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_4_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[99]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[100]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[101]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[102]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[103]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[104]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[105]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[106]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[108]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[109]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[110]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_VariableDeclaration"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_Parameter"
    // Xmu2.g:1663:1: parse_edu_ustb_sei_mde_xmu2_Parameter returns [edu.ustb.sei.mde.xmu2.Parameter element = null] : ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) ;
    public final edu.ustb.sei.mde.xmu2.Parameter parse_edu_ustb_sei_mde_xmu2_Parameter() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.Parameter element =  null;

        int parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xmu2.g:1666:2: ( ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE ) )
            // Xmu2.g:1667:2: ( (a0= 'source' |a1= 'view' )? ) (a4= NAME ) a5= ':' (a6= TYPE )
            {
            // Xmu2.g:1667:2: ( (a0= 'source' |a1= 'view' )? )
            // Xmu2.g:1668:3: (a0= 'source' |a1= 'view' )?
            {
            // Xmu2.g:1668:3: (a0= 'source' |a1= 'view' )?
            int alt12=3;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==59) ) {
                alt12=1;
            }
            else if ( (LA12_0==66) ) {
                alt12=2;
            }
            switch (alt12) {
                case 1 :
                    // Xmu2.g:1669:4: a0= 'source'
                    {
                    a0=(Token)match(input,59,FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_Parameter1219); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.SOURCE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:1685:8: a1= 'view'
                    {
                    a1=(Token)match(input,66,FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_Parameter1234); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.VIEW_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[111]);
            	}

            // Xmu2.g:1707:2: (a4= NAME )
            // Xmu2.g:1708:3: a4= NAME
            {
            a4=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1259); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a4 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[112]);
            	}

            a5=(Token)match(input,26,FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_Parameter1280); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            			startIncompleteElement(element);
            			// initialize enumeration attribute
            			Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            			element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[113]);
            	}

            // Xmu2.g:1763:2: (a6= TYPE )
            // Xmu2.g:1764:3: a6= TYPE
            {
            a6=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1298); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createParameter();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getDomainTag().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.DomainTag.NORMAL_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TAG), value);
            			}
            			if (a6 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EClassifier proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEClass();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.TypedElement, org.eclipse.emf.ecore.EClassifier>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.Xmu2Package.PARAMETER__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_5_0_0_3, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[114]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[115]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_edu_ustb_sei_mde_xmu2_Parameter_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_Parameter"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"
    // Xmu2.g:1809:1: parse_edu_ustb_sei_mde_xmu2_pattern_Pattern returns [edu.ustb.sei.mde.xmu2.pattern.Pattern element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.Pattern parse_edu_ustb_sei_mde_xmu2_pattern_Pattern() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.Pattern element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.pattern.PatternNode a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xmu2.g:1812:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )? )
            // Xmu2.g:1813:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            {
            // Xmu2.g:1813:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:1814:3: a0_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1338);
            a0_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[116]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[117]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[118]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[119]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[120]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[121]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[122]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[124]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[125]);
            	}

            // Xmu2.g:1848:2: ( (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==34) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // Xmu2.g:1849:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    {
                    // Xmu2.g:1849:3: (a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']' )
                    // Xmu2.g:1850:4: a1= '[' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a3= ']'
                    {
                    a1=(Token)match(input,34,FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1365); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[126]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[127]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[128]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[129]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[130]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[131]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[132]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[133]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPattern(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[134]);
                    			}

                    // Xmu2.g:1872:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt13=8;
                    switch ( input.LA(1) ) {
                    case 52:
                        {
                        int LA13_1 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt13=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA13_2 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred19_Xmu2()) ) {
                            alt13=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA13_3 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 53:
                        {
                        int LA13_4 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 62:
                        {
                        int LA13_5 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA13_6 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA13_7 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA13_8 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA13_9 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA13_10 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA13_11 = input.LA(2);

                        if ( (synpred14_Xmu2()) ) {
                            alt13=1;
                        }
                        else if ( (synpred15_Xmu2()) ) {
                            alt13=2;
                        }
                        else if ( (synpred16_Xmu2()) ) {
                            alt13=3;
                        }
                        else if ( (synpred17_Xmu2()) ) {
                            alt13=4;
                        }
                        else if ( (synpred18_Xmu2()) ) {
                            alt13=5;
                        }
                        else if ( (synpred20_Xmu2()) ) {
                            alt13=7;
                        }
                        else if ( (true) ) {
                            alt13=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 0, input);

                        throw nvae;

                    }

                    switch (alt13) {
                        case 1 :
                            // Xmu2.g:1873:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1391);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:1892:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1411);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:1911:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1431);
                            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_2 != null) {
                            						if (a2_2 != null) {
                            							Object value = a2_2;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_2, true);
                            						copyLocalizationInfos(a2_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:1930:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1451);
                            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_3 != null) {
                            						if (a2_3 != null) {
                            							Object value = a2_3;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_3, true);
                            						copyLocalizationInfos(a2_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:1949:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1471);
                            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_4 != null) {
                            						if (a2_4 != null) {
                            							Object value = a2_4;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_4, true);
                            						copyLocalizationInfos(a2_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:1968:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1491);
                            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_5 != null) {
                            						if (a2_5 != null) {
                            							Object value = a2_5;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_5, true);
                            						copyLocalizationInfos(a2_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:1987:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1511);
                            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_6 != null) {
                            						if (a2_6 != null) {
                            							Object value = a2_6;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_6, true);
                            						copyLocalizationInfos(a2_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:2006:10: a2_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1531);
                            a2_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_7 != null) {
                            						if (a2_7 != null) {
                            							Object value = a2_7;
                            							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN__GUARD), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_1, a2_7, true);
                            						copyLocalizationInfos(a2_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[135]);
                    			}

                    a3=(Token)match(input,35,FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1559); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPattern();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_6_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[136]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[137]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[138]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[139]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[140]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[141]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[142]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[143]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[144]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[145]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[146]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[147]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[148]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[149]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[152]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[153]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_Pattern"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"
    // Xmu2.g:2070:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode returns [edu.ustb.sei.mde.xmu2.pattern.PatternNode element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? ;
    public final edu.ustb.sei.mde.xmu2.pattern.PatternNode parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternNode element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.VariableDeclaration a0_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternExpression a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xmu2.g:2073:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )? )
            // Xmu2.g:2074:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
            {
            // Xmu2.g:2074:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            // Xmu2.g:2075:3: a0_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1611);
            a0_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[156]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[157]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[159]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[160]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[161]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[162]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[163]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[165]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[166]);
            	}

            // Xmu2.g:2112:2: ( (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==68) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // Xmu2.g:2113:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                    {
                    // Xmu2.g:2113:3: (a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}' )
                    // Xmu2.g:2114:4: a1= '{' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )? a5= '}'
                    {
                    a1=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1638); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[167]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[168]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[169]);
                    			}

                    // Xmu2.g:2130:4: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* ) )?
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( (LA16_0==NAME) ) {
                        alt16=1;
                    }
                    switch (alt16) {
                        case 1 :
                            // Xmu2.g:2131:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            {
                            // Xmu2.g:2131:5: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )* )
                            // Xmu2.g:2132:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            {
                            // Xmu2.g:2132:6: (a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            // Xmu2.g:2133:7: a2_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1679);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            							if (terminateParsing) {
                            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            							}
                            							if (element == null) {
                            								element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            								startIncompleteElement(element);
                            							}
                            							if (a2_0 != null) {
                            								if (a2_0 != null) {
                            									Object value = a2_0;
                            									addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                            									completedElement(value, true);
                            								}
                            								collectHiddenTokens(element);
                            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1_0_0_0, a2_0, true);
                            								copyLocalizationInfos(a2_0, element);
                            							}
                            						}

                            }


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[170]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[171]);
                            					}

                            // Xmu2.g:2159:6: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) ) )*
                            loop15:
                            do {
                                int alt15=2;
                                int LA15_0 = input.LA(1);

                                if ( (LA15_0==21) ) {
                                    alt15=1;
                                }


                                switch (alt15) {
                            	case 1 :
                            	    // Xmu2.g:2160:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    {
                            	    // Xmu2.g:2160:7: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression ) )
                            	    // Xmu2.g:2161:8: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    {
                            	    a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1734); if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    								if (element == null) {
                            	    									element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            	    									startIncompleteElement(element);
                            	    								}
                            	    								collectHiddenTokens(element);
                            	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1_0_0_1_0_0_0, null, true);
                            	    								copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                            	    							}

                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[172]);
                            	    								addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPatternNode(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[173]);
                            	    							}

                            	    // Xmu2.g:2176:8: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression )
                            	    // Xmu2.g:2177:9: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression
                            	    {
                            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1776);
                            	    a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression();

                            	    state._fsp--;
                            	    if (state.failed) return element;

                            	    if ( state.backtracking==0 ) {
                            	    									if (terminateParsing) {
                            	    										throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            	    									}
                            	    									if (element == null) {
                            	    										element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                            	    										startIncompleteElement(element);
                            	    									}
                            	    									if (a4_0 != null) {
                            	    										if (a4_0 != null) {
                            	    											Object value = a4_0;
                            	    											addObjectToList(element, edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PATTERN_NODE__EXPRESSIONS, value);
                            	    											completedElement(value, true);
                            	    										}
                            	    										collectHiddenTokens(element);
                            	    										retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_1_0_0_1_0_0_1, a4_0, true);
                            	    										copyLocalizationInfos(a4_0, element);
                            	    									}
                            	    								}

                            	    }


                            	    if ( state.backtracking==0 ) {
                            	    								// expected elements (follow set)
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[174]);
                            	    								addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[175]);
                            	    							}

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop15;
                                }
                            } while (true);


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[176]);
                            						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[177]);
                            					}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[178]);
                    			}

                    a5=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1880); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPatternNode();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_7_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[179]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[180]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[181]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[182]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[183]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[184]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[185]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[186]);
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[187]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[188]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[189]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[190]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[191]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[192]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[194]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[195]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[196]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[197]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[199]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[200]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[201]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[202]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"
    // Xmu2.g:2263:1: parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element = null] : (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PatternNode a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xmu2.g:2266:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode ) )
            // Xmu2.g:2267:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            {
            // Xmu2.g:2267:2: (a0= NAME )
            // Xmu2.g:2268:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression1932); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[203]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[204]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[205]);
            	}

            // Xmu2.g:2309:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==23) ) {
                int LA18_1 = input.LA(2);

                if ( (LA18_1==44||LA18_1==46||LA18_1==57) ) {
                    alt18=1;
                }
            }
            switch (alt18) {
                case 1 :
                    // Xmu2.g:2310:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:2310:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:2311:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:2311:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:2312:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression1968);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[206]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[207]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[208]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[209]);
            	}

            // Xmu2.g:2346:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==23) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // Xmu2.g:2347:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:2347:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:2348:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:2348:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:2349:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2024);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[210]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[211]);
            	}

            a3=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2065); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[212]);
            	}

            // Xmu2.g:2395:2: (a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode )
            // Xmu2.g:2396:3: a4_0= parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2083);
            a4_0=parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createObjectPatternExpression();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.OBJECT_PATTERN_EXPRESSION__TARGET_NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_8_0_0_4, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[213]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[214]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"
    // Xmu2.g:2424:1: parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element = null] : (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.expression.LoopPath a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a4_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a4_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a4_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a4_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a4_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xmu2.g:2427:2: ( (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:2428:2: (a0= NAME ) ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )? ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )? a3= '=' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:2428:2: (a0= NAME )
            // Xmu2.g:2429:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2120); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EStructuralFeature proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAttribute();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.pattern.PatternExpression, org.eclipse.emf.ecore.EStructuralFeature>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPatternExpressionFeatureReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[215]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[216]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[217]);
            	}

            // Xmu2.g:2470:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==23) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==44||LA20_1==46||LA20_1==57) ) {
                    alt20=1;
                }
            }
            switch (alt20) {
                case 1 :
                    // Xmu2.g:2471:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    {
                    // Xmu2.g:2471:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath ) )
                    // Xmu2.g:2472:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    {
                    // Xmu2.g:2472:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath )
                    // Xmu2.g:2473:5: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2156);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__SELECTOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[218]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[219]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[220]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[221]);
            	}

            // Xmu2.g:2507:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==23) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // Xmu2.g:2508:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    {
                    // Xmu2.g:2508:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath ) )
                    // Xmu2.g:2509:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    {
                    // Xmu2.g:2509:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
                    // Xmu2.g:2510:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2212);
                    a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__POSITION), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[222]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[223]);
            	}

            a3=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2253); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[224]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[225]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[226]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[227]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[228]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[229]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[230]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[231]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getPropertyPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[232]);
            	}

            // Xmu2.g:2564:2: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a4_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a4_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a4_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a4_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a4_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt22=8;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA22_1 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt22=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA22_2 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred34_Xmu2()) ) {
                    alt22=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA22_3 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA22_4 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA22_5 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA22_6 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA22_7 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA22_8 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA22_9 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA22_10 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA22_11 = input.LA(2);

                if ( (synpred29_Xmu2()) ) {
                    alt22=1;
                }
                else if ( (synpred30_Xmu2()) ) {
                    alt22=2;
                }
                else if ( (synpred31_Xmu2()) ) {
                    alt22=3;
                }
                else if ( (synpred32_Xmu2()) ) {
                    alt22=4;
                }
                else if ( (synpred33_Xmu2()) ) {
                    alt22=5;
                }
                else if ( (synpred35_Xmu2()) ) {
                    alt22=7;
                }
                else if ( (true) ) {
                    alt22=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;

            }

            switch (alt22) {
                case 1 :
                    // Xmu2.g:2565:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2271);
                    a4_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:2584:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2285);
                    a4_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:2603:6: a4_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2299);
                    a4_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_2 != null) {
                    				if (a4_2 != null) {
                    					Object value = a4_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_2, true);
                    				copyLocalizationInfos(a4_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:2622:6: a4_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2313);
                    a4_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_3 != null) {
                    				if (a4_3 != null) {
                    					Object value = a4_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_3, true);
                    				copyLocalizationInfos(a4_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:2641:6: a4_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2327);
                    a4_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_4 != null) {
                    				if (a4_4 != null) {
                    					Object value = a4_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_4, true);
                    				copyLocalizationInfos(a4_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:2660:6: a4_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2341);
                    a4_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_5 != null) {
                    				if (a4_5 != null) {
                    					Object value = a4_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_5, true);
                    				copyLocalizationInfos(a4_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:2679:6: a4_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2355);
                    a4_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_6 != null) {
                    				if (a4_6 != null) {
                    					Object value = a4_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_6, true);
                    				copyLocalizationInfos(a4_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:2698:6: a4_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2369);
                    a4_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.pattern.PatternFactory.eINSTANCE.createPropertyPatternExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_7 != null) {
                    				if (a4_7 != null) {
                    					Object value = a4_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.PROPERTY_PATTERN_EXPRESSION__TARGET_EXPRESSION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_9_0_0_4, a4_7, true);
                    				copyLocalizationInfos(a4_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[233]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[234]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"
    // Xmu2.g:2726:1: parse_edu_ustb_sei_mde_xmu2_expression_LoopPath returns [edu.ustb.sei.mde.xmu2.expression.LoopPath element = null] : a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.LoopPath parse_edu_ustb_sei_mde_xmu2_expression_LoopPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.LoopPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        Token a10=null;
        edu.ustb.sei.mde.xmu2.VariableDeclaration a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a9_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xmu2.g:2729:2: (a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')' )
            // Xmu2.g:2730:2: a0= '->' ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) ) a6= '(' (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration ) a8= '|' (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a10= ')'
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2402); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[235]);
            	}

            // Xmu2.g:2744:2: ( (a1= 'select' |a2= 'forAll' |a3= 'exists' ) )
            // Xmu2.g:2745:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            {
            // Xmu2.g:2745:3: (a1= 'select' |a2= 'forAll' |a3= 'exists' )
            int alt23=3;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt23=1;
                }
                break;
            case 46:
                {
                alt23=2;
                }
                break;
            case 44:
                {
                alt23=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;

            }

            switch (alt23) {
                case 1 :
                    // Xmu2.g:2746:4: a1= 'select'
                    {
                    a1=(Token)match(input,57,FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2425); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.SELECT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:2759:8: a2= 'forAll'
                    {
                    a2=(Token)match(input,46,FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2440); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.FOR_ALL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:2772:8: a3= 'exists'
                    {
                    a3=(Token)match(input,44,FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2455); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getLoopOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.LoopOperator.EXISTS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[236]);
            	}

            a6=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2476); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[237]);
            	}

            // Xmu2.g:2806:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration )
            // Xmu2.g:2807:3: a7_0= parse_edu_ustb_sei_mde_xmu2_VariableDeclaration
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2494);
            a7_0=parse_edu_ustb_sei_mde_xmu2_VariableDeclaration();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_3, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[238]);
            	}

            a8=(Token)match(input,69,FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2512); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[239]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[240]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[241]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[242]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[243]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[244]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[245]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[246]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getLoopPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[247]);
            	}

            // Xmu2.g:2854:2: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt24=8;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA24_1 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt24=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA24_2 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred43_Xmu2()) ) {
                    alt24=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA24_3 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA24_4 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA24_5 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA24_6 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA24_7 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA24_8 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA24_9 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA24_10 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA24_11 = input.LA(2);

                if ( (synpred38_Xmu2()) ) {
                    alt24=1;
                }
                else if ( (synpred39_Xmu2()) ) {
                    alt24=2;
                }
                else if ( (synpred40_Xmu2()) ) {
                    alt24=3;
                }
                else if ( (synpred41_Xmu2()) ) {
                    alt24=4;
                }
                else if ( (synpred42_Xmu2()) ) {
                    alt24=5;
                }
                else if ( (synpred44_Xmu2()) ) {
                    alt24=7;
                }
                else if ( (true) ) {
                    alt24=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;

            }

            switch (alt24) {
                case 1 :
                    // Xmu2.g:2855:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2530);
                    a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_0 != null) {
                    				if (a9_0 != null) {
                    					Object value = a9_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_0, true);
                    				copyLocalizationInfos(a9_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:2874:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2544);
                    a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_1 != null) {
                    				if (a9_1 != null) {
                    					Object value = a9_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_1, true);
                    				copyLocalizationInfos(a9_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:2893:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2558);
                    a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_2 != null) {
                    				if (a9_2 != null) {
                    					Object value = a9_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_2, true);
                    				copyLocalizationInfos(a9_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:2912:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2572);
                    a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_3 != null) {
                    				if (a9_3 != null) {
                    					Object value = a9_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_3, true);
                    				copyLocalizationInfos(a9_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:2931:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2586);
                    a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_4 != null) {
                    				if (a9_4 != null) {
                    					Object value = a9_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_4, true);
                    				copyLocalizationInfos(a9_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:2950:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2600);
                    a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_5 != null) {
                    				if (a9_5 != null) {
                    					Object value = a9_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_5, true);
                    				copyLocalizationInfos(a9_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:2969:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2614);
                    a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_6 != null) {
                    				if (a9_6 != null) {
                    					Object value = a9_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_6, true);
                    				copyLocalizationInfos(a9_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:2988:6: a9_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2628);
                    a9_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
                    				startIncompleteElement(element);
                    			}
                    			if (a9_7 != null) {
                    				if (a9_7 != null) {
                    					Object value = a9_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.LOOP_PATH__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_5, a9_7, true);
                    				copyLocalizationInfos(a9_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[248]);
            	}

            a10=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2646); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createLoopPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_10_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.pattern.PatternPackage.eINSTANCE.getObjectPatternExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[249]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[250]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[251]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[252]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[253]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[254]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[255]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[256]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[258]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[259]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[260]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[261]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[262]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[263]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[264]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[265]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[266]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[267]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[268]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[269]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[270]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[271]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[272]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[273]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[274]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[275]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[276]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_LoopPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"
    // Xmu2.g:3056:1: parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath returns [edu.ustb.sei.mde.xmu2.expression.FeaturePath element = null] : a0= '.' (a1= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.FeaturePath parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.FeaturePath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xmu2.g:3059:2: (a0= '.' (a1= NAME ) )
            // Xmu2.g:3060:2: a0= '.' (a1= NAME )
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath2675); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[277]);
            	}

            // Xmu2.g:3074:2: (a1= NAME )
            // Xmu2.g:3075:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath2693); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createFeaturePath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.FEATURE_PATH__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_11_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[278]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[279]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[280]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[281]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[282]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[283]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[284]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[285]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[286]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[287]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[288]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[289]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[290]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[291]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[292]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[293]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[294]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[295]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[296]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[297]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[298]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[299]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[300]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[301]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[302]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[303]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[304]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[305]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"
    // Xmu2.g:3139:1: parse_edu_ustb_sei_mde_xmu2_expression_OperationPath returns [edu.ustb.sei.mde.xmu2.expression.OperationPath element = null] : a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.OperationPath parse_edu_ustb_sei_mde_xmu2_expression_OperationPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.OperationPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a3_7 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xmu2.g:3142:2: (a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')' )
            // Xmu2.g:3143:2: a0= '.' (a1= NAME ) a2= '(' ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a6= ')'
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2729); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[306]);
            	}

            // Xmu2.g:3157:2: (a1= NAME )
            // Xmu2.g:3158:3: a1= NAME
            {
            a1=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2747); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__OPERATION), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[307]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2768); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[308]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[309]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[310]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[311]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[312]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[313]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[314]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[315]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[316]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[317]);
            	}

            // Xmu2.g:3216:2: ( ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==BOOLEAN||(LA28_0 >= NAME && LA28_0 <= QUOTED_39_39_92)||LA28_0==TYPE||LA28_0==16||LA28_0==22||(LA28_0 >= 52 && LA28_0 <= 53)||LA28_0==62) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // Xmu2.g:3217:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:3217:3: ( (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:3218:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:3218:4: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt25=8;
                    switch ( input.LA(1) ) {
                    case 52:
                        {
                        int LA25_1 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt25=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA25_2 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred50_Xmu2()) ) {
                            alt25=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA25_3 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 53:
                        {
                        int LA25_4 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 62:
                        {
                        int LA25_5 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA25_6 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA25_7 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA25_8 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA25_9 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA25_10 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA25_11 = input.LA(2);

                        if ( (synpred45_Xmu2()) ) {
                            alt25=1;
                        }
                        else if ( (synpred46_Xmu2()) ) {
                            alt25=2;
                        }
                        else if ( (synpred47_Xmu2()) ) {
                            alt25=3;
                        }
                        else if ( (synpred48_Xmu2()) ) {
                            alt25=4;
                        }
                        else if ( (synpred49_Xmu2()) ) {
                            alt25=5;
                        }
                        else if ( (synpred51_Xmu2()) ) {
                            alt25=7;
                        }
                        else if ( (true) ) {
                            alt25=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 0, input);

                        throw nvae;

                    }

                    switch (alt25) {
                        case 1 :
                            // Xmu2.g:3219:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2797);
                            a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_0 != null) {
                            						if (a3_0 != null) {
                            							Object value = a3_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_0, true);
                            						copyLocalizationInfos(a3_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:3238:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2817);
                            a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_1 != null) {
                            						if (a3_1 != null) {
                            							Object value = a3_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_1, true);
                            						copyLocalizationInfos(a3_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:3257:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2837);
                            a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_2 != null) {
                            						if (a3_2 != null) {
                            							Object value = a3_2;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_2, true);
                            						copyLocalizationInfos(a3_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:3276:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2857);
                            a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_3 != null) {
                            						if (a3_3 != null) {
                            							Object value = a3_3;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_3, true);
                            						copyLocalizationInfos(a3_3, element);
                            					}
                            				}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:3295:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2877);
                            a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_4 != null) {
                            						if (a3_4 != null) {
                            							Object value = a3_4;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_4, true);
                            						copyLocalizationInfos(a3_4, element);
                            					}
                            				}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:3314:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2897);
                            a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_5 != null) {
                            						if (a3_5 != null) {
                            							Object value = a3_5;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_5, true);
                            						copyLocalizationInfos(a3_5, element);
                            					}
                            				}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:3333:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2917);
                            a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_6 != null) {
                            						if (a3_6 != null) {
                            							Object value = a3_6;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_6, true);
                            						copyLocalizationInfos(a3_6, element);
                            					}
                            				}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:3352:10: a3_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2937);
                            a3_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_7 != null) {
                            						if (a3_7 != null) {
                            							Object value = a3_7;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_0, a3_7, true);
                            						copyLocalizationInfos(a3_7, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[318]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[319]);
                    			}

                    // Xmu2.g:3378:4: ( (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop27:
                    do {
                        int alt27=2;
                        int LA27_0 = input.LA(1);

                        if ( (LA27_0==21) ) {
                            alt27=1;
                        }


                        switch (alt27) {
                    	case 1 :
                    	    // Xmu2.g:3379:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:3379:5: (a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:3380:6: a4= ',' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a4=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2978); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[320]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[321]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[322]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[323]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[324]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[325]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[326]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[327]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getOperationPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[328]);
                    	    					}

                    	    // Xmu2.g:3402:6: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt26=8;
                    	    switch ( input.LA(1) ) {
                    	    case 52:
                    	        {
                    	        int LA26_1 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt26=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 22:
                    	        {
                    	        int LA26_2 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred57_Xmu2()) ) {
                    	            alt26=6;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NAME:
                    	        {
                    	        int LA26_3 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 53:
                    	        {
                    	        int LA26_4 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 62:
                    	        {
                    	        int LA26_5 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA26_6 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA26_7 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA26_8 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA26_9 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA26_10 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 10, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 16:
                    	        {
                    	        int LA26_11 = input.LA(2);

                    	        if ( (synpred52_Xmu2()) ) {
                    	            alt26=1;
                    	        }
                    	        else if ( (synpred53_Xmu2()) ) {
                    	            alt26=2;
                    	        }
                    	        else if ( (synpred54_Xmu2()) ) {
                    	            alt26=3;
                    	        }
                    	        else if ( (synpred55_Xmu2()) ) {
                    	            alt26=4;
                    	        }
                    	        else if ( (synpred56_Xmu2()) ) {
                    	            alt26=5;
                    	        }
                    	        else if ( (synpred58_Xmu2()) ) {
                    	            alt26=7;
                    	        }
                    	        else if ( (true) ) {
                    	            alt26=8;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 26, 11, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 26, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt26) {
                    	        case 1 :
                    	            // Xmu2.g:3403:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3012);
                    	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_0 != null) {
                    	            								if (a5_0 != null) {
                    	            									Object value = a5_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_0, true);
                    	            								copyLocalizationInfos(a5_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:3422:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3038);
                    	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_1 != null) {
                    	            								if (a5_1 != null) {
                    	            									Object value = a5_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_1, true);
                    	            								copyLocalizationInfos(a5_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 3 :
                    	            // Xmu2.g:3441:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3064);
                    	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_2 != null) {
                    	            								if (a5_2 != null) {
                    	            									Object value = a5_2;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_2, true);
                    	            								copyLocalizationInfos(a5_2, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 4 :
                    	            // Xmu2.g:3460:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3090);
                    	            a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_3 != null) {
                    	            								if (a5_3 != null) {
                    	            									Object value = a5_3;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_3, true);
                    	            								copyLocalizationInfos(a5_3, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 5 :
                    	            // Xmu2.g:3479:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3116);
                    	            a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_4 != null) {
                    	            								if (a5_4 != null) {
                    	            									Object value = a5_4;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_4, true);
                    	            								copyLocalizationInfos(a5_4, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 6 :
                    	            // Xmu2.g:3498:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3142);
                    	            a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_5 != null) {
                    	            								if (a5_5 != null) {
                    	            									Object value = a5_5;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_5, true);
                    	            								copyLocalizationInfos(a5_5, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 7 :
                    	            // Xmu2.g:3517:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3168);
                    	            a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_6 != null) {
                    	            								if (a5_6 != null) {
                    	            									Object value = a5_6;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_6, true);
                    	            								copyLocalizationInfos(a5_6, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 8 :
                    	            // Xmu2.g:3536:14: a5_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3194);
                    	            a5_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_7 != null) {
                    	            								if (a5_7 != null) {
                    	            									Object value = a5_7;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OPERATION_PATH__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_3_0_0_1_0_0_1, a5_7, true);
                    	            								copyLocalizationInfos(a5_7, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[329]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[330]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop27;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[331]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[332]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[333]);
            	}

            a6=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3268); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createOperationPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_12_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[334]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[335]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[336]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[337]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[338]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[339]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[340]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[341]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[342]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[343]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[344]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[345]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[346]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[347]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[348]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[349]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[350]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[351]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[352]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[353]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[354]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[355]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[356]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[357]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[358]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[359]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[360]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[361]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_OperationPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"
    // Xmu2.g:3620:1: parse_edu_ustb_sei_mde_xmu2_expression_PositionPath returns [edu.ustb.sei.mde.xmu2.expression.PositionPath element = null] : a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.PositionPath parse_edu_ustb_sei_mde_xmu2_expression_PositionPath() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PositionPath element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        Token a8=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a7_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xmu2.g:3623:2: (a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')' )
            // Xmu2.g:3624:2: a0= '->' ( (a1= 'first' |a2= 'last' |a3= 'at' ) ) a6= '(' ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )? a8= ')'
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3297); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[362]);
            	}

            // Xmu2.g:3638:2: ( (a1= 'first' |a2= 'last' |a3= 'at' ) )
            // Xmu2.g:3639:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            {
            // Xmu2.g:3639:3: (a1= 'first' |a2= 'last' |a3= 'at' )
            int alt29=3;
            switch ( input.LA(1) ) {
            case 45:
                {
                alt29=1;
                }
                break;
            case 49:
                {
                alt29=2;
                }
                break;
            case 37:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;

            }

            switch (alt29) {
                case 1 :
                    // Xmu2.g:3640:4: a1= 'first'
                    {
                    a1=(Token)match(input,45,FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3320); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.FIRST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:3653:8: a2= 'last'
                    {
                    a2=(Token)match(input,49,FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3335); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.LAST_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:3666:8: a3= 'at'
                    {
                    a3=(Token)match(input,37,FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3350); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getPositionOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.PositionOperator.AT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[363]);
            	}

            a6=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3371); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[364]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[365]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[366]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[367]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[368]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[369]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[370]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[371]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPositionPath(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[372]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[373]);
            	}

            // Xmu2.g:3709:2: ( (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==BOOLEAN||(LA31_0 >= NAME && LA31_0 <= QUOTED_39_39_92)||LA31_0==TYPE||LA31_0==16||LA31_0==22||(LA31_0 >= 52 && LA31_0 <= 53)||LA31_0==62) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // Xmu2.g:3710:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    {
                    // Xmu2.g:3710:3: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt30=8;
                    switch ( input.LA(1) ) {
                    case 52:
                        {
                        int LA30_1 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt30=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 22:
                        {
                        int LA30_2 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred68_Xmu2()) ) {
                            alt30=6;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NAME:
                        {
                        int LA30_3 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 53:
                        {
                        int LA30_4 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 62:
                        {
                        int LA30_5 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA30_6 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA30_7 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA30_8 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA30_9 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA30_10 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA30_11 = input.LA(2);

                        if ( (synpred63_Xmu2()) ) {
                            alt30=1;
                        }
                        else if ( (synpred64_Xmu2()) ) {
                            alt30=2;
                        }
                        else if ( (synpred65_Xmu2()) ) {
                            alt30=3;
                        }
                        else if ( (synpred66_Xmu2()) ) {
                            alt30=4;
                        }
                        else if ( (synpred67_Xmu2()) ) {
                            alt30=5;
                        }
                        else if ( (synpred69_Xmu2()) ) {
                            alt30=7;
                        }
                        else if ( (true) ) {
                            alt30=8;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 30, 11, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                        throw nvae;

                    }

                    switch (alt30) {
                        case 1 :
                            // Xmu2.g:3711:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3394);
                            a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_0 != null) {
                            					if (a7_0 != null) {
                            						Object value = a7_0;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_0, true);
                            					copyLocalizationInfos(a7_0, element);
                            				}
                            			}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:3730:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3411);
                            a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_1 != null) {
                            					if (a7_1 != null) {
                            						Object value = a7_1;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_1, true);
                            					copyLocalizationInfos(a7_1, element);
                            				}
                            			}

                            }
                            break;
                        case 3 :
                            // Xmu2.g:3749:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3428);
                            a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_2 != null) {
                            					if (a7_2 != null) {
                            						Object value = a7_2;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_2, true);
                            					copyLocalizationInfos(a7_2, element);
                            				}
                            			}

                            }
                            break;
                        case 4 :
                            // Xmu2.g:3768:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3445);
                            a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_3 != null) {
                            					if (a7_3 != null) {
                            						Object value = a7_3;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_3, true);
                            					copyLocalizationInfos(a7_3, element);
                            				}
                            			}

                            }
                            break;
                        case 5 :
                            // Xmu2.g:3787:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3462);
                            a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_4 != null) {
                            					if (a7_4 != null) {
                            						Object value = a7_4;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_4, true);
                            					copyLocalizationInfos(a7_4, element);
                            				}
                            			}

                            }
                            break;
                        case 6 :
                            // Xmu2.g:3806:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3479);
                            a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_5 != null) {
                            					if (a7_5 != null) {
                            						Object value = a7_5;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_5, true);
                            					copyLocalizationInfos(a7_5, element);
                            				}
                            			}

                            }
                            break;
                        case 7 :
                            // Xmu2.g:3825:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3496);
                            a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_6 != null) {
                            					if (a7_6 != null) {
                            						Object value = a7_6;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_6, true);
                            					copyLocalizationInfos(a7_6, element);
                            				}
                            			}

                            }
                            break;
                        case 8 :
                            // Xmu2.g:3844:8: a7_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3513);
                            a7_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
                            					startIncompleteElement(element);
                            				}
                            				if (a7_7 != null) {
                            					if (a7_7 != null) {
                            						Object value = a7_7;
                            						element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.POSITION_PATH__VALUE), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_3, a7_7, true);
                            					copyLocalizationInfos(a7_7, element);
                            				}
                            			}

                            }
                            break;

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[374]);
            	}

            a8=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3539); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPositionPath();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_13_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[375]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[376]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[377]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[378]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[379]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[380]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[381]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[382]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[383]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[384]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[385]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[386]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[387]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[388]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[389]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[390]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[391]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[392]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[393]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[394]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[395]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[396]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[397]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[398]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[399]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[400]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[401]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[402]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PositionPath"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"
    // Xmu2.g:3913:1: parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression returns [edu.ustb.sei.mde.xmu2.expression.VariableExpression element = null] : (a0= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.VariableExpression parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.VariableExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xmu2.g:3916:2: ( (a0= NAME ) )
            // Xmu2.g:3917:2: (a0= NAME )
            {
            // Xmu2.g:3917:2: (a0= NAME )
            // Xmu2.g:3918:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3572); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createVariableExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.VARIABLE_EXPRESSION__VARIABLE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_14_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[403]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[404]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[405]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[406]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[407]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[408]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[409]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[410]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[413]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[414]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[415]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[416]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[417]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[418]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[419]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[420]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[426]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[428]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[429]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[430]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"
    // Xmu2.g:3982:1: parse_edu_ustb_sei_mde_xmu2_expression_PathExpression returns [edu.ustb.sei.mde.xmu2.expression.PathExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.PathExpression parse_edu_ustb_sei_mde_xmu2_expression_PathExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.ConstantExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.Path a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xmu2.g:3985:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+ )
            // Xmu2.g:3986:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression ) ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            {
            // Xmu2.g:3986:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt32=3;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt32=1;
                }
                break;
            case BOOLEAN:
            case NUMBER:
            case OBJ_URI:
            case QUOTED_39_39_92:
            case TYPE:
            case 53:
            case 62:
                {
                alt32=2;
                }
                break;
            case 16:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;

            }

            switch (alt32) {
                case 1 :
                    // Xmu2.g:3987:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3612);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_15_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4006:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3626);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_15_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4025:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3640);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__HOST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_15_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[431]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[432]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[433]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[434]);
            	}

            // Xmu2.g:4053:2: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path ) )+
            int cnt33=0;
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==23) ) {
                    int LA33_2 = input.LA(2);

                    if ( (LA33_2==37||(LA33_2 >= 44 && LA33_2 <= 46)||LA33_2==49||LA33_2==57) ) {
                        alt33=1;
                    }


                }
                else if ( (LA33_0==24) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // Xmu2.g:4054:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    {
            	    // Xmu2.g:4054:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path )
            	    // Xmu2.g:4055:4: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_Path
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3667);
            	    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_Path();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createPathExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PATH_EXPRESSION__PATH, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_15_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt33 >= 1 ) break loop33;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(33, input);
                        throw eee;
                }
                cnt33++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[435]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[436]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[437]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[438]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[439]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[443]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[452]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[456]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[457]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[458]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[459]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[460]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[461]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[462]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_PathExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"
    // Xmu2.g:4110:1: parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression returns [edu.ustb.sei.mde.xmu2.expression.EmptyExpression element = null] : ( (a0= 'null' |a1= 'undefined' ) ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EmptyExpression parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EmptyExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xmu2.g:4113:2: ( ( (a0= 'null' |a1= 'undefined' ) ) )
            // Xmu2.g:4114:2: ( (a0= 'null' |a1= 'undefined' ) )
            {
            // Xmu2.g:4114:2: ( (a0= 'null' |a1= 'undefined' ) )
            // Xmu2.g:4115:3: (a0= 'null' |a1= 'undefined' )
            {
            // Xmu2.g:4115:3: (a0= 'null' |a1= 'undefined' )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==53) ) {
                alt34=1;
            }
            else if ( (LA34_0==62) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;

            }
            switch (alt34) {
                case 1 :
                    // Xmu2.g:4116:4: a0= 'null'
                    {
                    a0=(Token)match(input,53,FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression3717); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.NULL_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4129:8: a1= 'undefined'
                    {
                    a1=(Token)match(input,62,FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression3732); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEmptyExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_16_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getEmptyValueType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.expression.EmptyValueType.EMPTY_VALUE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.EMPTY_EXPRESSION__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[463]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[464]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[465]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[466]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[467]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[468]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[469]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[470]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[471]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[472]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[473]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[474]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[475]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[476]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[477]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[478]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[479]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[480]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[481]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[482]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[483]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[484]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[485]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[486]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[487]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[488]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[489]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[490]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"
    // Xmu2.g:4178:1: parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element = null] : (a0= QUOTED_39_39_92 ) ;
    public final edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xmu2.g:4181:2: ( (a0= QUOTED_39_39_92 ) )
            // Xmu2.g:4182:2: (a0= QUOTED_39_39_92 )
            {
            // Xmu2.g:4182:2: (a0= QUOTED_39_39_92 )
            // Xmu2.g:4183:3: a0= QUOTED_39_39_92
            {
            a0=(Token)match(input,QUOTED_39_39_92,FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression3772); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createStringLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_39_39_92");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.STRING_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_17_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[491]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[492]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[493]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[494]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[495]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[496]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[497]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[498]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[499]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[500]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[501]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[502]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[503]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[504]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[505]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[506]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[507]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[508]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[509]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[510]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[511]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[512]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[513]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[514]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[515]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[516]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[517]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[518]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"
    // Xmu2.g:4247:1: parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element = null] : (a0= NUMBER ) ;
    public final edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xmu2.g:4250:2: ( (a0= NUMBER ) )
            // Xmu2.g:4251:2: (a0= NUMBER )
            {
            // Xmu2.g:4251:2: (a0= NUMBER )
            // Xmu2.g:4252:3: a0= NUMBER
            {
            a0=(Token)match(input,NUMBER,FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression3812); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createIntegerLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NUMBER");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.INTEGER_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_18_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[519]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[520]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[521]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[522]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[523]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[524]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[525]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[526]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[527]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[528]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[529]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[530]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[531]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[532]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[533]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[534]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[535]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[536]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[537]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[538]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[539]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[540]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[541]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[542]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[543]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[544]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[546]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"
    // Xmu2.g:4316:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element = null] : (a0= BOOLEAN ) ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xmu2.g:4319:2: ( (a0= BOOLEAN ) )
            // Xmu2.g:4320:2: (a0= BOOLEAN )
            {
            // Xmu2.g:4320:2: (a0= BOOLEAN )
            // Xmu2.g:4321:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression3852); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_19_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[547]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[548]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[549]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[550]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[551]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[552]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[553]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[554]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[555]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[556]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[557]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[558]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[559]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[560]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[561]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[562]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[563]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[564]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[565]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[566]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[567]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[568]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[569]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[570]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[571]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[572]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[573]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[574]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"
    // Xmu2.g:4385:1: parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression returns [edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element = null] : (a0= TYPE ) a1= '::' (a2= NAME ) ;
    public final edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xmu2.g:4388:2: ( (a0= TYPE ) a1= '::' (a2= NAME ) )
            // Xmu2.g:4389:2: (a0= TYPE ) a1= '::' (a2= NAME )
            {
            // Xmu2.g:4389:2: (a0= TYPE )
            // Xmu2.g:4390:3: a0= TYPE
            {
            a0=(Token)match(input,TYPE,FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression3892); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TYPE");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnum proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnum();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnum>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__TYPE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_20_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[575]);
            	}

            a1=(Token)match(input,27,FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression3913); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_20_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[576]);
            	}

            // Xmu2.g:4443:2: (a2= NAME )
            // Xmu2.g:4444:3: a2= NAME
            {
            a2=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression3931); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createEnumLiteralExpression();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EEnumLiteral proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEEnumLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression, org.eclipse.emf.ecore.EEnumLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralExpressionValueReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ENUM_LITERAL_EXPRESSION__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_20_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[577]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[578]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[579]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[580]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[581]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[582]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[583]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[584]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[585]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[586]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[587]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[588]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[589]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[590]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[591]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[592]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[593]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[594]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[595]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[596]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[597]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[598]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[599]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[600]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[601]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[602]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[603]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[604]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"
    // Xmu2.g:4512:1: parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression returns [edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element = null] : (a0= OBJ_URI ) ;
    public final edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xmu2.g:4515:2: ( (a0= OBJ_URI ) )
            // Xmu2.g:4516:2: (a0= OBJ_URI )
            {
            // Xmu2.g:4516:2: (a0= OBJ_URI )
            // Xmu2.g:4517:3: a0= OBJ_URI
            {
            a0=(Token)match(input,OBJ_URI,FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression3971); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createObjectURIExpression();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OBJ_URI");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.eclipse.emf.ecore.EObject proxy = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEObject();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression, org.eclipse.emf.ecore.EObject>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectURIExpressionObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.OBJECT_URI_EXPRESSION__OBJECT), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_21_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[605]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[606]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[607]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[608]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[609]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[610]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[611]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[612]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[613]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[614]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[615]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[616]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[617]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[618]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[619]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[620]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[621]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[626]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[627]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[630]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[632]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"
    // Xmu2.g:4585:1: parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression returns [edu.ustb.sei.mde.xmu2.expression.ParenExpression element = null] : a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' ;
    public final edu.ustb.sei.mde.xmu2.expression.ParenExpression parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ParenExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_7 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xmu2.g:4588:2: (a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')' )
            // Xmu2.g:4589:2: a0= '(' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= ')'
            {
            a0=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4007); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[633]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[636]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[637]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[638]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[639]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getParenExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[641]);
            	}

            // Xmu2.g:4611:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt35=8;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA35_1 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt35=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA35_2 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred80_Xmu2()) ) {
                    alt35=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA35_3 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA35_4 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA35_5 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA35_6 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA35_7 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA35_8 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA35_9 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA35_10 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA35_11 = input.LA(2);

                if ( (synpred75_Xmu2()) ) {
                    alt35=1;
                }
                else if ( (synpred76_Xmu2()) ) {
                    alt35=2;
                }
                else if ( (synpred77_Xmu2()) ) {
                    alt35=3;
                }
                else if ( (synpred78_Xmu2()) ) {
                    alt35=4;
                }
                else if ( (synpred79_Xmu2()) ) {
                    alt35=5;
                }
                else if ( (synpred81_Xmu2()) ) {
                    alt35=7;
                }
                else if ( (true) ) {
                    alt35=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;

            }

            switch (alt35) {
                case 1 :
                    // Xmu2.g:4612:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4025);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4631:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4039);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4650:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4053);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:4669:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4067);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:4688:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4081);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:4707:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4095);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:4726:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4109);
                    a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_6 != null) {
                    				if (a1_6 != null) {
                    					Object value = a1_6;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_6, true);
                    				copyLocalizationInfos(a1_6, element);
                    			}
                    		}

                    }
                    break;
                case 8 :
                    // Xmu2.g:4745:6: a1_7= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4123);
                    a1_7=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_7 != null) {
                    				if (a1_7 != null) {
                    					Object value = a1_7;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.PAREN_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_1, a1_7, true);
                    				copyLocalizationInfos(a1_7, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[642]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4141); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createParenExpression();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_22_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[643]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[644]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[645]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[646]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[647]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[648]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[649]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[650]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[651]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[652]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getPathExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[653]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[654]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[655]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[656]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[657]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[658]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[659]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[660]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[661]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[662]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[663]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[664]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[665]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[666]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[667]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[668]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[669]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[670]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"
    // Xmu2.g:4813:1: parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression returns [edu.ustb.sei.mde.xmu2.expression.UnaryExpression element = null] : ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.UnaryExpression parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xmu2.g:4816:2: ( ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:4817:2: ( (a0= 'not' |a1= '-' ) ) (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:4817:2: ( (a0= 'not' |a1= '-' ) )
            // Xmu2.g:4818:3: (a0= 'not' |a1= '-' )
            {
            // Xmu2.g:4818:3: (a0= 'not' |a1= '-' )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==52) ) {
                alt36=1;
            }
            else if ( (LA36_0==22) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }
            switch (alt36) {
                case 1 :
                    // Xmu2.g:4819:4: a0= 'not'
                    {
                    a0=(Token)match(input,52,FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4179); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.NOT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4832:8: a1= '-'
                    {
                    a1=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4194); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getUnaryOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.UnaryOperator.MINUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[671]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[672]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[673]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[674]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[675]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[676]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[677]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getUnaryExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[678]);
            	}

            // Xmu2.g:4859:2: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt37=2;
            switch ( input.LA(1) ) {
            case NAME:
                {
                int LA37_1 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 1, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA37_2 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 2, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA37_3 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 3, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA37_4 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 4, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA37_5 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 5, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA37_6 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 6, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA37_7 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 7, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA37_8 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 8, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA37_9 = input.LA(2);

                if ( (synpred83_Xmu2()) ) {
                    alt37=1;
                }
                else if ( (true) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 9, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;

            }

            switch (alt37) {
                case 1 :
                    // Xmu2.g:4860:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4219);
                    a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4879:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4233);
                    a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createUnaryExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.UNARY_EXPRESSION__BODY), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_23_0_0_1, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[679]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[680]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[681]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[682]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[683]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[684]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[685]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[686]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[687]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[688]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[689]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[690]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[691]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[692]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[693]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[694]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[695]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[696]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[697]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[698]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[699]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[700]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"
    // Xmu2.g:4927:1: parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression returns [edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xmu2.g:4930:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:4931:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:4931:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt38=3;
            switch ( input.LA(1) ) {
            case 22:
            case 52:
                {
                alt38=1;
                }
                break;
            case NAME:
                {
                int LA38_3 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA38_4 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA38_5 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA38_6 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA38_7 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA38_8 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA38_9 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA38_10 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA38_11 = input.LA(2);

                if ( (synpred85_Xmu2()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;

            }

            switch (alt38) {
                case 1 :
                    // Xmu2.g:4932:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4270);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:4951:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4284);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:4970:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4298);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[701]);
            	}

            // Xmu2.g:4995:2: ( ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt41=0;
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==18||LA41_0==25) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // Xmu2.g:4996:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:4996:3: ( ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:4997:4: ( (a1= '*' |a2= '/' ) ) (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:4997:4: ( (a1= '*' |a2= '/' ) )
            	    // Xmu2.g:4998:5: (a1= '*' |a2= '/' )
            	    {
            	    // Xmu2.g:4998:5: (a1= '*' |a2= '/' )
            	    int alt39=2;
            	    int LA39_0 = input.LA(1);

            	    if ( (LA39_0==18) ) {
            	        alt39=1;
            	    }
            	    else if ( (LA39_0==25) ) {
            	        alt39=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 39, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt39) {
            	        case 1 :
            	            // Xmu2.g:4999:6: a1= '*'
            	            {
            	            a1=(Token)match(input,18,FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4338); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.MUL_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5012:12: a2= '/'
            	            {
            	            a2=(Token)match(input,25,FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4357); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getMultiplicativeOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.MultiplicativeOperator.DIV_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[702]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[703]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[704]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[705]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[706]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[707]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[708]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[709]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getMultiplicativeExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[710]);
            	    			}

            	    // Xmu2.g:5040:4: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt40=3;
            	    switch ( input.LA(1) ) {
            	    case 22:
            	    case 52:
            	        {
            	        alt40=1;
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA40_3 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 53:
            	        {
            	        int LA40_4 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 62:
            	        {
            	        int LA40_5 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA40_6 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA40_7 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA40_8 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA40_9 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA40_10 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA40_11 = input.LA(2);

            	        if ( (synpred88_Xmu2()) ) {
            	            alt40=2;
            	        }
            	        else if ( (true) ) {
            	            alt40=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 40, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 40, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt40) {
            	        case 1 :
            	            // Xmu2.g:5041:5: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4394);
            	            a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_0 != null) {
            	            						if (a5_0 != null) {
            	            							Object value = a5_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1_0_0_1, a5_0, true);
            	            						copyLocalizationInfos(a5_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5060:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4414);
            	            a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_1 != null) {
            	            						if (a5_1 != null) {
            	            							Object value = a5_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1_0_0_1, a5_1, true);
            	            						copyLocalizationInfos(a5_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5079:10: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4434);
            	            a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createMultiplicativeExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a5_2 != null) {
            	            						if (a5_2 != null) {
            	            							Object value = a5_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.MULTIPLICATIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_24_0_0_1_0_0_1, a5_2, true);
            	            						copyLocalizationInfos(a5_2, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[711]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[712]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[713]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[714]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[715]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[716]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[717]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[718]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[719]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[720]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[721]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[722]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[723]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt41 >= 1 ) break loop41;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(41, input);
                        throw eee;
                }
                cnt41++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[726]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[736]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"
    // Xmu2.g:5137:1: parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression returns [edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.AdditiveExpression parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a6_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xmu2.g:5140:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5141:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5141:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt42=4;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA42_1 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred91_Xmu2()) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA42_2 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred91_Xmu2()) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA42_3 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA42_4 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA42_5 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA42_6 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA42_7 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA42_8 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA42_9 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA42_10 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA42_11 = input.LA(2);

                if ( (synpred90_Xmu2()) ) {
                    alt42=1;
                }
                else if ( (synpred92_Xmu2()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // Xmu2.g:5142:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4494);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5161:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4508);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5180:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4522);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5199:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4536);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[737]);
            	}

            // Xmu2.g:5224:2: ( ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt45=0;
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0 >= 19 && LA45_0 <= 20)||LA45_0==22) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // Xmu2.g:5225:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:5225:3: ( ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:5226:4: ( (a1= '+' |a2= '-' |a3= '++' ) ) (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    // Xmu2.g:5226:4: ( (a1= '+' |a2= '-' |a3= '++' ) )
            	    // Xmu2.g:5227:5: (a1= '+' |a2= '-' |a3= '++' )
            	    {
            	    // Xmu2.g:5227:5: (a1= '+' |a2= '-' |a3= '++' )
            	    int alt43=3;
            	    switch ( input.LA(1) ) {
            	    case 19:
            	        {
            	        alt43=1;
            	        }
            	        break;
            	    case 22:
            	        {
            	        alt43=2;
            	        }
            	        break;
            	    case 20:
            	        {
            	        alt43=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 43, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt43) {
            	        case 1 :
            	            // Xmu2.g:5228:6: a1= '+'
            	            {
            	            a1=(Token)match(input,19,FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4576); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.ADD_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5241:12: a2= '-'
            	            {
            	            a2=(Token)match(input,22,FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4595); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.SUB_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5254:12: a3= '++'
            	            {
            	            a3=(Token)match(input,20,FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4614); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getAdditiveOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.AdditiveOperator.APPEND_VALUE).getInstance();
            	            						addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERATORS, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[738]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[739]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[740]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[741]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[742]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[743]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[744]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[745]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getAdditiveExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[746]);
            	    			}

            	    // Xmu2.g:5282:4: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt44=4;
            	    switch ( input.LA(1) ) {
            	    case 52:
            	        {
            	        int LA44_1 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred96_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA44_2 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred96_Xmu2()) ) {
            	            alt44=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA44_3 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 53:
            	        {
            	        int LA44_4 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 62:
            	        {
            	        int LA44_5 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA44_6 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA44_7 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA44_8 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA44_9 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA44_10 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA44_11 = input.LA(2);

            	        if ( (synpred95_Xmu2()) ) {
            	            alt44=1;
            	        }
            	        else if ( (synpred97_Xmu2()) ) {
            	            alt44=3;
            	        }
            	        else if ( (true) ) {
            	            alt44=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 44, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt44) {
            	        case 1 :
            	            // Xmu2.g:5283:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4651);
            	            a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_0 != null) {
            	            						if (a6_0 != null) {
            	            							Object value = a6_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a6_0, true);
            	            						copyLocalizationInfos(a6_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5302:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4671);
            	            a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_1 != null) {
            	            						if (a6_1 != null) {
            	            							Object value = a6_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a6_1, true);
            	            						copyLocalizationInfos(a6_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5321:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4691);
            	            a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_2 != null) {
            	            						if (a6_2 != null) {
            	            							Object value = a6_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a6_2, true);
            	            						copyLocalizationInfos(a6_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:5340:10: a6_3= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4711);
            	            a6_3=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createAdditiveExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a6_3 != null) {
            	            						if (a6_3 != null) {
            	            							Object value = a6_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.ADDITIVE_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_25_0_0_1_0_0_1, a6_3, true);
            	            						copyLocalizationInfos(a6_3, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[747]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[748]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[749]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[750]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[751]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[752]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[753]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[754]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[755]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[756]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[757]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[758]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt45 >= 1 ) break loop45;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(45, input);
                        throw eee;
                }
                cnt45++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[770]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"
    // Xmu2.g:5396:1: parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression returns [edu.ustb.sei.mde.xmu2.expression.RelationalExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.expression.RelationalExpression parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a8_4 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xmu2.g:5399:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:5400:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            // Xmu2.g:5400:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt46=5;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA46_1 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred101_Xmu2()) ) {
                    alt46=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA46_2 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred101_Xmu2()) ) {
                    alt46=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA46_3 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA46_4 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA46_5 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA46_6 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA46_7 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA46_8 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA46_9 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA46_10 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA46_11 = input.LA(2);

                if ( (synpred99_Xmu2()) ) {
                    alt46=1;
                }
                else if ( (synpred100_Xmu2()) ) {
                    alt46=2;
                }
                else if ( (synpred102_Xmu2()) ) {
                    alt46=4;
                }
                else if ( (true) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }

            switch (alt46) {
                case 1 :
                    // Xmu2.g:5401:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4771);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5420:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4785);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5439:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4799);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5458:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4813);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:5477:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4827);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__LEFT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[771]);
            	}

            // Xmu2.g:5502:2: ( (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xmu2.g:5503:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xmu2.g:5503:3: (a1= '=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt47=5;
            switch ( input.LA(1) ) {
            case 31:
                {
                alt47=1;
                }
                break;
            case 29:
                {
                alt47=2;
                }
                break;
            case 30:
                {
                alt47=3;
                }
                break;
            case 32:
                {
                alt47=4;
                }
                break;
            case 33:
                {
                alt47=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;

            }

            switch (alt47) {
                case 1 :
                    // Xmu2.g:5504:4: a1= '='
                    {
                    a1=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4854); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5517:8: a2= '<'
                    {
                    a2=(Token)match(input,29,FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4869); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5530:8: a3= '<='
                    {
                    a3=(Token)match(input,30,FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4884); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.LESS_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5543:8: a4= '>'
                    {
                    a4=(Token)match(input,32,FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4899); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xmu2.g:5556:8: a5= '>='
                    {
                    a5=(Token)match(input,33,FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4914); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2common.Xmu2commonPackage.eINSTANCE.getRelationalOperator().getEEnumLiteral(edu.ustb.sei.mde.xmu2common.RelationalOperator.GREATER_EQUAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[772]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[773]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[774]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[775]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[776]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getRelationalExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[780]);
            	}

            // Xmu2.g:5584:2: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt48=5;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA48_1 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt48=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA48_2 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred109_Xmu2()) ) {
                    alt48=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA48_3 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA48_4 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA48_5 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA48_6 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA48_7 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA48_8 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA48_9 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA48_10 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA48_11 = input.LA(2);

                if ( (synpred107_Xmu2()) ) {
                    alt48=1;
                }
                else if ( (synpred108_Xmu2()) ) {
                    alt48=2;
                }
                else if ( (synpred110_Xmu2()) ) {
                    alt48=4;
                }
                else if ( (true) ) {
                    alt48=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;

            }

            switch (alt48) {
                case 1 :
                    // Xmu2.g:5585:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4939);
                    a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_2, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5604:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4953);
                    a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_2, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5623:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4967);
                    a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_2, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5642:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4981);
                    a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_2, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:5661:6: a8_4= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4995);
                    a8_4=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createRelationalExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_4 != null) {
                    				if (a8_4 != null) {
                    					Object value = a8_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.RELATIONAL_EXPRESSION__RIGHT), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_26_0_0_2, a8_4, true);
                    				copyLocalizationInfos(a8_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[782]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[783]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[784]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[785]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[786]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[787]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[788]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[789]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[790]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[791]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"
    // Xmu2.g:5698:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_5 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xmu2.g:5701:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:5702:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:5702:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt49=6;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA49_1 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA49_2 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred114_Xmu2()) ) {
                    alt49=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA49_3 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA49_4 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA49_5 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA49_6 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA49_7 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA49_8 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA49_9 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA49_10 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA49_11 = input.LA(2);

                if ( (synpred111_Xmu2()) ) {
                    alt49=1;
                }
                else if ( (synpred112_Xmu2()) ) {
                    alt49=2;
                }
                else if ( (synpred113_Xmu2()) ) {
                    alt49=3;
                }
                else if ( (synpred115_Xmu2()) ) {
                    alt49=5;
                }
                else if ( (true) ) {
                    alt49=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;

            }

            switch (alt49) {
                case 1 :
                    // Xmu2.g:5703:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5032);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:5722:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5046);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:5741:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5060);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:5760:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5074);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:5779:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5088);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:5798:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5102);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[792]);
            	}

            // Xmu2.g:5823:2: ( (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt51=0;
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==36) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // Xmu2.g:5824:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:5824:3: (a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:5825:4: a1= 'and' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,36,FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5129); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[793]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[794]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[795]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[796]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[797]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[798]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[799]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[800]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanAndExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[801]);
            	    			}

            	    // Xmu2.g:5847:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt50=6;
            	    switch ( input.LA(1) ) {
            	    case 52:
            	        {
            	        int LA50_1 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred119_Xmu2()) ) {
            	            alt50=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA50_2 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred119_Xmu2()) ) {
            	            alt50=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA50_3 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 53:
            	        {
            	        int LA50_4 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 62:
            	        {
            	        int LA50_5 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA50_6 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA50_7 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA50_8 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA50_9 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA50_10 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA50_11 = input.LA(2);

            	        if ( (synpred116_Xmu2()) ) {
            	            alt50=1;
            	        }
            	        else if ( (synpred117_Xmu2()) ) {
            	            alt50=2;
            	        }
            	        else if ( (synpred118_Xmu2()) ) {
            	            alt50=3;
            	        }
            	        else if ( (synpred120_Xmu2()) ) {
            	            alt50=5;
            	        }
            	        else if ( (true) ) {
            	            alt50=6;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 50, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 50, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt50) {
            	        case 1 :
            	            // Xmu2.g:5848:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5155);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:5867:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5175);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:5886:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5195);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:5905:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5215);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:5924:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5235);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:5943:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5255);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanAndExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_AND_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_27_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[802]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[803]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[804]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[805]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[806]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[807]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[808]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[809]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[810]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[811]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[812]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt51 >= 1 ) break loop51;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(51, input);
                        throw eee;
                }
                cnt51++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[813]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[814]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[815]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[816]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[817]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[820]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[823]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"
    // Xmu2.g:5997:1: parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression returns [edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element = null] : (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ ;
    public final edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex = input.index();

        Token a1=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a0_6 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;

        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_6 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xmu2.g:6000:2: ( (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+ )
            // Xmu2.g:6001:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            {
            // Xmu2.g:6001:2: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt52=7;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA52_1 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred126_Xmu2()) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA52_2 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred126_Xmu2()) ) {
                    alt52=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA52_3 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA52_4 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA52_5 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA52_6 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA52_7 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA52_8 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA52_9 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA52_10 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA52_11 = input.LA(2);

                if ( (synpred122_Xmu2()) ) {
                    alt52=1;
                }
                else if ( (synpred123_Xmu2()) ) {
                    alt52=2;
                }
                else if ( (synpred124_Xmu2()) ) {
                    alt52=3;
                }
                else if ( (synpred125_Xmu2()) ) {
                    alt52=4;
                }
                else if ( (synpred127_Xmu2()) ) {
                    alt52=6;
                }
                else if ( (true) ) {
                    alt52=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }

            switch (alt52) {
                case 1 :
                    // Xmu2.g:6002:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5315);
                    a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6021:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5329);
                    a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6040:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5343);
                    a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6059:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5357);
                    a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:6078:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5371);
                    a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_4 != null) {
                    				if (a0_4 != null) {
                    					Object value = a0_4;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_4, true);
                    				copyLocalizationInfos(a0_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:6097:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5385);
                    a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_5 != null) {
                    				if (a0_5 != null) {
                    					Object value = a0_5;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_5, true);
                    				copyLocalizationInfos(a0_5, element);
                    			}
                    		}

                    }
                    break;
                case 7 :
                    // Xmu2.g:6116:6: a0_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5399);
                    a0_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_6 != null) {
                    				if (a0_6 != null) {
                    					Object value = a0_6;
                    					addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_0, a0_6, true);
                    				copyLocalizationInfos(a0_6, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[824]);
            	}

            // Xmu2.g:6141:2: ( (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )+
            int cnt54=0;
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==54) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // Xmu2.g:6142:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    {
            	    // Xmu2.g:6142:3: (a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            	    // Xmu2.g:6143:4: a1= 'or' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    {
            	    a1=(Token)match(input,54,FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5426); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[825]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[826]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[827]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[828]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[829]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[830]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[831]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[832]);
            	    				addExpectedElement(edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.eINSTANCE.getBooleanOrExpression(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[833]);
            	    			}

            	    // Xmu2.g:6165:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression |a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression |a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            	    int alt53=7;
            	    switch ( input.LA(1) ) {
            	    case 52:
            	        {
            	        int LA53_1 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred132_Xmu2()) ) {
            	            alt53=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 1, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 22:
            	        {
            	        int LA53_2 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred132_Xmu2()) ) {
            	            alt53=5;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 2, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NAME:
            	        {
            	        int LA53_3 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 3, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 53:
            	        {
            	        int LA53_4 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 4, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 62:
            	        {
            	        int LA53_5 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 5, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case QUOTED_39_39_92:
            	        {
            	        int LA53_6 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 6, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case NUMBER:
            	        {
            	        int LA53_7 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 7, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case BOOLEAN:
            	        {
            	        int LA53_8 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 8, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case TYPE:
            	        {
            	        int LA53_9 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 9, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case OBJ_URI:
            	        {
            	        int LA53_10 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 10, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    case 16:
            	        {
            	        int LA53_11 = input.LA(2);

            	        if ( (synpred128_Xmu2()) ) {
            	            alt53=1;
            	        }
            	        else if ( (synpred129_Xmu2()) ) {
            	            alt53=2;
            	        }
            	        else if ( (synpred130_Xmu2()) ) {
            	            alt53=3;
            	        }
            	        else if ( (synpred131_Xmu2()) ) {
            	            alt53=4;
            	        }
            	        else if ( (synpred133_Xmu2()) ) {
            	            alt53=6;
            	        }
            	        else if ( (true) ) {
            	            alt53=7;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return element;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 53, 11, input);

            	            throw nvae;

            	        }
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 53, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt53) {
            	        case 1 :
            	            // Xmu2.g:6166:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5452);
            	            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xmu2.g:6185:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5472);
            	            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xmu2.g:6204:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5492);
            	            a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xmu2.g:6223:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5512);
            	            a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 5 :
            	            // Xmu2.g:6242:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5532);
            	            a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_4 != null) {
            	            						if (a2_4 != null) {
            	            							Object value = a2_4;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_4, true);
            	            						copyLocalizationInfos(a2_4, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 6 :
            	            // Xmu2.g:6261:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5552);
            	            a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_5 != null) {
            	            						if (a2_5 != null) {
            	            							Object value = a2_5;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_5, true);
            	            						copyLocalizationInfos(a2_5, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 7 :
            	            // Xmu2.g:6280:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
            	            {
            	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5572);
            	            a2_6=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = edu.ustb.sei.mde.xmu2.expression.ExpressionFactory.eINSTANCE.createBooleanOrExpression();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_6 != null) {
            	            						if (a2_6 != null) {
            	            							Object value = a2_6;
            	            							addObjectToList(element, edu.ustb.sei.mde.xmu2.expression.ExpressionPackage.BOOLEAN_OR_EXPRESSION__OPERANDS, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_28_0_0_1_0_0_1, a2_6, true);
            	            						copyLocalizationInfos(a2_6, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[834]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[835]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[836]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[837]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[838]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[839]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[840]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[841]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[842]);
            	    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[843]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt54 >= 1 ) break loop54;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(54, input);
                        throw eee;
                }
                cnt54++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[845]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[846]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[847]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[848]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[849]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[853]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"
    // Xmu2.g:6332:1: parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement returns [edu.ustb.sei.mde.xmu2.statement.BlockStatement element = null] : a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.BlockStatement parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.BlockStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xmu2.g:6335:2: (a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}' )
            // Xmu2.g:6336:2: a0= '{' ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )? a4= '}'
            {
            a0=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5628); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[854]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[855]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[856]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[863]);
            	}

            // Xmu2.g:6359:2: ( ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==NAME||(LA56_0 >= 41 && LA56_0 <= 42)||LA56_0==47||LA56_0==58||LA56_0==60||LA56_0==65||LA56_0==68) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // Xmu2.g:6360:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    {
                    // Xmu2.g:6360:3: ( (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )* )
                    // Xmu2.g:6361:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    {
                    // Xmu2.g:6361:4: (a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    // Xmu2.g:6362:5: a1_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5657);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[864]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[865]);
                    			}

                    // Xmu2.g:6388:4: ( (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==28) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // Xmu2.g:6389:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    {
                    	    // Xmu2.g:6389:5: (a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
                    	    // Xmu2.g:6390:6: a2= ';' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    {
                    	    a2=(Token)match(input,28,FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5698); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[866]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[867]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[868]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[869]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[870]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[871]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[872]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[873]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getBlockStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[874]);
                    	    					}

                    	    // Xmu2.g:6412:6: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
                    	    // Xmu2.g:6413:7: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
                    	    {
                    	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5732);
                    	    a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a3_0 != null) {
                    	    								if (a3_0 != null) {
                    	    									Object value = a3_0;
                    	    									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.BLOCK_STATEMENT__BODY, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_1_0_0_1_0_0_1, a3_0, true);
                    	    								copyLocalizationInfos(a3_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[875]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[876]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[877]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[878]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[879]);
            	}

            a4=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5806); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createBlockStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_29_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[880]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[884]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[885]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[886]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[887]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"
    // Xmu2.g:6477:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement returns [edu.ustb.sei.mde.xmu2.statement.UpdateStatement element = null] : a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateStatement parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.pattern.Pattern a3_0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xmu2.g:6480:2: (a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+ )
            // Xmu2.g:6481:2: a0= 'update' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= 'with' (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a4= 'by' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            {
            a0=(Token)match(input,65,FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5835); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[888]);
            	}

            // Xmu2.g:6495:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:6496:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5853);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[889]);
            	}

            a2=(Token)match(input,67,FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5871); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[890]);
            	}

            // Xmu2.g:6535:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:6536:3: a3_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5889);
            a3_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__VIEW), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[891]);
            	}

            a4=(Token)match(input,38,FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5907); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[892]);
            	}

            // Xmu2.g:6575:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )+
            int cnt57=0;
            loop57:
            do {
                int alt57=2;
                switch ( input.LA(1) ) {
                case 50:
                    {
                    int LA57_2 = input.LA(2);

                    if ( (synpred137_Xmu2()) ) {
                        alt57=1;
                    }


                    }
                    break;
                case 63:
                    {
                    int LA57_3 = input.LA(2);

                    if ( (synpred137_Xmu2()) ) {
                        alt57=1;
                    }


                    }
                    break;
                case 64:
                    {
                    int LA57_4 = input.LA(2);

                    if ( (synpred137_Xmu2()) ) {
                        alt57=1;
                    }


                    }
                    break;
                case 40:
                    {
                    int LA57_5 = input.LA(2);

                    if ( (synpred137_Xmu2()) ) {
                        alt57=1;
                    }


                    }
                    break;

                }

                switch (alt57) {
            	case 1 :
            	    // Xmu2.g:6576:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    {
            	    // Xmu2.g:6576:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
            	    // Xmu2.g:6577:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5930);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_STATEMENT__CLAUSES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_30_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt57 >= 1 ) break loop57;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(57, input);
                        throw eee;
                }
                cnt57++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[893]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[894]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[895]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[896]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[897]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[900]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"
    // Xmu2.g:6612:1: parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement returns [edu.ustb.sei.mde.xmu2.statement.SwitchStatement element = null] : a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' ;
    public final edu.ustb.sei.mde.xmu2.statement.SwitchStatement parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.SwitchStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.statement.CaseClause a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xmu2.g:6615:2: (a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}' )
            // Xmu2.g:6616:2: a0= 'switch' a1= '(' (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a3= ')' a4= '{' ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+ a6= '}'
            {
            a0=(Token)match(input,60,FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement5971); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[901]);
            	}

            a1=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement5985); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[902]);
            	}

            // Xmu2.g:6644:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:6645:3: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6003);
            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__ROOT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[903]);
            	}

            a3=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6021); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[904]);
            	}

            a4=(Token)match(input,68,FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6035); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[905]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[906]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[907]);
            	}

            // Xmu2.g:6700:2: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause ) )+
            int cnt58=0;
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==39||LA58_0==55) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // Xmu2.g:6701:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    {
            	    // Xmu2.g:6701:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause )
            	    // Xmu2.g:6702:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_CaseClause
            	    {
            	    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6058);
            	    a5_0=parse_edu_ustb_sei_mde_xmu2_statement_CaseClause();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a5_0 != null) {
            	    					if (a5_0 != null) {
            	    						Object value = a5_0;
            	    						addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.SWITCH_STATEMENT__CASES, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_5, a5_0, true);
            	    					copyLocalizationInfos(a5_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt58 >= 1 ) break loop58;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(58, input);
                        throw eee;
                }
                cnt58++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[908]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[911]);
            	}

            a6=(Token)match(input,70,FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6084); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSwitchStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_31_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[912]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[913]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[914]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[915]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[916]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[917]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[919]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"
    // Xmu2.g:6754:1: parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause returns [edu.ustb.sei.mde.xmu2.statement.UpdateClause element = null] : ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.UpdateClause parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a6=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xmu2.g:6757:2: ( ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:6758:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) ) a6= '->' (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            // Xmu2.g:6758:2: ( (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' ) )
            // Xmu2.g:6759:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            {
            // Xmu2.g:6759:3: (a0= 'match' |a1= 'unmatchs' |a2= 'unmatchv' |a3= 'default' )
            int alt59=4;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt59=1;
                }
                break;
            case 63:
                {
                alt59=2;
                }
                break;
            case 64:
                {
                alt59=3;
                }
                break;
            case 40:
                {
                alt59=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }

            switch (alt59) {
                case 1 :
                    // Xmu2.g:6760:4: a0= 'match'
                    {
                    a0=(Token)match(input,50,FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6122); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.MATCH_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xmu2.g:6773:8: a1= 'unmatchs'
                    {
                    a1=(Token)match(input,63,FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6137); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xmu2.g:6786:8: a2= 'unmatchv'
                    {
                    a2=(Token)match(input,64,FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6152); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.UNMATCHV_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xmu2.g:6799:8: a3= 'default'
                    {
                    a3=(Token)match(input,40,FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6167); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getActionType().getEEnumLiteral(edu.ustb.sei.mde.xmu2.statement.ActionType.DEFAULT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__TYPE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[920]);
            	}

            a6=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6188); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[922]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[923]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[924]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[925]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[926]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[927]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[929]);
            	}

            // Xmu2.g:6841:2: (a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:6842:3: a7_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6206);
            a7_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createUpdateClause();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.UPDATE_CLAUSE__STATEMENT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_32_0_0_2, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[935]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[937]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"
    // Xmu2.g:6876:1: parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause returns [edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.PatternCaseClause parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xmu2.g:6879:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:6880:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,39,FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6239); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[938]);
            	}

            // Xmu2.g:6894:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:6895:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6257);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__CONDITION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[939]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6275); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[943]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[945]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[946]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[947]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getPatternCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[948]);
            	}

            // Xmu2.g:6942:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:6943:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6293);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createPatternCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.PATTERN_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_33_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[949]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[950]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[951]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[952]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"
    // Xmu2.g:6973:1: parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause returns [edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element = null] : a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;

        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a1_5 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xmu2.g:6976:2: (a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:6977:2: a0= 'case' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,39,FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6326); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[953]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[954]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[955]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[956]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[957]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[958]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[959]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[961]);
            	}

            // Xmu2.g:6999:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression |a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression |a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression |a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt60=6;
            switch ( input.LA(1) ) {
            case 52:
                {
                int LA60_1 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred145_Xmu2()) ) {
                    alt60=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA60_2 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred145_Xmu2()) ) {
                    alt60=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 2, input);

                    throw nvae;

                }
                }
                break;
            case NAME:
                {
                int LA60_3 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA60_4 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA60_5 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA60_6 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA60_7 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA60_8 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA60_9 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA60_10 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA60_11 = input.LA(2);

                if ( (synpred142_Xmu2()) ) {
                    alt60=1;
                }
                else if ( (synpred143_Xmu2()) ) {
                    alt60=2;
                }
                else if ( (synpred144_Xmu2()) ) {
                    alt60=3;
                }
                else if ( (synpred146_Xmu2()) ) {
                    alt60=5;
                }
                else if ( (true) ) {
                    alt60=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;

            }

            switch (alt60) {
                case 1 :
                    // Xmu2.g:7000:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6344);
                    a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_0 != null) {
                    				if (a1_0 != null) {
                    					Object value = a1_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_0, true);
                    				copyLocalizationInfos(a1_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:7019:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6358);
                    a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_1 != null) {
                    				if (a1_1 != null) {
                    					Object value = a1_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_1, true);
                    				copyLocalizationInfos(a1_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:7038:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6372);
                    a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_2 != null) {
                    				if (a1_2 != null) {
                    					Object value = a1_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_2, true);
                    				copyLocalizationInfos(a1_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xmu2.g:7057:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6386);
                    a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_3 != null) {
                    				if (a1_3 != null) {
                    					Object value = a1_3;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_3, true);
                    				copyLocalizationInfos(a1_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xmu2.g:7076:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6400);
                    a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_4 != null) {
                    				if (a1_4 != null) {
                    					Object value = a1_4;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_4, true);
                    				copyLocalizationInfos(a1_4, element);
                    			}
                    		}

                    }
                    break;
                case 6 :
                    // Xmu2.g:7095:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6414);
                    a1_5=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
                    				startIncompleteElement(element);
                    			}
                    			if (a1_5 != null) {
                    				if (a1_5 != null) {
                    					Object value = a1_5;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__CONDITION), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_1, a1_5, true);
                    				copyLocalizationInfos(a1_5, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[962]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6432); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getExpressionCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[971]);
            	}

            // Xmu2.g:7142:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7143:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6450);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createExpressionCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.EXPRESSION_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_34_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[975]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"
    // Xmu2.g:7173:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xmu2.g:7176:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) )
            // Xmu2.g:7177:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6483); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteNodeStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[976]);
            	}

            // Xmu2.g:7191:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:7192:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6501);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteNodeStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_NODE_STATEMENT__NODE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_35_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[982]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[984]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"
    // Xmu2.g:7226:1: parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement returns [edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element = null] : a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        edu.ustb.sei.mde.xmu2.expression.VariableExpression a1_0 =null;

        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_0 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a5_2 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xmu2.g:7229:2: (a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
            // Xmu2.g:7230:2: a0= 'delete' (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression ) a2= '.' (a3= NAME ) a4= '=' (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6534); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[985]);
            	}

            // Xmu2.g:7244:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression )
            // Xmu2.g:7245:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6552);
            a1_0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__SOURCE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[986]);
            	}

            a2=(Token)match(input,24,FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6570); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[987]);
            	}

            // Xmu2.g:7284:2: (a3= NAME )
            // Xmu2.g:7285:3: a3= NAME
            {
            a3=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6588); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            				startIncompleteElement(element);
            			}
            			if (a3 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__FEATURE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_3, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[988]);
            	}

            a4=(Token)match(input,31,FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6609); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[989]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[990]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[991]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[992]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[993]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[994]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[995]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[996]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDeleteLinkStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[997]);
            	}

            // Xmu2.g:7342:2: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression |a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
            int alt61=3;
            switch ( input.LA(1) ) {
            case 22:
            case 52:
                {
                alt61=1;
                }
                break;
            case NAME:
                {
                int LA61_3 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA61_4 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 4, input);

                    throw nvae;

                }
                }
                break;
            case 62:
                {
                int LA61_5 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 5, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39_92:
                {
                int LA61_6 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 6, input);

                    throw nvae;

                }
                }
                break;
            case NUMBER:
                {
                int LA61_7 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 7, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN:
                {
                int LA61_8 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 8, input);

                    throw nvae;

                }
                }
                break;
            case TYPE:
                {
                int LA61_9 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 9, input);

                    throw nvae;

                }
                }
                break;
            case OBJ_URI:
                {
                int LA61_10 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 10, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA61_11 = input.LA(2);

                if ( (synpred148_Xmu2()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 11, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;

            }

            switch (alt61) {
                case 1 :
                    // Xmu2.g:7343:3: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6627);
                    a5_0=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_0 != null) {
                    				if (a5_0 != null) {
                    					Object value = a5_0;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_5, a5_0, true);
                    				copyLocalizationInfos(a5_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xmu2.g:7362:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6641);
                    a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_1 != null) {
                    				if (a5_1 != null) {
                    					Object value = a5_1;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_5, a5_1, true);
                    				copyLocalizationInfos(a5_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xmu2.g:7381:6: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6655);
                    a5_2=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDeleteLinkStatement();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_2 != null) {
                    				if (a5_2 != null) {
                    					Object value = a5_2;
                    					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DELETE_LINK_STATEMENT__TARGET), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_36_0_0_5, a5_2, true);
                    				copyLocalizationInfos(a5_2, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[998]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[999]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1000]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1001]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1002]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1003]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1004]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1005]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"
    // Xmu2.g:7415:1: parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement returns [edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element = null] : a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) ;
    public final edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex = input.index();

        Token a0=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xmu2.g:7418:2: (a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) )
            // Xmu2.g:7419:2: a0= 'enforce' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            {
            a0=(Token)match(input,42,FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement6688); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getEnforcePatternStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1006]);
            	}

            // Xmu2.g:7433:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7434:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement6706);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createEnforcePatternStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.ENFORCE_PATTERN_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_37_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1007]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1008]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1009]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1010]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1011]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1012]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1013]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1014]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"
    // Xmu2.g:7468:1: parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement returns [edu.ustb.sei.mde.xmu2.statement.ForEachStatement element = null] : a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.ForEachStatement parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.ForEachStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        edu.ustb.sei.mde.xmu2.pattern.Pattern a1_0 =null;

        edu.ustb.sei.mde.xmu2.statement.Statement a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xmu2.g:7471:2: (a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7472:2: a0= 'foreach' (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern ) a2= '->' (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,47,FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6739); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1015]);
            	}

            // Xmu2.g:7486:2: (a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern )
            // Xmu2.g:7487:3: a1_0= parse_edu_ustb_sei_mde_xmu2_pattern_Pattern
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6757);
            a1_0=parse_edu_ustb_sei_mde_xmu2_pattern_Pattern();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__PATTERN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1016]);
            	}

            a2=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6775); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1017]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1018]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1019]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1020]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1021]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1022]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1023]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1024]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getForEachStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1025]);
            	}

            // Xmu2.g:7534:2: (a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7535:3: a3_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6793);
            a3_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createForEachStatement();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.FOR_EACH_STATEMENT__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_38_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1026]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1027]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1028]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1029]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1030]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1031]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1033]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"
    // Xmu2.g:7569:1: parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement returns [edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element = null] : (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' ;
    public final edu.ustb.sei.mde.xmu2.statement.RuleCallStatement parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a2_1 =null;

        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;

        edu.ustb.sei.mde.xmu2.expression.AtomicExpression a4_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xmu2.g:7572:2: ( (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')' )
            // Xmu2.g:7573:2: (a0= NAME ) a1= '(' ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )? a5= ')'
            {
            // Xmu2.g:7573:2: (a0= NAME )
            // Xmu2.g:7574:3: a0= NAME
            {
            a0=(Token)match(input,NAME,FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6830); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAME");
            				tokenResolver.setOptions(getOptions());
            				edu.ustb.sei.mde.xmu2.resource.xmu2.IXmu2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				edu.ustb.sei.mde.xmu2.AbstractRule proxy = edu.ustb.sei.mde.xmu2.Xmu2Factory.eINSTANCE.createModelRule();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ContextDependentURIFragmentFactory<edu.ustb.sei.mde.xmu2.statement.RuleCallStatement, edu.ustb.sei.mde.xmu2.AbstractRule>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getRuleCallStatementRuleReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__RULE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1034]);
            	}

            a1=(Token)match(input,16,FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6851); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1043]);
            	}

            // Xmu2.g:7635:2: ( ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==BOOLEAN||(LA65_0 >= NAME && LA65_0 <= QUOTED_39_39_92)||LA65_0==TYPE||LA65_0==16||LA65_0==53||LA65_0==62) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // Xmu2.g:7636:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    {
                    // Xmu2.g:7636:3: ( (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )* )
                    // Xmu2.g:7637:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    {
                    // Xmu2.g:7637:4: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    int alt62=2;
                    switch ( input.LA(1) ) {
                    case NAME:
                        {
                        int LA62_1 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 53:
                        {
                        int LA62_2 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 62:
                        {
                        int LA62_3 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QUOTED_39_39_92:
                        {
                        int LA62_4 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NUMBER:
                        {
                        int LA62_5 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case BOOLEAN:
                        {
                        int LA62_6 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case TYPE:
                        {
                        int LA62_7 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case OBJ_URI:
                        {
                        int LA62_8 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case 16:
                        {
                        int LA62_9 = input.LA(2);

                        if ( (synpred149_Xmu2()) ) {
                            alt62=1;
                        }
                        else if ( (true) ) {
                            alt62=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 62, 0, input);

                        throw nvae;

                    }

                    switch (alt62) {
                        case 1 :
                            // Xmu2.g:7638:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6880);
                            a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xmu2.g:7657:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                            {
                            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6900);
                            a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2_0_0_0, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1044]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1045]);
                    			}

                    // Xmu2.g:7683:4: ( (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) ) )*
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==21) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // Xmu2.g:7684:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    {
                    	    // Xmu2.g:7684:5: (a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression ) )
                    	    // Xmu2.g:7685:6: a3= ',' (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    {
                    	    a3=(Token)match(input,21,FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6941); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1046]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1047]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1048]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1049]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1050]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1051]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1052]);
                    	    						addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getRuleCallStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1053]);
                    	    					}

                    	    // Xmu2.g:7706:6: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression |a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression )
                    	    int alt63=2;
                    	    switch ( input.LA(1) ) {
                    	    case NAME:
                    	        {
                    	        int LA63_1 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 1, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 53:
                    	        {
                    	        int LA63_2 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 2, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 62:
                    	        {
                    	        int LA63_3 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 3, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case QUOTED_39_39_92:
                    	        {
                    	        int LA63_4 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 4, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case NUMBER:
                    	        {
                    	        int LA63_5 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 5, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case BOOLEAN:
                    	        {
                    	        int LA63_6 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 6, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case TYPE:
                    	        {
                    	        int LA63_7 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 7, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case OBJ_URI:
                    	        {
                    	        int LA63_8 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 8, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    case 16:
                    	        {
                    	        int LA63_9 = input.LA(2);

                    	        if ( (synpred150_Xmu2()) ) {
                    	            alt63=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt63=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 63, 9, input);

                    	            throw nvae;

                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 63, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt63) {
                    	        case 1 :
                    	            // Xmu2.g:7707:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6975);
                    	            a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_0 != null) {
                    	            								if (a4_0 != null) {
                    	            									Object value = a4_0;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	            								copyLocalizationInfos(a4_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xmu2.g:7726:14: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression
                    	            {
                    	            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7001);
                    	            a4_1=parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a4_1 != null) {
                    	            								if (a4_1 != null) {
                    	            									Object value = a4_1;
                    	            									addObjectToList(element, edu.ustb.sei.mde.xmu2.statement.StatementPackage.RULE_CALL_STATEMENT__PARAMETERS, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_2_0_0_1_0_0_1, a4_1, true);
                    	            								copyLocalizationInfos(a4_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1054]);
                    	    						addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1055]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop64;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1056]);
                    				addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1057]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1058]);
            	}

            a5=(Token)match(input,17,FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7075); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createRuleCallStatement();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_39_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1059]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1060]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1061]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1062]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1063]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1064]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1065]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1066]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Skip"
    // Xmu2.g:7790:1: parse_edu_ustb_sei_mde_xmu2_statement_Skip returns [edu.ustb.sei.mde.xmu2.statement.Skip element = null] : a0= 'skip' ;
    public final edu.ustb.sei.mde.xmu2.statement.Skip parse_edu_ustb_sei_mde_xmu2_statement_Skip() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Skip element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xmu2.g:7793:2: (a0= 'skip' )
            // Xmu2.g:7794:2: a0= 'skip'
            {
            a0=(Token)match(input,58,FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7104); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createSkip();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_40_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1067]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1068]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1069]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getUpdateStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1070]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1071]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1072]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1073]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1074]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_edu_ustb_sei_mde_xmu2_statement_Skip_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Skip"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"
    // Xmu2.g:7817:1: parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause returns [edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element = null] : a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) ;
    public final edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        edu.ustb.sei.mde.xmu2.statement.Statement a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xmu2.g:7820:2: (a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement ) )
            // Xmu2.g:7821:2: a0= 'otherwise' a1= '->' (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            {
            a0=(Token)match(input,55,FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7133); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_41_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1075]);
            	}

            a1=(Token)match(input,23,FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7147); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_41_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1076]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1077]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1078]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1079]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1080]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1081]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1082]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1083]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getDefaultCaseClause(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1084]);
            	}

            // Xmu2.g:7857:2: (a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement )
            // Xmu2.g:7858:3: a2_0= parse_edu_ustb_sei_mde_xmu2_statement_Statement
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7165);
            a2_0=parse_edu_ustb_sei_mde_xmu2_statement_Statement();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2TerminateParsingException();
            			}
            			if (element == null) {
            				element = edu.ustb.sei.mde.xmu2.statement.StatementFactory.eINSTANCE.createDefaultCaseClause();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(edu.ustb.sei.mde.xmu2.statement.StatementPackage.DEFAULT_CASE_CLAUSE__ACTION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, edu.ustb.sei.mde.xmu2.resource.xmu2.grammar.Xmu2GrammarInformationProvider.XMU2_41_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1085]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1086]);
            		addExpectedElement(edu.ustb.sei.mde.xmu2.statement.StatementPackage.eINSTANCE.getSwitchStatement(), edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1087]);
            		addExpectedElement(null, edu.ustb.sei.mde.xmu2.resource.xmu2.mopp.Xmu2ExpectationConstants.EXPECTATIONS[1088]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_AbstractRule"
    // Xmu2.g:7888:1: parse_edu_ustb_sei_mde_xmu2_AbstractRule returns [edu.ustb.sei.mde.xmu2.AbstractRule element = null] : c0= parse_edu_ustb_sei_mde_xmu2_ModelRule ;
    public final edu.ustb.sei.mde.xmu2.AbstractRule parse_edu_ustb_sei_mde_xmu2_AbstractRule() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.AbstractRule element =  null;

        int parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.ModelRule c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xmu2.g:7889:2: (c0= parse_edu_ustb_sei_mde_xmu2_ModelRule )
            // Xmu2.g:7890:2: c0= parse_edu_ustb_sei_mde_xmu2_ModelRule
            {
            pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7194);
            c0=parse_edu_ustb_sei_mde_xmu2_ModelRule();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_edu_ustb_sei_mde_xmu2_AbstractRule_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_AbstractRule"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_Statement"
    // Xmu2.g:7894:1: parse_edu_ustb_sei_mde_xmu2_statement_Statement returns [edu.ustb.sei.mde.xmu2.statement.Statement element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip );
    public final edu.ustb.sei.mde.xmu2.statement.Statement parse_edu_ustb_sei_mde_xmu2_statement_Statement() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.Statement element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.BlockStatement c0 =null;

        edu.ustb.sei.mde.xmu2.statement.UpdateStatement c1 =null;

        edu.ustb.sei.mde.xmu2.statement.SwitchStatement c2 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteNodeStatement c3 =null;

        edu.ustb.sei.mde.xmu2.statement.DeleteLinkStatement c4 =null;

        edu.ustb.sei.mde.xmu2.statement.EnforcePatternStatement c5 =null;

        edu.ustb.sei.mde.xmu2.statement.ForEachStatement c6 =null;

        edu.ustb.sei.mde.xmu2.statement.RuleCallStatement c7 =null;

        edu.ustb.sei.mde.xmu2.statement.Skip c8 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xmu2.g:7895:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement |c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement |c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement |c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement |c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement |c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement |c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement |c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement |c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip )
            int alt66=9;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt66=1;
                }
                break;
            case 65:
                {
                alt66=2;
                }
                break;
            case 60:
                {
                alt66=3;
                }
                break;
            case 41:
                {
                int LA66_4 = input.LA(2);

                if ( (LA66_4==NAME) ) {
                    int LA66_9 = input.LA(3);

                    if ( (LA66_9==EOF||LA66_9==28||(LA66_9 >= 39 && LA66_9 <= 40)||LA66_9==50||LA66_9==55||(LA66_9 >= 63 && LA66_9 <= 64)||LA66_9==70) ) {
                        alt66=4;
                    }
                    else if ( (LA66_9==24) ) {
                        alt66=5;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 66, 9, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 4, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                alt66=6;
                }
                break;
            case 47:
                {
                alt66=7;
                }
                break;
            case NAME:
                {
                alt66=8;
                }
                break;
            case 58:
                {
                alt66=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }

            switch (alt66) {
                case 1 :
                    // Xmu2.g:7896:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7215);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:7897:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7225);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:7898:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7235);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:7899:4: c3= parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7245);
                    c3=parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:7900:4: c4= parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7255);
                    c4=parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:7901:4: c5= parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7265);
                    c5=parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:7902:4: c6= parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7275);
                    c6=parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:7903:4: c7= parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7285);
                    c7=parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xmu2.g:7904:4: c8= parse_edu_ustb_sei_mde_xmu2_statement_Skip
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7295);
                    c8=parse_edu_ustb_sei_mde_xmu2_statement_Skip();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_edu_ustb_sei_mde_xmu2_statement_Statement_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_Statement"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"
    // Xmu2.g:7908:1: parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression returns [edu.ustb.sei.mde.xmu2.expression.AtomicExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression );
    public final edu.ustb.sei.mde.xmu2.expression.AtomicExpression parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AtomicExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.VariableExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c5 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c6 =null;

        edu.ustb.sei.mde.xmu2.expression.ParenExpression c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xmu2.g:7909:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression |c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression )
            int alt67=8;
            switch ( input.LA(1) ) {
            case NAME:
                {
                alt67=1;
                }
                break;
            case 53:
            case 62:
                {
                alt67=2;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt67=3;
                }
                break;
            case NUMBER:
                {
                alt67=4;
                }
                break;
            case BOOLEAN:
                {
                alt67=5;
                }
                break;
            case TYPE:
                {
                alt67=6;
                }
                break;
            case OBJ_URI:
                {
                alt67=7;
                }
                break;
            case 16:
                {
                alt67=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;

            }

            switch (alt67) {
                case 1 :
                    // Xmu2.g:7910:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7316);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:7911:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7326);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:7912:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7336);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:7913:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7346);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:7914:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7356);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:7915:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7366);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xmu2.g:7916:4: c6= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7376);
                    c6=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xmu2.g:7917:4: c7= parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7386);
                    c7=parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"
    // Xmu2.g:7921:1: parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression returns [edu.ustb.sei.mde.xmu2.pattern.PatternExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression );
    public final edu.ustb.sei.mde.xmu2.pattern.PatternExpression parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.PatternExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;

        edu.ustb.sei.mde.xmu2.pattern.PropertyPatternExpression c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xmu2.g:7922:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression |c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==NAME) ) {
                int LA68_1 = input.LA(2);

                if ( (synpred168_Xmu2()) ) {
                    alt68=1;
                }
                else if ( (true) ) {
                    alt68=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;

            }
            switch (alt68) {
                case 1 :
                    // Xmu2.g:7923:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7407);
                    c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:7924:4: c1= parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7417);
                    c1=parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"
    // Xmu2.g:7928:1: parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression returns [edu.ustb.sei.mde.xmu2.expression.ConstantExpression element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression );
    public final edu.ustb.sei.mde.xmu2.expression.ConstantExpression parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.ConstantExpression element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.EmptyExpression c0 =null;

        edu.ustb.sei.mde.xmu2.expression.StringLiteralExpression c1 =null;

        edu.ustb.sei.mde.xmu2.expression.IntegerLiteralExpression c2 =null;

        edu.ustb.sei.mde.xmu2.expression.BooleanLiteralExpression c3 =null;

        edu.ustb.sei.mde.xmu2.expression.EnumLiteralExpression c4 =null;

        edu.ustb.sei.mde.xmu2.expression.ObjectURIExpression c5 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xmu2.g:7929:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression |c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression |c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression |c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression |c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression |c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression )
            int alt69=6;
            switch ( input.LA(1) ) {
            case 53:
            case 62:
                {
                alt69=1;
                }
                break;
            case QUOTED_39_39_92:
                {
                alt69=2;
                }
                break;
            case NUMBER:
                {
                alt69=3;
                }
                break;
            case BOOLEAN:
                {
                alt69=4;
                }
                break;
            case TYPE:
                {
                alt69=5;
                }
                break;
            case OBJ_URI:
                {
                alt69=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;

            }

            switch (alt69) {
                case 1 :
                    // Xmu2.g:7930:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7438);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:7931:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7448);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:7932:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7458);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:7933:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7468);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xmu2.g:7934:4: c4= parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7478);
                    c4=parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xmu2.g:7935:4: c5= parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7488);
                    c5=parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_expression_Path"
    // Xmu2.g:7939:1: parse_edu_ustb_sei_mde_xmu2_expression_Path returns [edu.ustb.sei.mde.xmu2.expression.Path element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath );
    public final edu.ustb.sei.mde.xmu2.expression.Path parse_edu_ustb_sei_mde_xmu2_expression_Path() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.Path element =  null;

        int parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.expression.LoopPath c0 =null;

        edu.ustb.sei.mde.xmu2.expression.FeaturePath c1 =null;

        edu.ustb.sei.mde.xmu2.expression.OperationPath c2 =null;

        edu.ustb.sei.mde.xmu2.expression.PositionPath c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xmu2.g:7940:2: (c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath |c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath |c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath |c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath )
            int alt70=4;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==23) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==44||LA70_1==46||LA70_1==57) ) {
                    alt70=1;
                }
                else if ( (LA70_1==37||LA70_1==45||LA70_1==49) ) {
                    alt70=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA70_0==24) ) {
                int LA70_2 = input.LA(2);

                if ( (LA70_2==NAME) ) {
                    int LA70_5 = input.LA(3);

                    if ( (LA70_5==EOF||(LA70_5 >= 17 && LA70_5 <= 25)||(LA70_5 >= 28 && LA70_5 <= 33)||(LA70_5 >= 35 && LA70_5 <= 36)||(LA70_5 >= 39 && LA70_5 <= 40)||LA70_5==50||(LA70_5 >= 54 && LA70_5 <= 55)||(LA70_5 >= 63 && LA70_5 <= 64)||LA70_5==70) ) {
                        alt70=2;
                    }
                    else if ( (LA70_5==16) ) {
                        alt70=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 70, 5, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;

            }
            switch (alt70) {
                case 1 :
                    // Xmu2.g:7941:2: c0= parse_edu_ustb_sei_mde_xmu2_expression_LoopPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7509);
                    c0=parse_edu_ustb_sei_mde_xmu2_expression_LoopPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:7942:4: c1= parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7519);
                    c1=parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:7943:4: c2= parse_edu_ustb_sei_mde_xmu2_expression_OperationPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7529);
                    c2=parse_edu_ustb_sei_mde_xmu2_expression_OperationPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xmu2.g:7944:4: c3= parse_edu_ustb_sei_mde_xmu2_expression_PositionPath
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7539);
                    c3=parse_edu_ustb_sei_mde_xmu2_expression_PositionPath();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_edu_ustb_sei_mde_xmu2_expression_Path_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_expression_Path"



    // $ANTLR start "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"
    // Xmu2.g:7948:1: parse_edu_ustb_sei_mde_xmu2_statement_CaseClause returns [edu.ustb.sei.mde.xmu2.statement.CaseClause element = null] : (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause );
    public final edu.ustb.sei.mde.xmu2.statement.CaseClause parse_edu_ustb_sei_mde_xmu2_statement_CaseClause() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.CaseClause element =  null;

        int parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex = input.index();

        edu.ustb.sei.mde.xmu2.statement.PatternCaseClause c0 =null;

        edu.ustb.sei.mde.xmu2.statement.ExpressionCaseClause c1 =null;

        edu.ustb.sei.mde.xmu2.statement.DefaultCaseClause c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xmu2.g:7949:2: (c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause |c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause |c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause )
            int alt71=3;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==39) ) {
                int LA71_1 = input.LA(2);

                if ( (LA71_1==NAME) ) {
                    int LA71_3 = input.LA(3);

                    if ( (LA71_3==26) ) {
                        alt71=1;
                    }
                    else if ( ((LA71_3 >= 18 && LA71_3 <= 20)||(LA71_3 >= 22 && LA71_3 <= 25)||(LA71_3 >= 29 && LA71_3 <= 33)||LA71_3==36||LA71_3==54) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 3, input);

                        throw nvae;

                    }
                }
                else if ( (LA71_1==BOOLEAN||(LA71_1 >= NUMBER && LA71_1 <= QUOTED_39_39_92)||LA71_1==TYPE||LA71_1==16||LA71_1==22||(LA71_1 >= 52 && LA71_1 <= 53)||LA71_1==62) ) {
                    alt71=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA71_0==55) ) {
                alt71=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }
            switch (alt71) {
                case 1 :
                    // Xmu2.g:7950:2: c0= parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause7560);
                    c0=parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xmu2.g:7951:4: c1= parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause7570);
                    c1=parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xmu2.g:7952:4: c2= parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause
                    {
                    pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause7580);
                    c2=parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_edu_ustb_sei_mde_xmu2_statement_CaseClause"

    // $ANTLR start synpred14_Xmu2
    public final void synpred14_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a2_0 =null;


        // Xmu2.g:1873:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:1873:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred14_Xmu21391);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred14_Xmu2

    // $ANTLR start synpred15_Xmu2
    public final void synpred15_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_1 =null;


        // Xmu2.g:1892:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:1892:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred15_Xmu21411);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred15_Xmu2

    // $ANTLR start synpred16_Xmu2
    public final void synpred16_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_2 =null;


        // Xmu2.g:1911:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:1911:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred16_Xmu21431);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Xmu2

    // $ANTLR start synpred17_Xmu2
    public final void synpred17_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_3 =null;


        // Xmu2.g:1930:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:1930:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred17_Xmu21451);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Xmu2

    // $ANTLR start synpred18_Xmu2
    public final void synpred18_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_4 =null;


        // Xmu2.g:1949:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:1949:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred18_Xmu21471);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Xmu2

    // $ANTLR start synpred19_Xmu2
    public final void synpred19_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_5 =null;


        // Xmu2.g:1968:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:1968:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred19_Xmu21491);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Xmu2

    // $ANTLR start synpred20_Xmu2
    public final void synpred20_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_6 =null;


        // Xmu2.g:1987:10: (a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:1987:10: a2_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred20_Xmu21511);
        a2_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Xmu2

    // $ANTLR start synpred29_Xmu2
    public final void synpred29_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a4_0 =null;


        // Xmu2.g:2565:3: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:2565:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred29_Xmu22271);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred29_Xmu2

    // $ANTLR start synpred30_Xmu2
    public final void synpred30_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a4_1 =null;


        // Xmu2.g:2584:6: (a4_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:2584:6: a4_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred30_Xmu22285);
        a4_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred30_Xmu2

    // $ANTLR start synpred31_Xmu2
    public final void synpred31_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a4_2 =null;


        // Xmu2.g:2603:6: (a4_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:2603:6: a4_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred31_Xmu22299);
        a4_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred31_Xmu2

    // $ANTLR start synpred32_Xmu2
    public final void synpred32_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a4_3 =null;


        // Xmu2.g:2622:6: (a4_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:2622:6: a4_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred32_Xmu22313);
        a4_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred32_Xmu2

    // $ANTLR start synpred33_Xmu2
    public final void synpred33_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a4_4 =null;


        // Xmu2.g:2641:6: (a4_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:2641:6: a4_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred33_Xmu22327);
        a4_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred33_Xmu2

    // $ANTLR start synpred34_Xmu2
    public final void synpred34_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a4_5 =null;


        // Xmu2.g:2660:6: (a4_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:2660:6: a4_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred34_Xmu22341);
        a4_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred34_Xmu2

    // $ANTLR start synpred35_Xmu2
    public final void synpred35_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_6 =null;


        // Xmu2.g:2679:6: (a4_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:2679:6: a4_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred35_Xmu22355);
        a4_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred35_Xmu2

    // $ANTLR start synpred38_Xmu2
    public final void synpred38_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a9_0 =null;


        // Xmu2.g:2855:3: (a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:2855:3: a9_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred38_Xmu22530);
        a9_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred38_Xmu2

    // $ANTLR start synpred39_Xmu2
    public final void synpred39_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a9_1 =null;


        // Xmu2.g:2874:6: (a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:2874:6: a9_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred39_Xmu22544);
        a9_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Xmu2

    // $ANTLR start synpred40_Xmu2
    public final void synpred40_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a9_2 =null;


        // Xmu2.g:2893:6: (a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:2893:6: a9_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred40_Xmu22558);
        a9_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred40_Xmu2

    // $ANTLR start synpred41_Xmu2
    public final void synpred41_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a9_3 =null;


        // Xmu2.g:2912:6: (a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:2912:6: a9_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred41_Xmu22572);
        a9_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred41_Xmu2

    // $ANTLR start synpred42_Xmu2
    public final void synpred42_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a9_4 =null;


        // Xmu2.g:2931:6: (a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:2931:6: a9_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred42_Xmu22586);
        a9_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred42_Xmu2

    // $ANTLR start synpred43_Xmu2
    public final void synpred43_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a9_5 =null;


        // Xmu2.g:2950:6: (a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:2950:6: a9_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred43_Xmu22600);
        a9_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Xmu2

    // $ANTLR start synpred44_Xmu2
    public final void synpred44_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a9_6 =null;


        // Xmu2.g:2969:6: (a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:2969:6: a9_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred44_Xmu22614);
        a9_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred44_Xmu2

    // $ANTLR start synpred45_Xmu2
    public final void synpred45_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a3_0 =null;


        // Xmu2.g:3219:5: (a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3219:5: a3_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred45_Xmu22797);
        a3_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Xmu2

    // $ANTLR start synpred46_Xmu2
    public final void synpred46_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a3_1 =null;


        // Xmu2.g:3238:10: (a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3238:10: a3_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred46_Xmu22817);
        a3_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Xmu2

    // $ANTLR start synpred47_Xmu2
    public final void synpred47_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a3_2 =null;


        // Xmu2.g:3257:10: (a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3257:10: a3_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred47_Xmu22837);
        a3_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Xmu2

    // $ANTLR start synpred48_Xmu2
    public final void synpred48_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a3_3 =null;


        // Xmu2.g:3276:10: (a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3276:10: a3_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred48_Xmu22857);
        a3_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred48_Xmu2

    // $ANTLR start synpred49_Xmu2
    public final void synpred49_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a3_4 =null;


        // Xmu2.g:3295:10: (a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3295:10: a3_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred49_Xmu22877);
        a3_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred49_Xmu2

    // $ANTLR start synpred50_Xmu2
    public final void synpred50_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a3_5 =null;


        // Xmu2.g:3314:10: (a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3314:10: a3_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred50_Xmu22897);
        a3_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Xmu2

    // $ANTLR start synpred51_Xmu2
    public final void synpred51_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a3_6 =null;


        // Xmu2.g:3333:10: (a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3333:10: a3_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred51_Xmu22917);
        a3_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred51_Xmu2

    // $ANTLR start synpred52_Xmu2
    public final void synpred52_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a5_0 =null;


        // Xmu2.g:3403:7: (a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3403:7: a5_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred52_Xmu23012);
        a5_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred52_Xmu2

    // $ANTLR start synpred53_Xmu2
    public final void synpred53_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a5_1 =null;


        // Xmu2.g:3422:14: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3422:14: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred53_Xmu23038);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred53_Xmu2

    // $ANTLR start synpred54_Xmu2
    public final void synpred54_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a5_2 =null;


        // Xmu2.g:3441:14: (a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3441:14: a5_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred54_Xmu23064);
        a5_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred54_Xmu2

    // $ANTLR start synpred55_Xmu2
    public final void synpred55_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a5_3 =null;


        // Xmu2.g:3460:14: (a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3460:14: a5_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred55_Xmu23090);
        a5_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred55_Xmu2

    // $ANTLR start synpred56_Xmu2
    public final void synpred56_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a5_4 =null;


        // Xmu2.g:3479:14: (a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3479:14: a5_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred56_Xmu23116);
        a5_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred56_Xmu2

    // $ANTLR start synpred57_Xmu2
    public final void synpred57_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a5_5 =null;


        // Xmu2.g:3498:14: (a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3498:14: a5_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred57_Xmu23142);
        a5_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred57_Xmu2

    // $ANTLR start synpred58_Xmu2
    public final void synpred58_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_6 =null;


        // Xmu2.g:3517:14: (a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3517:14: a5_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred58_Xmu23168);
        a5_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred58_Xmu2

    // $ANTLR start synpred63_Xmu2
    public final void synpred63_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a7_0 =null;


        // Xmu2.g:3711:4: (a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:3711:4: a7_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred63_Xmu23394);
        a7_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred63_Xmu2

    // $ANTLR start synpred64_Xmu2
    public final void synpred64_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a7_1 =null;


        // Xmu2.g:3730:8: (a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:3730:8: a7_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred64_Xmu23411);
        a7_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred64_Xmu2

    // $ANTLR start synpred65_Xmu2
    public final void synpred65_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a7_2 =null;


        // Xmu2.g:3749:8: (a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:3749:8: a7_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred65_Xmu23428);
        a7_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred65_Xmu2

    // $ANTLR start synpred66_Xmu2
    public final void synpred66_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a7_3 =null;


        // Xmu2.g:3768:8: (a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:3768:8: a7_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred66_Xmu23445);
        a7_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred66_Xmu2

    // $ANTLR start synpred67_Xmu2
    public final void synpred67_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a7_4 =null;


        // Xmu2.g:3787:8: (a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:3787:8: a7_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred67_Xmu23462);
        a7_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred67_Xmu2

    // $ANTLR start synpred68_Xmu2
    public final void synpred68_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a7_5 =null;


        // Xmu2.g:3806:8: (a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:3806:8: a7_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred68_Xmu23479);
        a7_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred68_Xmu2

    // $ANTLR start synpred69_Xmu2
    public final void synpred69_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a7_6 =null;


        // Xmu2.g:3825:8: (a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:3825:8: a7_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred69_Xmu23496);
        a7_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred69_Xmu2

    // $ANTLR start synpred75_Xmu2
    public final void synpred75_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:4612:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:4612:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred75_Xmu24025);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred75_Xmu2

    // $ANTLR start synpred76_Xmu2
    public final void synpred76_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:4631:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:4631:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred76_Xmu24039);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred76_Xmu2

    // $ANTLR start synpred77_Xmu2
    public final void synpred77_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:4650:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:4650:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred77_Xmu24053);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred77_Xmu2

    // $ANTLR start synpred78_Xmu2
    public final void synpred78_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a1_3 =null;


        // Xmu2.g:4669:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:4669:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred78_Xmu24067);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred78_Xmu2

    // $ANTLR start synpred79_Xmu2
    public final void synpred79_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a1_4 =null;


        // Xmu2.g:4688:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:4688:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred79_Xmu24081);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred79_Xmu2

    // $ANTLR start synpred80_Xmu2
    public final void synpred80_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_5 =null;


        // Xmu2.g:4707:6: (a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:4707:6: a1_5= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred80_Xmu24095);
        a1_5=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred80_Xmu2

    // $ANTLR start synpred81_Xmu2
    public final void synpred81_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_6 =null;


        // Xmu2.g:4726:6: (a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4726:6: a1_6= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred81_Xmu24109);
        a1_6=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred81_Xmu2

    // $ANTLR start synpred83_Xmu2
    public final void synpred83_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:4860:3: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4860:3: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred83_Xmu24219);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred83_Xmu2

    // $ANTLR start synpred85_Xmu2
    public final void synpred85_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_1 =null;


        // Xmu2.g:4951:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:4951:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred85_Xmu24284);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred85_Xmu2

    // $ANTLR start synpred88_Xmu2
    public final void synpred88_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:5060:10: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5060:10: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred88_Xmu24414);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred88_Xmu2

    // $ANTLR start synpred90_Xmu2
    public final void synpred90_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_0 =null;


        // Xmu2.g:5142:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5142:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred90_Xmu24494);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred90_Xmu2

    // $ANTLR start synpred91_Xmu2
    public final void synpred91_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_1 =null;


        // Xmu2.g:5161:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5161:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred91_Xmu24508);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred91_Xmu2

    // $ANTLR start synpred92_Xmu2
    public final void synpred92_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_2 =null;


        // Xmu2.g:5180:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5180:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred92_Xmu24522);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred92_Xmu2

    // $ANTLR start synpred95_Xmu2
    public final void synpred95_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a6_0 =null;


        // Xmu2.g:5283:5: (a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5283:5: a6_0= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred95_Xmu24651);
        a6_0=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred95_Xmu2

    // $ANTLR start synpred96_Xmu2
    public final void synpred96_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a6_1 =null;


        // Xmu2.g:5302:10: (a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5302:10: a6_1= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred96_Xmu24671);
        a6_1=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred96_Xmu2

    // $ANTLR start synpred97_Xmu2
    public final void synpred97_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a6_2 =null;


        // Xmu2.g:5321:10: (a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5321:10: a6_2= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred97_Xmu24691);
        a6_2=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred97_Xmu2

    // $ANTLR start synpred99_Xmu2
    public final void synpred99_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_0 =null;


        // Xmu2.g:5401:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:5401:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred99_Xmu24771);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred99_Xmu2

    // $ANTLR start synpred100_Xmu2
    public final void synpred100_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_1 =null;


        // Xmu2.g:5420:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5420:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred100_Xmu24785);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred100_Xmu2

    // $ANTLR start synpred101_Xmu2
    public final void synpred101_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_2 =null;


        // Xmu2.g:5439:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5439:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred101_Xmu24799);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred101_Xmu2

    // $ANTLR start synpred102_Xmu2
    public final void synpred102_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_3 =null;


        // Xmu2.g:5458:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5458:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred102_Xmu24813);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred102_Xmu2

    // $ANTLR start synpred107_Xmu2
    public final void synpred107_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a8_0 =null;


        // Xmu2.g:5585:3: (a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:5585:3: a8_0= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred107_Xmu24939);
        a8_0=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_Xmu2

    // $ANTLR start synpred108_Xmu2
    public final void synpred108_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a8_1 =null;


        // Xmu2.g:5604:6: (a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5604:6: a8_1= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred108_Xmu24953);
        a8_1=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred108_Xmu2

    // $ANTLR start synpred109_Xmu2
    public final void synpred109_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a8_2 =null;


        // Xmu2.g:5623:6: (a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5623:6: a8_2= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred109_Xmu24967);
        a8_2=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred109_Xmu2

    // $ANTLR start synpred110_Xmu2
    public final void synpred110_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a8_3 =null;


        // Xmu2.g:5642:6: (a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5642:6: a8_3= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred110_Xmu24981);
        a8_3=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred110_Xmu2

    // $ANTLR start synpred111_Xmu2
    public final void synpred111_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_0 =null;


        // Xmu2.g:5703:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:5703:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred111_Xmu25032);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred111_Xmu2

    // $ANTLR start synpred112_Xmu2
    public final void synpred112_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_1 =null;


        // Xmu2.g:5722:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:5722:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred112_Xmu25046);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred112_Xmu2

    // $ANTLR start synpred113_Xmu2
    public final void synpred113_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_2 =null;


        // Xmu2.g:5741:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5741:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred113_Xmu25060);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred113_Xmu2

    // $ANTLR start synpred114_Xmu2
    public final void synpred114_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_3 =null;


        // Xmu2.g:5760:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5760:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred114_Xmu25074);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred114_Xmu2

    // $ANTLR start synpred115_Xmu2
    public final void synpred115_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_4 =null;


        // Xmu2.g:5779:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5779:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred115_Xmu25088);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred115_Xmu2

    // $ANTLR start synpred116_Xmu2
    public final void synpred116_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_0 =null;


        // Xmu2.g:5848:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:5848:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred116_Xmu25155);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred116_Xmu2

    // $ANTLR start synpred117_Xmu2
    public final void synpred117_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_1 =null;


        // Xmu2.g:5867:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:5867:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred117_Xmu25175);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred117_Xmu2

    // $ANTLR start synpred118_Xmu2
    public final void synpred118_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_2 =null;


        // Xmu2.g:5886:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:5886:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred118_Xmu25195);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred118_Xmu2

    // $ANTLR start synpred119_Xmu2
    public final void synpred119_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_3 =null;


        // Xmu2.g:5905:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:5905:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred119_Xmu25215);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred119_Xmu2

    // $ANTLR start synpred120_Xmu2
    public final void synpred120_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_4 =null;


        // Xmu2.g:5924:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:5924:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred120_Xmu25235);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred120_Xmu2

    // $ANTLR start synpred122_Xmu2
    public final void synpred122_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a0_0 =null;


        // Xmu2.g:6002:3: (a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:6002:3: a0_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred122_Xmu25315);
        a0_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred122_Xmu2

    // $ANTLR start synpred123_Xmu2
    public final void synpred123_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a0_1 =null;


        // Xmu2.g:6021:6: (a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6021:6: a0_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred123_Xmu25329);
        a0_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred123_Xmu2

    // $ANTLR start synpred124_Xmu2
    public final void synpred124_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a0_2 =null;


        // Xmu2.g:6040:6: (a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6040:6: a0_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred124_Xmu25343);
        a0_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred124_Xmu2

    // $ANTLR start synpred125_Xmu2
    public final void synpred125_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a0_3 =null;


        // Xmu2.g:6059:6: (a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6059:6: a0_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred125_Xmu25357);
        a0_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred125_Xmu2

    // $ANTLR start synpred126_Xmu2
    public final void synpred126_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a0_4 =null;


        // Xmu2.g:6078:6: (a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6078:6: a0_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred126_Xmu25371);
        a0_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred126_Xmu2

    // $ANTLR start synpred127_Xmu2
    public final void synpred127_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a0_5 =null;


        // Xmu2.g:6097:6: (a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6097:6: a0_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred127_Xmu25385);
        a0_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred127_Xmu2

    // $ANTLR start synpred128_Xmu2
    public final void synpred128_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a2_0 =null;


        // Xmu2.g:6166:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:6166:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred128_Xmu25452);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred128_Xmu2

    // $ANTLR start synpred129_Xmu2
    public final void synpred129_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a2_1 =null;


        // Xmu2.g:6185:10: (a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:6185:10: a2_1= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred129_Xmu25472);
        a2_1=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred129_Xmu2

    // $ANTLR start synpred130_Xmu2
    public final void synpred130_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.AdditiveExpression a2_2 =null;


        // Xmu2.g:6204:10: (a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression )
        // Xmu2.g:6204:10: a2_2= parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred130_Xmu25492);
        a2_2=parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xmu2

    // $ANTLR start synpred131_Xmu2
    public final void synpred131_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.MultiplicativeExpression a2_3 =null;


        // Xmu2.g:6223:10: (a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression )
        // Xmu2.g:6223:10: a2_3= parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred131_Xmu25512);
        a2_3=parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred131_Xmu2

    // $ANTLR start synpred132_Xmu2
    public final void synpred132_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a2_4 =null;


        // Xmu2.g:6242:10: (a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:6242:10: a2_4= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred132_Xmu25532);
        a2_4=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred132_Xmu2

    // $ANTLR start synpred133_Xmu2
    public final void synpred133_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_5 =null;


        // Xmu2.g:6261:10: (a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:6261:10: a2_5= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred133_Xmu25552);
        a2_5=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred133_Xmu2

    // $ANTLR start synpred137_Xmu2
    public final void synpred137_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.statement.UpdateClause a5_0 =null;


        // Xmu2.g:6576:3: ( (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause ) )
        // Xmu2.g:6576:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        {
        // Xmu2.g:6576:3: (a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause )
        // Xmu2.g:6577:4: a5_0= parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred137_Xmu25930);
        a5_0=parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred137_Xmu2

    // $ANTLR start synpred142_Xmu2
    public final void synpred142_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanOrExpression a1_0 =null;


        // Xmu2.g:7000:3: (a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression )
        // Xmu2.g:7000:3: a1_0= parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred142_Xmu26344);
        a1_0=parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred142_Xmu2

    // $ANTLR start synpred143_Xmu2
    public final void synpred143_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.BooleanAndExpression a1_1 =null;


        // Xmu2.g:7019:6: (a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression )
        // Xmu2.g:7019:6: a1_1= parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred143_Xmu26358);
        a1_1=parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred143_Xmu2

    // $ANTLR start synpred144_Xmu2
    public final void synpred144_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.RelationalExpression a1_2 =null;


        // Xmu2.g:7038:6: (a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression )
        // Xmu2.g:7038:6: a1_2= parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred144_Xmu26372);
        a1_2=parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred144_Xmu2

    // $ANTLR start synpred145_Xmu2
    public final void synpred145_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.UnaryExpression a1_3 =null;


        // Xmu2.g:7057:6: (a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression )
        // Xmu2.g:7057:6: a1_3= parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred145_Xmu26386);
        a1_3=parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred145_Xmu2

    // $ANTLR start synpred146_Xmu2
    public final void synpred146_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a1_4 =null;


        // Xmu2.g:7076:6: (a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7076:6: a1_4= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred146_Xmu26400);
        a1_4=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred146_Xmu2

    // $ANTLR start synpred148_Xmu2
    public final void synpred148_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a5_1 =null;


        // Xmu2.g:7362:6: (a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7362:6: a5_1= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred148_Xmu26641);
        a5_1=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred148_Xmu2

    // $ANTLR start synpred149_Xmu2
    public final void synpred149_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a2_0 =null;


        // Xmu2.g:7638:5: (a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7638:5: a2_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred149_Xmu26880);
        a2_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred149_Xmu2

    // $ANTLR start synpred150_Xmu2
    public final void synpred150_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.expression.PathExpression a4_0 =null;


        // Xmu2.g:7707:7: (a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression )
        // Xmu2.g:7707:7: a4_0= parse_edu_ustb_sei_mde_xmu2_expression_PathExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred150_Xmu26975);
        a4_0=parse_edu_ustb_sei_mde_xmu2_expression_PathExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred150_Xmu2

    // $ANTLR start synpred168_Xmu2
    public final void synpred168_Xmu2_fragment() throws RecognitionException {
        edu.ustb.sei.mde.xmu2.pattern.ObjectPatternExpression c0 =null;


        // Xmu2.g:7923:2: (c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression )
        // Xmu2.g:7923:2: c0= parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression
        {
        pushFollow(FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred168_Xmu27407);
        c0=parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred168_Xmu2

    // Delegated rules

    public final boolean synpred75_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_Xmu2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_Xmu2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_TransformationModel_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel115 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel133 = new BitSet(new long[]{0x2101080000000002L});
    public static final BitSet FOLLOW_48_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel163 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_QUOTED_60_62_92_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel189 = new BitSet(new long[]{0x2101080000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryPoint_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel250 = new BitSet(new long[]{0x2100080000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_AbstractRule_in_parse_edu_ustb_sei_mde_xmu2_TransformationModel306 = new BitSet(new long[]{0x2100000000000002L});
    public static final BitSet FOLLOW_43_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint362 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint380 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint401 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint419 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint446 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_EntryData_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint472 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_EntryPoint513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_EntryData551 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_EntryData566 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_EntryData587 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_EntryData605 = new BitSet(new long[]{0x0000000800000200L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_EntryData641 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_EntryData687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_edu_ustb_sei_mde_xmu2_ModelRule725 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_56_in_parse_edu_ustb_sei_mde_xmu2_ModelRule746 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_ModelRule764 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_ModelRule785 = new BitSet(new long[]{0x0800000000020080L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule814 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_ModelRule855 = new BitSet(new long[]{0x0800000000000080L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_Parameter_in_parse_edu_ustb_sei_mde_xmu2_ModelRule889 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_ModelRule963 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_ModelRule977 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000052L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1006 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1034 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000052L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1076 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_ModelRule1102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1135 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1156 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration1174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_edu_ustb_sei_mde_xmu2_Parameter1219 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_66_in_parse_edu_ustb_sei_mde_xmu2_Parameter1234 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_Parameter1259 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_edu_ustb_sei_mde_xmu2_Parameter1280 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_Parameter1298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1338 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1365 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1391 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1411 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1431 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1451 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1471 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1491 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1511 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1531 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern1559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1611 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1638 = new BitSet(new long[]{0x0000000000000080L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1679 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000040L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1734 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1776 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode1880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression1932 = new BitSet(new long[]{0x0000000080800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression1968 = new BitSet(new long[]{0x0000000080800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2024 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2065 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PatternNode_in_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression2083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2120 = new BitSet(new long[]{0x0000000080800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2156 = new BitSet(new long[]{0x0000000080800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2212 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2253 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression2369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2402 = new BitSet(new long[]{0x0200500000000000L});
    public static final BitSet FOLLOW_57_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2425 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_46_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2440 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_44_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2455 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2476 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_VariableDeclaration_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2494 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_69_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2512 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2530 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2544 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2558 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2572 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2586 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2600 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2614 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2628 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath2646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath2675 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath2693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2729 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2747 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2768 = new BitSet(new long[]{0x4030000000434790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2797 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2817 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2837 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2857 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2877 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2897 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2917 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2937 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath2978 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3012 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3038 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3064 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3090 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3116 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3142 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3168 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3194 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath3268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3297 = new BitSet(new long[]{0x0002202000000000L});
    public static final BitSet FOLLOW_45_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3320 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_49_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3335 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_37_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3350 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3371 = new BitSet(new long[]{0x4030000000434790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3394 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3411 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3428 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3445 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3462 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3479 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3496 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3513 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath3539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression3572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3612 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3626 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3640 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_Path_in_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression3667 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_53_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression3717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression3732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTED_39_39_92_in_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression3772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NUMBER_in_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression3812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression3852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression3892 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression3913 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression3931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJ_URI_in_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression3971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4007 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4025 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4039 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4053 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4067 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4081 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4095 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4109 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4123 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression4141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4179 = new BitSet(new long[]{0x4020000000014790L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4194 = new BitSet(new long[]{0x4020000000014790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression4233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4270 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4284 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4298 = new BitSet(new long[]{0x0000000002040000L});
    public static final BitSet FOLLOW_18_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4338 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_25_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4357 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4394 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4414 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression4434 = new BitSet(new long[]{0x0000000002040002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4494 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4508 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4522 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4536 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_19_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4576 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_22_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4595 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_20_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4614 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4651 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4671 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4691 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression4711 = new BitSet(new long[]{0x0000000000580002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4771 = new BitSet(new long[]{0x00000003E0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4785 = new BitSet(new long[]{0x00000003E0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4799 = new BitSet(new long[]{0x00000003E0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4813 = new BitSet(new long[]{0x00000003E0000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4827 = new BitSet(new long[]{0x00000003E0000000L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4854 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_29_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4869 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_30_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4884 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_32_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4899 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_33_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4914 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression4995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5032 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5046 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5060 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5074 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5088 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5102 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5129 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5155 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5175 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5195 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5215 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5235 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression5255 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5315 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5329 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5343 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5357 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5371 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5385 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5399 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5426 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5452 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5472 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5492 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5512 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5532 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5552 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression5572 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5628 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000052L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5657 = new BitSet(new long[]{0x0000000010000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_28_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5698 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000012L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5732 = new BitSet(new long[]{0x0000000010000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement5806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5835 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5853 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5871 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5889 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5907 = new BitSet(new long[]{0x8004010000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement5930 = new BitSet(new long[]{0x8004010000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_60_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement5971 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement5985 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6003 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6021 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6035 = new BitSet(new long[]{0x0080008000000000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6058 = new BitSet(new long[]{0x0080008000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement6084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6122 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_63_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6137 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_64_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6152 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_40_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6167 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6188 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000012L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause6206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6239 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6257 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6275 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000012L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause6293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6326 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6344 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6358 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6372 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6386 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6400 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6414 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6432 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000012L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause6450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6483 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement6501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6534 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6552 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6570 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6588 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6609 = new BitSet(new long[]{0x4030000000414790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement6655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement6688 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement6706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6739 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_Pattern_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6757 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6775 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000012L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement6793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAME_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6830 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6851 = new BitSet(new long[]{0x4020000000034790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6880 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6900 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_21_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6941 = new BitSet(new long[]{0x4020000000014790L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement6975 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7001 = new BitSet(new long[]{0x0000000000220000L});
    public static final BitSet FOLLOW_17_in_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement7075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_parse_edu_ustb_sei_mde_xmu2_statement_Skip7104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7133 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7147 = new BitSet(new long[]{0x1400860000000080L,0x0000000000000012L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Statement_in_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause7165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_ModelRule_in_parse_edu_ustb_sei_mde_xmu2_AbstractRule7194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_BlockStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_SwitchStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteNodeStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DeleteLinkStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_EnforcePatternStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ForEachStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_RuleCallStatement_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_Skip_in_parse_edu_ustb_sei_mde_xmu2_statement_Statement7295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_VariableExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ParenExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_AtomicExpression7386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_PropertyPatternExpression_in_parse_edu_ustb_sei_mde_xmu2_pattern_PatternExpression7417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EmptyExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_StringLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_IntegerLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_EnumLiteralExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_ObjectURIExpression_in_parse_edu_ustb_sei_mde_xmu2_expression_ConstantExpression7488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_LoopPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_FeaturePath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_OperationPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PositionPath_in_parse_edu_ustb_sei_mde_xmu2_expression_Path7539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_PatternCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause7560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_ExpressionCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause7570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_DefaultCaseClause_in_parse_edu_ustb_sei_mde_xmu2_statement_CaseClause7580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred14_Xmu21391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred15_Xmu21411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred16_Xmu21431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred17_Xmu21451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred18_Xmu21471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred19_Xmu21491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred20_Xmu21511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred29_Xmu22271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred30_Xmu22285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred31_Xmu22299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred32_Xmu22313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred33_Xmu22327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred34_Xmu22341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred35_Xmu22355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred38_Xmu22530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred39_Xmu22544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred40_Xmu22558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred41_Xmu22572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred42_Xmu22586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred43_Xmu22600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred44_Xmu22614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred45_Xmu22797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred46_Xmu22817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred47_Xmu22837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred48_Xmu22857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred49_Xmu22877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred50_Xmu22897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred51_Xmu22917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred52_Xmu23012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred53_Xmu23038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred54_Xmu23064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred55_Xmu23090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred56_Xmu23116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred57_Xmu23142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred58_Xmu23168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred63_Xmu23394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred64_Xmu23411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred65_Xmu23428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred66_Xmu23445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred67_Xmu23462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred68_Xmu23479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred69_Xmu23496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred75_Xmu24025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred76_Xmu24039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred77_Xmu24053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred78_Xmu24067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred79_Xmu24081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred80_Xmu24095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred81_Xmu24109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred83_Xmu24219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred85_Xmu24284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred88_Xmu24414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred90_Xmu24494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred91_Xmu24508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred92_Xmu24522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred95_Xmu24651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred96_Xmu24671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred97_Xmu24691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred99_Xmu24771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred100_Xmu24785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred101_Xmu24799 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred102_Xmu24813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred107_Xmu24939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred108_Xmu24953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred109_Xmu24967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred110_Xmu24981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred111_Xmu25032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred112_Xmu25046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred113_Xmu25060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred114_Xmu25074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred115_Xmu25088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred116_Xmu25155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred117_Xmu25175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred118_Xmu25195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred119_Xmu25215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred120_Xmu25235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred122_Xmu25315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred123_Xmu25329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred124_Xmu25343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred125_Xmu25357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred126_Xmu25371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred127_Xmu25385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred128_Xmu25452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred129_Xmu25472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_AdditiveExpression_in_synpred130_Xmu25492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_MultiplicativeExpression_in_synpred131_Xmu25512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred132_Xmu25532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred133_Xmu25552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_statement_UpdateClause_in_synpred137_Xmu25930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanOrExpression_in_synpred142_Xmu26344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_BooleanAndExpression_in_synpred143_Xmu26358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_RelationalExpression_in_synpred144_Xmu26372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_UnaryExpression_in_synpred145_Xmu26386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred146_Xmu26400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred148_Xmu26641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred149_Xmu26880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_expression_PathExpression_in_synpred150_Xmu26975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_edu_ustb_sei_mde_xmu2_pattern_ObjectPatternExpression_in_synpred168_Xmu27407 = new BitSet(new long[]{0x0000000000000002L});

}