/*
 * generated by Xtext 2.10.0
 */
package edu.ustb.sei.mde.xmuxtext.ide.contentassist.antlr;

import com.google.inject.Inject;
import edu.ustb.sei.mde.xmuxtext.ide.contentassist.antlr.internal.InternalXmu2Parser;
import edu.ustb.sei.mde.xmuxtext.services.Xmu2GrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class Xmu2Parser extends AbstractContentAssistParser {

	@Inject
	private Xmu2GrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalXmu2Parser createParser() {
		InternalXmu2Parser result = new InternalXmu2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractRuleAccess().getAlternatives(), "rule__AbstractRule__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getPatternExpressionAccess().getAlternatives(), "rule__PatternExpression__Alternatives");
					put(grammarAccess.getPathAccess().getAlternatives(), "rule__Path__Alternatives");
					put(grammarAccess.getAtomicExpressionAccess().getAlternatives(), "rule__AtomicExpression__Alternatives");
					put(grammarAccess.getConstantExpressionAccess().getAlternatives(), "rule__ConstantExpression__Alternatives");
					put(grammarAccess.getMultiplicativeExpressionChildAccess().getAlternatives(), "rule__MultiplicativeExpressionChild__Alternatives");
					put(grammarAccess.getAdditiveExpressionChildAccess().getAlternatives(), "rule__AdditiveExpressionChild__Alternatives");
					put(grammarAccess.getRelationalExpressionChildAccess().getAlternatives(), "rule__RelationalExpressionChild__Alternatives");
					put(grammarAccess.getBooleanAndExpressionChildAccess().getAlternatives(), "rule__BooleanAndExpressionChild__Alternatives");
					put(grammarAccess.getBooleanOrExpressionChildAccess().getAlternatives(), "rule__BooleanOrExpressionChild__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getCaseClauseAccess().getAlternatives(), "rule__CaseClause__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getTagAccess().getAlternatives(), "rule__Tag__Alternatives");
					put(grammarAccess.getLoopOperatorAccess().getAlternatives(), "rule__LoopOperator__Alternatives");
					put(grammarAccess.getPositionOperatorAccess().getAlternatives(), "rule__PositionOperator__Alternatives");
					put(grammarAccess.getEmptyValueAccess().getAlternatives(), "rule__EmptyValue__Alternatives");
					put(grammarAccess.getUnaryOperatorAccess().getAlternatives(), "rule__UnaryOperator__Alternatives");
					put(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives(), "rule__MultiplicativeOperator__Alternatives");
					put(grammarAccess.getAdditiveOperatorAccess().getAlternatives(), "rule__AdditiveOperator__Alternatives");
					put(grammarAccess.getRelationalOperatorAccess().getAlternatives(), "rule__RelationalOperator__Alternatives");
					put(grammarAccess.getActionTypeAccess().getAlternatives(), "rule__ActionType__Alternatives");
					put(grammarAccess.getTransformationModelAccess().getGroup(), "rule__TransformationModel__Group__0");
					put(grammarAccess.getTransformationModelAccess().getGroup_3(), "rule__TransformationModel__Group_3__0");
					put(grammarAccess.getEntryPointAccess().getGroup(), "rule__EntryPoint__Group__0");
					put(grammarAccess.getEntryPointAccess().getGroup_4(), "rule__EntryPoint__Group_4__0");
					put(grammarAccess.getEntryDataAccess().getGroup(), "rule__EntryData__Group__0");
					put(grammarAccess.getModelRuleAccess().getGroup(), "rule__ModelRule__Group__0");
					put(grammarAccess.getModelRuleAccess().getGroup_3(), "rule__ModelRule__Group_3__0");
					put(grammarAccess.getModelRuleAccess().getGroup_3_1(), "rule__ModelRule__Group_3_1__0");
					put(grammarAccess.getModelRuleAccess().getGroup_6(), "rule__ModelRule__Group_6__0");
					put(grammarAccess.getArithmeticRuleAccess().getGroup(), "rule__ArithmeticRule__Group__0");
					put(grammarAccess.getArithmeticRuleAccess().getGroup_3(), "rule__ArithmeticRule__Group_3__0");
					put(grammarAccess.getArithmeticRuleAccess().getGroup_3_1(), "rule__ArithmeticRule__Group_3_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getConcreteVariableDeclarationAccess().getGroup(), "rule__ConcreteVariableDeclaration__Group__0");
					put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
					put(grammarAccess.getPatternAccess().getGroup_1(), "rule__Pattern__Group_1__0");
					put(grammarAccess.getPatternNodeAccess().getGroup(), "rule__PatternNode__Group__0");
					put(grammarAccess.getPatternNodeAccess().getGroup_2(), "rule__PatternNode__Group_2__0");
					put(grammarAccess.getPatternNodeAccess().getGroup_2_1(), "rule__PatternNode__Group_2_1__0");
					put(grammarAccess.getPatternNodeAccess().getGroup_2_1_1(), "rule__PatternNode__Group_2_1_1__0");
					put(grammarAccess.getObjectPatternExpressionAccess().getGroup(), "rule__ObjectPatternExpression__Group__0");
					put(grammarAccess.getPropertyPatternExpressionAccess().getGroup(), "rule__PropertyPatternExpression__Group__0");
					put(grammarAccess.getLoopPathAccess().getGroup(), "rule__LoopPath__Group__0");
					put(grammarAccess.getPositionPathAccess().getGroup(), "rule__PositionPath__Group__0");
					put(grammarAccess.getFeaturePathAccess().getGroup(), "rule__FeaturePath__Group__0");
					put(grammarAccess.getOperationPathAccess().getGroup(), "rule__OperationPath__Group__0");
					put(grammarAccess.getOperationPathAccess().getGroup_3(), "rule__OperationPath__Group_3__0");
					put(grammarAccess.getOperationPathAccess().getGroup_3_1(), "rule__OperationPath__Group_3_1__0");
					put(grammarAccess.getEnumLiteralExpressionAccess().getGroup(), "rule__EnumLiteralExpression__Group__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup(), "rule__UnaryExpression__Group__0");
					put(grammarAccess.getUnaryExpressionChildAccess().getGroup(), "rule__UnaryExpressionChild__Group__0");
					put(grammarAccess.getUnaryExpressionChildAccess().getGroup_1(), "rule__UnaryExpressionChild__Group_1__0");
					put(grammarAccess.getAtomicExpressionAccess().getGroup_0(), "rule__AtomicExpression__Group_0__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getBooleanAndExpressionAccess().getGroup(), "rule__BooleanAndExpression__Group__0");
					put(grammarAccess.getBooleanAndExpressionAccess().getGroup_1(), "rule__BooleanAndExpression__Group_1__0");
					put(grammarAccess.getBooleanOrExpressionAccess().getGroup(), "rule__BooleanOrExpression__Group__0");
					put(grammarAccess.getBooleanOrExpressionAccess().getGroup_1(), "rule__BooleanOrExpression__Group_1__0");
					put(grammarAccess.getBlockStatementAccess().getGroup(), "rule__BlockStatement__Group__0");
					put(grammarAccess.getBlockStatementAccess().getGroup_2(), "rule__BlockStatement__Group_2__0");
					put(grammarAccess.getBlockStatementAccess().getGroup_2_1(), "rule__BlockStatement__Group_2_1__0");
					put(grammarAccess.getUpdateStatementAccess().getGroup(), "rule__UpdateStatement__Group__0");
					put(grammarAccess.getUpdateClauseAccess().getGroup(), "rule__UpdateClause__Group__0");
					put(grammarAccess.getSwitchStatementAccess().getGroup(), "rule__SwitchStatement__Group__0");
					put(grammarAccess.getPatternCaseClauseAccess().getGroup(), "rule__PatternCaseClause__Group__0");
					put(grammarAccess.getExpressionCaseClauseAccess().getGroup(), "rule__ExpressionCaseClause__Group__0");
					put(grammarAccess.getDefaultCaseClauseAccess().getGroup(), "rule__DefaultCaseClause__Group__0");
					put(grammarAccess.getDeleteNodeStatementAccess().getGroup(), "rule__DeleteNodeStatement__Group__0");
					put(grammarAccess.getDeleteLinkStatementAccess().getGroup(), "rule__DeleteLinkStatement__Group__0");
					put(grammarAccess.getEnforcePatternStatementAccess().getGroup(), "rule__EnforcePatternStatement__Group__0");
					put(grammarAccess.getForEachStatementAccess().getGroup(), "rule__ForEachStatement__Group__0");
					put(grammarAccess.getRuleCallStatementAccess().getGroup(), "rule__RuleCallStatement__Group__0");
					put(grammarAccess.getRuleCallStatementAccess().getGroup_2(), "rule__RuleCallStatement__Group_2__0");
					put(grammarAccess.getRuleCallStatementAccess().getGroup_2_1(), "rule__RuleCallStatement__Group_2_1__0");
					put(grammarAccess.getSkipAccess().getGroup(), "rule__Skip__Group__0");
					put(grammarAccess.getFailAccess().getGroup(), "rule__Fail__Group__0");
					put(grammarAccess.getAssignStatementAccess().getGroup(), "rule__AssignStatement__Group__0");
					put(grammarAccess.getTransformationModelAccess().getNameAssignment_2(), "rule__TransformationModel__NameAssignment_2");
					put(grammarAccess.getTransformationModelAccess().getPackagesAssignment_3_1(), "rule__TransformationModel__PackagesAssignment_3_1");
					put(grammarAccess.getTransformationModelAccess().getEntryPointsAssignment_4(), "rule__TransformationModel__EntryPointsAssignment_4");
					put(grammarAccess.getTransformationModelAccess().getRulesAssignment_5(), "rule__TransformationModel__RulesAssignment_5");
					put(grammarAccess.getEntryPointAccess().getRuleAssignment_1(), "rule__EntryPoint__RuleAssignment_1");
					put(grammarAccess.getEntryPointAccess().getParametersAssignment_3(), "rule__EntryPoint__ParametersAssignment_3");
					put(grammarAccess.getEntryPointAccess().getParametersAssignment_4_1(), "rule__EntryPoint__ParametersAssignment_4_1");
					put(grammarAccess.getEntryDataAccess().getTagAssignment_0(), "rule__EntryData__TagAssignment_0");
					put(grammarAccess.getEntryDataAccess().getIndexAssignment_2(), "rule__EntryData__IndexAssignment_2");
					put(grammarAccess.getEntryDataAccess().getFragmentAssignment_3(), "rule__EntryData__FragmentAssignment_3");
					put(grammarAccess.getModelRuleAccess().getNameAssignment_1(), "rule__ModelRule__NameAssignment_1");
					put(grammarAccess.getModelRuleAccess().getParametersAssignment_3_0(), "rule__ModelRule__ParametersAssignment_3_0");
					put(grammarAccess.getModelRuleAccess().getParametersAssignment_3_1_1(), "rule__ModelRule__ParametersAssignment_3_1_1");
					put(grammarAccess.getModelRuleAccess().getVariableDeclarationsAssignment_6_0(), "rule__ModelRule__VariableDeclarationsAssignment_6_0");
					put(grammarAccess.getModelRuleAccess().getStatementAssignment_7(), "rule__ModelRule__StatementAssignment_7");
					put(grammarAccess.getArithmeticRuleAccess().getNameAssignment_1(), "rule__ArithmeticRule__NameAssignment_1");
					put(grammarAccess.getArithmeticRuleAccess().getParametersAssignment_3_0(), "rule__ArithmeticRule__ParametersAssignment_3_0");
					put(grammarAccess.getArithmeticRuleAccess().getParametersAssignment_3_1_1(), "rule__ArithmeticRule__ParametersAssignment_3_1_1");
					put(grammarAccess.getArithmeticRuleAccess().getStatementsAssignment_6(), "rule__ArithmeticRule__StatementsAssignment_6");
					put(grammarAccess.getParameterAccess().getTagAssignment_0(), "rule__Parameter__TagAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_3(), "rule__Parameter__TypeAssignment_3");
					put(grammarAccess.getConcreteVariableDeclarationAccess().getNameAssignment_0(), "rule__ConcreteVariableDeclaration__NameAssignment_0");
					put(grammarAccess.getConcreteVariableDeclarationAccess().getTypeAssignment_2(), "rule__ConcreteVariableDeclaration__TypeAssignment_2");
					put(grammarAccess.getPatternAccess().getRootAssignment_0(), "rule__Pattern__RootAssignment_0");
					put(grammarAccess.getPatternAccess().getGuardAssignment_1_1(), "rule__Pattern__GuardAssignment_1_1");
					put(grammarAccess.getPatternNodeAccess().getVariableAssignment_1(), "rule__PatternNode__VariableAssignment_1");
					put(grammarAccess.getPatternNodeAccess().getExpressionsAssignment_2_1_0(), "rule__PatternNode__ExpressionsAssignment_2_1_0");
					put(grammarAccess.getPatternNodeAccess().getExpressionsAssignment_2_1_1_1(), "rule__PatternNode__ExpressionsAssignment_2_1_1_1");
					put(grammarAccess.getObjectPatternExpressionAccess().getFeatureAssignment_1(), "rule__ObjectPatternExpression__FeatureAssignment_1");
					put(grammarAccess.getObjectPatternExpressionAccess().getSelectorAssignment_2(), "rule__ObjectPatternExpression__SelectorAssignment_2");
					put(grammarAccess.getObjectPatternExpressionAccess().getPositionAssignment_3(), "rule__ObjectPatternExpression__PositionAssignment_3");
					put(grammarAccess.getObjectPatternExpressionAccess().getNullableAssignment_5(), "rule__ObjectPatternExpression__NullableAssignment_5");
					put(grammarAccess.getObjectPatternExpressionAccess().getTargetNodeAssignment_6(), "rule__ObjectPatternExpression__TargetNodeAssignment_6");
					put(grammarAccess.getPropertyPatternExpressionAccess().getFeatureAssignment_1(), "rule__PropertyPatternExpression__FeatureAssignment_1");
					put(grammarAccess.getPropertyPatternExpressionAccess().getSelectorAssignment_2(), "rule__PropertyPatternExpression__SelectorAssignment_2");
					put(grammarAccess.getPropertyPatternExpressionAccess().getPositionAssignment_3(), "rule__PropertyPatternExpression__PositionAssignment_3");
					put(grammarAccess.getPropertyPatternExpressionAccess().getNullableAssignment_5(), "rule__PropertyPatternExpression__NullableAssignment_5");
					put(grammarAccess.getPropertyPatternExpressionAccess().getTargetExpressionAssignment_6(), "rule__PropertyPatternExpression__TargetExpressionAssignment_6");
					put(grammarAccess.getReflectiveVariableDeclarationAccess().getNameAssignment(), "rule__ReflectiveVariableDeclaration__NameAssignment");
					put(grammarAccess.getLoopPathAccess().getOperatorAssignment_1(), "rule__LoopPath__OperatorAssignment_1");
					put(grammarAccess.getLoopPathAccess().getVariableAssignment_3(), "rule__LoopPath__VariableAssignment_3");
					put(grammarAccess.getLoopPathAccess().getBodyAssignment_5(), "rule__LoopPath__BodyAssignment_5");
					put(grammarAccess.getPositionPathAccess().getTypeAssignment_1(), "rule__PositionPath__TypeAssignment_1");
					put(grammarAccess.getPositionPathAccess().getValueAssignment_3(), "rule__PositionPath__ValueAssignment_3");
					put(grammarAccess.getFeaturePathAccess().getFeatureAssignment_1(), "rule__FeaturePath__FeatureAssignment_1");
					put(grammarAccess.getOperationPathAccess().getOperationAssignment_1(), "rule__OperationPath__OperationAssignment_1");
					put(grammarAccess.getOperationPathAccess().getParametersAssignment_3_0(), "rule__OperationPath__ParametersAssignment_3_0");
					put(grammarAccess.getOperationPathAccess().getParametersAssignment_3_1_1(), "rule__OperationPath__ParametersAssignment_3_1_1");
					put(grammarAccess.getVariableExpressionAccess().getVariableAssignment(), "rule__VariableExpression__VariableAssignment");
					put(grammarAccess.getEmptyExpressionAccess().getTypeAssignment(), "rule__EmptyExpression__TypeAssignment");
					put(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment(), "rule__StringLiteralExpression__ValueAssignment");
					put(grammarAccess.getIntegerLiteralExpressionAccess().getValueAssignment(), "rule__IntegerLiteralExpression__ValueAssignment");
					put(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment(), "rule__BooleanLiteralExpression__ValueAssignment");
					put(grammarAccess.getEnumLiteralExpressionAccess().getTypeAssignment_0(), "rule__EnumLiteralExpression__TypeAssignment_0");
					put(grammarAccess.getEnumLiteralExpressionAccess().getValueAssignment_2(), "rule__EnumLiteralExpression__ValueAssignment_2");
					put(grammarAccess.getObjectURIExpressionAccess().getObjectAssignment(), "rule__ObjectURIExpression__ObjectAssignment");
					put(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0(), "rule__UnaryExpression__OperatorAssignment_0");
					put(grammarAccess.getUnaryExpressionAccess().getBodyAssignment_1(), "rule__UnaryExpression__BodyAssignment_1");
					put(grammarAccess.getUnaryExpressionChildAccess().getPathAssignment_1_1(), "rule__UnaryExpressionChild__PathAssignment_1_1");
					put(grammarAccess.getUnaryExpressionChildAccess().getPathAssignment_1_2(), "rule__UnaryExpressionChild__PathAssignment_1_2");
					put(grammarAccess.getAtomicExpressionAccess().getBodyAssignment_0_2(), "rule__AtomicExpression__BodyAssignment_0_2");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_0(), "rule__MultiplicativeExpression__OperandsAssignment_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAssignment_1_0(), "rule__MultiplicativeExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_1_1(), "rule__MultiplicativeExpression__OperandsAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_0(), "rule__AdditiveExpression__OperandsAssignment_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOperatorsAssignment_1_0(), "rule__AdditiveExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_1_1(), "rule__AdditiveExpression__OperandsAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getLeftAssignment_0(), "rule__RelationalExpression__LeftAssignment_0");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1(), "rule__RelationalExpression__OperatorAssignment_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightAssignment_2(), "rule__RelationalExpression__RightAssignment_2");
					put(grammarAccess.getBooleanAndExpressionAccess().getOperandsAssignment_0(), "rule__BooleanAndExpression__OperandsAssignment_0");
					put(grammarAccess.getBooleanAndExpressionAccess().getOperandsAssignment_1_1(), "rule__BooleanAndExpression__OperandsAssignment_1_1");
					put(grammarAccess.getBooleanOrExpressionAccess().getOperandsAssignment_0(), "rule__BooleanOrExpression__OperandsAssignment_0");
					put(grammarAccess.getBooleanOrExpressionAccess().getOperandsAssignment_1_1(), "rule__BooleanOrExpression__OperandsAssignment_1_1");
					put(grammarAccess.getBlockStatementAccess().getBodyAssignment_2_0(), "rule__BlockStatement__BodyAssignment_2_0");
					put(grammarAccess.getBlockStatementAccess().getBodyAssignment_2_1_1(), "rule__BlockStatement__BodyAssignment_2_1_1");
					put(grammarAccess.getUpdateStatementAccess().getSourceAssignment_1(), "rule__UpdateStatement__SourceAssignment_1");
					put(grammarAccess.getUpdateStatementAccess().getViewAssignment_3(), "rule__UpdateStatement__ViewAssignment_3");
					put(grammarAccess.getUpdateStatementAccess().getClausesAssignment_5(), "rule__UpdateStatement__ClausesAssignment_5");
					put(grammarAccess.getUpdateClauseAccess().getTypeAssignment_0(), "rule__UpdateClause__TypeAssignment_0");
					put(grammarAccess.getUpdateClauseAccess().getStatementAssignment_2(), "rule__UpdateClause__StatementAssignment_2");
					put(grammarAccess.getSwitchStatementAccess().getRootAssignment_2(), "rule__SwitchStatement__RootAssignment_2");
					put(grammarAccess.getSwitchStatementAccess().getCasesAssignment_5(), "rule__SwitchStatement__CasesAssignment_5");
					put(grammarAccess.getPatternCaseClauseAccess().getConditionAssignment_1(), "rule__PatternCaseClause__ConditionAssignment_1");
					put(grammarAccess.getPatternCaseClauseAccess().getActionAssignment_3(), "rule__PatternCaseClause__ActionAssignment_3");
					put(grammarAccess.getExpressionCaseClauseAccess().getConditionAssignment_1(), "rule__ExpressionCaseClause__ConditionAssignment_1");
					put(grammarAccess.getExpressionCaseClauseAccess().getActionAssignment_3(), "rule__ExpressionCaseClause__ActionAssignment_3");
					put(grammarAccess.getDefaultCaseClauseAccess().getActionAssignment_2(), "rule__DefaultCaseClause__ActionAssignment_2");
					put(grammarAccess.getDeleteNodeStatementAccess().getNodeAssignment_1(), "rule__DeleteNodeStatement__NodeAssignment_1");
					put(grammarAccess.getDeleteLinkStatementAccess().getSourceAssignment_2(), "rule__DeleteLinkStatement__SourceAssignment_2");
					put(grammarAccess.getDeleteLinkStatementAccess().getFeatureAssignment_4(), "rule__DeleteLinkStatement__FeatureAssignment_4");
					put(grammarAccess.getDeleteLinkStatementAccess().getTargetAssignment_6(), "rule__DeleteLinkStatement__TargetAssignment_6");
					put(grammarAccess.getEnforcePatternStatementAccess().getPatternAssignment_1(), "rule__EnforcePatternStatement__PatternAssignment_1");
					put(grammarAccess.getForEachStatementAccess().getPatternAssignment_1(), "rule__ForEachStatement__PatternAssignment_1");
					put(grammarAccess.getForEachStatementAccess().getActionAssignment_3(), "rule__ForEachStatement__ActionAssignment_3");
					put(grammarAccess.getRuleCallStatementAccess().getRuleAssignment_0(), "rule__RuleCallStatement__RuleAssignment_0");
					put(grammarAccess.getRuleCallStatementAccess().getParametersAssignment_2_0(), "rule__RuleCallStatement__ParametersAssignment_2_0");
					put(grammarAccess.getRuleCallStatementAccess().getParametersAssignment_2_1_1(), "rule__RuleCallStatement__ParametersAssignment_2_1_1");
					put(grammarAccess.getFailAccess().getExpressionAssignment_2(), "rule__Fail__ExpressionAssignment_2");
					put(grammarAccess.getAssignStatementAccess().getUpdatedVariableAssignment_0(), "rule__AssignStatement__UpdatedVariableAssignment_0");
					put(grammarAccess.getAssignStatementAccess().getValueAssignment_2(), "rule__AssignStatement__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalXmu2Parser typedParser = (InternalXmu2Parser) parser;
			typedParser.entryRuleTransformationModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public Xmu2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(Xmu2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
