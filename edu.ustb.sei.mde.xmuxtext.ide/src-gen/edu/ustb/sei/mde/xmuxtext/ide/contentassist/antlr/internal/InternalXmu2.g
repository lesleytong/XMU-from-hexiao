/*
 * generated by Xtext 2.10.0
 */
grammar InternalXmu2;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package edu.ustb.sei.mde.xmuxtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.ustb.sei.mde.xmuxtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.ustb.sei.mde.xmuxtext.services.Xmu2GrammarAccess;

}
@parser::members {
	private Xmu2GrammarAccess grammarAccess;

	public void setGrammarAccess(Xmu2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTransformationModel
entryRuleTransformationModel
:
{ before(grammarAccess.getTransformationModelRule()); }
	 ruleTransformationModel
{ after(grammarAccess.getTransformationModelRule()); } 
	 EOF 
;

// Rule TransformationModel
ruleTransformationModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationModelAccess().getGroup()); }
		(rule__TransformationModel__Group__0)
		{ after(grammarAccess.getTransformationModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntryPoint
entryRuleEntryPoint
:
{ before(grammarAccess.getEntryPointRule()); }
	 ruleEntryPoint
{ after(grammarAccess.getEntryPointRule()); } 
	 EOF 
;

// Rule EntryPoint
ruleEntryPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryPointAccess().getGroup()); }
		(rule__EntryPoint__Group__0)
		{ after(grammarAccess.getEntryPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntryData
entryRuleEntryData
:
{ before(grammarAccess.getEntryDataRule()); }
	 ruleEntryData
{ after(grammarAccess.getEntryDataRule()); } 
	 EOF 
;

// Rule EntryData
ruleEntryData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryDataAccess().getGroup()); }
		(rule__EntryData__Group__0)
		{ after(grammarAccess.getEntryDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractRule
entryRuleAbstractRule
:
{ before(grammarAccess.getAbstractRuleRule()); }
	 ruleAbstractRule
{ after(grammarAccess.getAbstractRuleRule()); } 
	 EOF 
;

// Rule AbstractRule
ruleAbstractRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractRuleAccess().getAlternatives()); }
		(rule__AbstractRule__Alternatives)
		{ after(grammarAccess.getAbstractRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelRule
entryRuleModelRule
:
{ before(grammarAccess.getModelRuleRule()); }
	 ruleModelRule
{ after(grammarAccess.getModelRuleRule()); } 
	 EOF 
;

// Rule ModelRule
ruleModelRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelRuleAccess().getGroup()); }
		(rule__ModelRule__Group__0)
		{ after(grammarAccess.getModelRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticRule
entryRuleArithmeticRule
:
{ before(grammarAccess.getArithmeticRuleRule()); }
	 ruleArithmeticRule
{ after(grammarAccess.getArithmeticRuleRule()); } 
	 EOF 
;

// Rule ArithmeticRule
ruleArithmeticRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticRuleAccess().getGroup()); }
		(rule__ArithmeticRule__Group__0)
		{ after(grammarAccess.getArithmeticRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcreteVariableDeclaration
entryRuleConcreteVariableDeclaration
:
{ before(grammarAccess.getConcreteVariableDeclarationRule()); }
	 ruleConcreteVariableDeclaration
{ after(grammarAccess.getConcreteVariableDeclarationRule()); } 
	 EOF 
;

// Rule ConcreteVariableDeclaration
ruleConcreteVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcreteVariableDeclarationAccess().getGroup()); }
		(rule__ConcreteVariableDeclaration__Group__0)
		{ after(grammarAccess.getConcreteVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getGroup()); }
		(rule__Pattern__Group__0)
		{ after(grammarAccess.getPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternNode
entryRulePatternNode
:
{ before(grammarAccess.getPatternNodeRule()); }
	 rulePatternNode
{ after(grammarAccess.getPatternNodeRule()); } 
	 EOF 
;

// Rule PatternNode
rulePatternNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternNodeAccess().getGroup()); }
		(rule__PatternNode__Group__0)
		{ after(grammarAccess.getPatternNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternExpression
entryRulePatternExpression
:
{ before(grammarAccess.getPatternExpressionRule()); }
	 rulePatternExpression
{ after(grammarAccess.getPatternExpressionRule()); } 
	 EOF 
;

// Rule PatternExpression
rulePatternExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternExpressionAccess().getAlternatives()); }
		(rule__PatternExpression__Alternatives)
		{ after(grammarAccess.getPatternExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectPatternExpression
entryRuleObjectPatternExpression
:
{ before(grammarAccess.getObjectPatternExpressionRule()); }
	 ruleObjectPatternExpression
{ after(grammarAccess.getObjectPatternExpressionRule()); } 
	 EOF 
;

// Rule ObjectPatternExpression
ruleObjectPatternExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectPatternExpressionAccess().getGroup()); }
		(rule__ObjectPatternExpression__Group__0)
		{ after(grammarAccess.getObjectPatternExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyPatternExpression
entryRulePropertyPatternExpression
:
{ before(grammarAccess.getPropertyPatternExpressionRule()); }
	 rulePropertyPatternExpression
{ after(grammarAccess.getPropertyPatternExpressionRule()); } 
	 EOF 
;

// Rule PropertyPatternExpression
rulePropertyPatternExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyPatternExpressionAccess().getGroup()); }
		(rule__PropertyPatternExpression__Group__0)
		{ after(grammarAccess.getPropertyPatternExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoopPath
entryRuleLoopPath
:
{ before(grammarAccess.getLoopPathRule()); }
	 ruleLoopPath
{ after(grammarAccess.getLoopPathRule()); } 
	 EOF 
;

// Rule LoopPath
ruleLoopPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopPathAccess().getGroup()); }
		(rule__LoopPath__Group__0)
		{ after(grammarAccess.getLoopPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePositionPath
entryRulePositionPath
:
{ before(grammarAccess.getPositionPathRule()); }
	 rulePositionPath
{ after(grammarAccess.getPositionPathRule()); } 
	 EOF 
;

// Rule PositionPath
rulePositionPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionPathAccess().getGroup()); }
		(rule__PositionPath__Group__0)
		{ after(grammarAccess.getPositionPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeaturePath
entryRuleFeaturePath
:
{ before(grammarAccess.getFeaturePathRule()); }
	 ruleFeaturePath
{ after(grammarAccess.getFeaturePathRule()); } 
	 EOF 
;

// Rule FeaturePath
ruleFeaturePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeaturePathAccess().getGroup()); }
		(rule__FeaturePath__Group__0)
		{ after(grammarAccess.getFeaturePathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationPath
entryRuleOperationPath
:
{ before(grammarAccess.getOperationPathRule()); }
	 ruleOperationPath
{ after(grammarAccess.getOperationPathRule()); } 
	 EOF 
;

// Rule OperationPath
ruleOperationPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationPathAccess().getGroup()); }
		(rule__OperationPath__Group__0)
		{ after(grammarAccess.getOperationPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableExpression
entryRuleVariableExpression
:
{ before(grammarAccess.getVariableExpressionRule()); }
	 ruleVariableExpression
{ after(grammarAccess.getVariableExpressionRule()); } 
	 EOF 
;

// Rule VariableExpression
ruleVariableExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getVariableAssignment()); }
		(rule__VariableExpression__VariableAssignment)
		{ after(grammarAccess.getVariableExpressionAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getAlternatives()); }
		(rule__Path__Alternatives)
		{ after(grammarAccess.getPathAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyExpression
entryRuleEmptyExpression
:
{ before(grammarAccess.getEmptyExpressionRule()); }
	 ruleEmptyExpression
{ after(grammarAccess.getEmptyExpressionRule()); } 
	 EOF 
;

// Rule EmptyExpression
ruleEmptyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyExpressionAccess().getTypeAssignment()); }
		(rule__EmptyExpression__TypeAssignment)
		{ after(grammarAccess.getEmptyExpressionAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteralExpression
entryRuleStringLiteralExpression
:
{ before(grammarAccess.getStringLiteralExpressionRule()); }
	 ruleStringLiteralExpression
{ after(grammarAccess.getStringLiteralExpressionRule()); } 
	 EOF 
;

// Rule StringLiteralExpression
ruleStringLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment()); }
		(rule__StringLiteralExpression__ValueAssignment)
		{ after(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteralExpression
entryRuleIntegerLiteralExpression
:
{ before(grammarAccess.getIntegerLiteralExpressionRule()); }
	 ruleIntegerLiteralExpression
{ after(grammarAccess.getIntegerLiteralExpressionRule()); } 
	 EOF 
;

// Rule IntegerLiteralExpression
ruleIntegerLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralExpressionAccess().getValueAssignment()); }
		(rule__IntegerLiteralExpression__ValueAssignment)
		{ after(grammarAccess.getIntegerLiteralExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteralExpression
entryRuleBooleanLiteralExpression
:
{ before(grammarAccess.getBooleanLiteralExpressionRule()); }
	 ruleBooleanLiteralExpression
{ after(grammarAccess.getBooleanLiteralExpressionRule()); } 
	 EOF 
;

// Rule BooleanLiteralExpression
ruleBooleanLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment()); }
		(rule__BooleanLiteralExpression__ValueAssignment)
		{ after(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteralExpression
entryRuleEnumLiteralExpression
:
{ before(grammarAccess.getEnumLiteralExpressionRule()); }
	 ruleEnumLiteralExpression
{ after(grammarAccess.getEnumLiteralExpressionRule()); } 
	 EOF 
;

// Rule EnumLiteralExpression
ruleEnumLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralExpressionAccess().getGroup()); }
		(rule__EnumLiteralExpression__Group__0)
		{ after(grammarAccess.getEnumLiteralExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectURIExpression
entryRuleObjectURIExpression
:
{ before(grammarAccess.getObjectURIExpressionRule()); }
	 ruleObjectURIExpression
{ after(grammarAccess.getObjectURIExpressionRule()); } 
	 EOF 
;

// Rule ObjectURIExpression
ruleObjectURIExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectURIExpressionAccess().getObjectAssignment()); }
		(rule__ObjectURIExpression__ObjectAssignment)
		{ after(grammarAccess.getObjectURIExpressionAccess().getObjectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpressionChild
entryRuleUnaryExpressionChild
:
{ before(grammarAccess.getUnaryExpressionChildRule()); }
	 ruleUnaryExpressionChild
{ after(grammarAccess.getUnaryExpressionChildRule()); } 
	 EOF 
;

// Rule UnaryExpressionChild
ruleUnaryExpressionChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionChildAccess().getGroup()); }
		(rule__UnaryExpressionChild__Group__0)
		{ after(grammarAccess.getUnaryExpressionChildAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
		(rule__AtomicExpression__Alternatives)
		{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
		(rule__ConstantExpression__Alternatives)
		{ after(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpressionChild
entryRuleMultiplicativeExpressionChild
:
{ before(grammarAccess.getMultiplicativeExpressionChildRule()); }
	 ruleMultiplicativeExpressionChild
{ after(grammarAccess.getMultiplicativeExpressionChildRule()); } 
	 EOF 
;

// Rule MultiplicativeExpressionChild
ruleMultiplicativeExpressionChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionChildAccess().getAlternatives()); }
		(rule__MultiplicativeExpressionChild__Alternatives)
		{ after(grammarAccess.getMultiplicativeExpressionChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpressionChild
entryRuleAdditiveExpressionChild
:
{ before(grammarAccess.getAdditiveExpressionChildRule()); }
	 ruleAdditiveExpressionChild
{ after(grammarAccess.getAdditiveExpressionChildRule()); } 
	 EOF 
;

// Rule AdditiveExpressionChild
ruleAdditiveExpressionChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionChildAccess().getAlternatives()); }
		(rule__AdditiveExpressionChild__Alternatives)
		{ after(grammarAccess.getAdditiveExpressionChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpressionChild
entryRuleRelationalExpressionChild
:
{ before(grammarAccess.getRelationalExpressionChildRule()); }
	 ruleRelationalExpressionChild
{ after(grammarAccess.getRelationalExpressionChildRule()); } 
	 EOF 
;

// Rule RelationalExpressionChild
ruleRelationalExpressionChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionChildAccess().getAlternatives()); }
		(rule__RelationalExpressionChild__Alternatives)
		{ after(grammarAccess.getRelationalExpressionChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanAndExpression
entryRuleBooleanAndExpression
:
{ before(grammarAccess.getBooleanAndExpressionRule()); }
	 ruleBooleanAndExpression
{ after(grammarAccess.getBooleanAndExpressionRule()); } 
	 EOF 
;

// Rule BooleanAndExpression
ruleBooleanAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAndExpressionAccess().getGroup()); }
		(rule__BooleanAndExpression__Group__0)
		{ after(grammarAccess.getBooleanAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanAndExpressionChild
entryRuleBooleanAndExpressionChild
:
{ before(grammarAccess.getBooleanAndExpressionChildRule()); }
	 ruleBooleanAndExpressionChild
{ after(grammarAccess.getBooleanAndExpressionChildRule()); } 
	 EOF 
;

// Rule BooleanAndExpressionChild
ruleBooleanAndExpressionChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAndExpressionChildAccess().getAlternatives()); }
		(rule__BooleanAndExpressionChild__Alternatives)
		{ after(grammarAccess.getBooleanAndExpressionChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOrExpression
entryRuleBooleanOrExpression
:
{ before(grammarAccess.getBooleanOrExpressionRule()); }
	 ruleBooleanOrExpression
{ after(grammarAccess.getBooleanOrExpressionRule()); } 
	 EOF 
;

// Rule BooleanOrExpression
ruleBooleanOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOrExpressionAccess().getGroup()); }
		(rule__BooleanOrExpression__Group__0)
		{ after(grammarAccess.getBooleanOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOrExpressionChild
entryRuleBooleanOrExpressionChild
:
{ before(grammarAccess.getBooleanOrExpressionChildRule()); }
	 ruleBooleanOrExpressionChild
{ after(grammarAccess.getBooleanOrExpressionChildRule()); } 
	 EOF 
;

// Rule BooleanOrExpressionChild
ruleBooleanOrExpressionChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOrExpressionChildAccess().getAlternatives()); }
		(rule__BooleanOrExpressionChild__Alternatives)
		{ after(grammarAccess.getBooleanOrExpressionChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockStatement
entryRuleBlockStatement
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleBlockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockStatementAccess().getGroup()); }
		(rule__BlockStatement__Group__0)
		{ after(grammarAccess.getBlockStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateStatement
entryRuleUpdateStatement
:
{ before(grammarAccess.getUpdateStatementRule()); }
	 ruleUpdateStatement
{ after(grammarAccess.getUpdateStatementRule()); } 
	 EOF 
;

// Rule UpdateStatement
ruleUpdateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getGroup()); }
		(rule__UpdateStatement__Group__0)
		{ after(grammarAccess.getUpdateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateClause
entryRuleUpdateClause
:
{ before(grammarAccess.getUpdateClauseRule()); }
	 ruleUpdateClause
{ after(grammarAccess.getUpdateClauseRule()); } 
	 EOF 
;

// Rule UpdateClause
ruleUpdateClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateClauseAccess().getGroup()); }
		(rule__UpdateClause__Group__0)
		{ after(grammarAccess.getUpdateClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
		(rule__SwitchStatement__Group__0)
		{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseClause
entryRuleCaseClause
:
{ before(grammarAccess.getCaseClauseRule()); }
	 ruleCaseClause
{ after(grammarAccess.getCaseClauseRule()); } 
	 EOF 
;

// Rule CaseClause
ruleCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseClauseAccess().getAlternatives()); }
		(rule__CaseClause__Alternatives)
		{ after(grammarAccess.getCaseClauseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternCaseClause
entryRulePatternCaseClause
:
{ before(grammarAccess.getPatternCaseClauseRule()); }
	 rulePatternCaseClause
{ after(grammarAccess.getPatternCaseClauseRule()); } 
	 EOF 
;

// Rule PatternCaseClause
rulePatternCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternCaseClauseAccess().getGroup()); }
		(rule__PatternCaseClause__Group__0)
		{ after(grammarAccess.getPatternCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionCaseClause
entryRuleExpressionCaseClause
:
{ before(grammarAccess.getExpressionCaseClauseRule()); }
	 ruleExpressionCaseClause
{ after(grammarAccess.getExpressionCaseClauseRule()); } 
	 EOF 
;

// Rule ExpressionCaseClause
ruleExpressionCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionCaseClauseAccess().getGroup()); }
		(rule__ExpressionCaseClause__Group__0)
		{ after(grammarAccess.getExpressionCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefaultCaseClause
entryRuleDefaultCaseClause
:
{ before(grammarAccess.getDefaultCaseClauseRule()); }
	 ruleDefaultCaseClause
{ after(grammarAccess.getDefaultCaseClauseRule()); } 
	 EOF 
;

// Rule DefaultCaseClause
ruleDefaultCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultCaseClauseAccess().getGroup()); }
		(rule__DefaultCaseClause__Group__0)
		{ after(grammarAccess.getDefaultCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteNodeStatement
entryRuleDeleteNodeStatement
:
{ before(grammarAccess.getDeleteNodeStatementRule()); }
	 ruleDeleteNodeStatement
{ after(grammarAccess.getDeleteNodeStatementRule()); } 
	 EOF 
;

// Rule DeleteNodeStatement
ruleDeleteNodeStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteNodeStatementAccess().getGroup()); }
		(rule__DeleteNodeStatement__Group__0)
		{ after(grammarAccess.getDeleteNodeStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteLinkStatement
entryRuleDeleteLinkStatement
:
{ before(grammarAccess.getDeleteLinkStatementRule()); }
	 ruleDeleteLinkStatement
{ after(grammarAccess.getDeleteLinkStatementRule()); } 
	 EOF 
;

// Rule DeleteLinkStatement
ruleDeleteLinkStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteLinkStatementAccess().getGroup()); }
		(rule__DeleteLinkStatement__Group__0)
		{ after(grammarAccess.getDeleteLinkStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnforcePatternStatement
entryRuleEnforcePatternStatement
:
{ before(grammarAccess.getEnforcePatternStatementRule()); }
	 ruleEnforcePatternStatement
{ after(grammarAccess.getEnforcePatternStatementRule()); } 
	 EOF 
;

// Rule EnforcePatternStatement
ruleEnforcePatternStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnforcePatternStatementAccess().getGroup()); }
		(rule__EnforcePatternStatement__Group__0)
		{ after(grammarAccess.getEnforcePatternStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForEachStatement
entryRuleForEachStatement
:
{ before(grammarAccess.getForEachStatementRule()); }
	 ruleForEachStatement
{ after(grammarAccess.getForEachStatementRule()); } 
	 EOF 
;

// Rule ForEachStatement
ruleForEachStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForEachStatementAccess().getGroup()); }
		(rule__ForEachStatement__Group__0)
		{ after(grammarAccess.getForEachStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleCallStatement
entryRuleRuleCallStatement
:
{ before(grammarAccess.getRuleCallStatementRule()); }
	 ruleRuleCallStatement
{ after(grammarAccess.getRuleCallStatementRule()); } 
	 EOF 
;

// Rule RuleCallStatement
ruleRuleCallStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleCallStatementAccess().getGroup()); }
		(rule__RuleCallStatement__Group__0)
		{ after(grammarAccess.getRuleCallStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSkip
entryRuleSkip
:
{ before(grammarAccess.getSkipRule()); }
	 ruleSkip
{ after(grammarAccess.getSkipRule()); } 
	 EOF 
;

// Rule Skip
ruleSkip 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkipAccess().getGroup()); }
		(rule__Skip__Group__0)
		{ after(grammarAccess.getSkipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFail
entryRuleFail
:
{ before(grammarAccess.getFailRule()); }
	 ruleFail
{ after(grammarAccess.getFailRule()); } 
	 EOF 
;

// Rule Fail
ruleFail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailAccess().getGroup()); }
		(rule__Fail__Group__0)
		{ after(grammarAccess.getFailAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignStatement
entryRuleAssignStatement
:
{ before(grammarAccess.getAssignStatementRule()); }
	 ruleAssignStatement
{ after(grammarAccess.getAssignStatementRule()); } 
	 EOF 
;

// Rule AssignStatement
ruleAssignStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignStatementAccess().getGroup()); }
		(rule__AssignStatement__Group__0)
		{ after(grammarAccess.getAssignStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Tag
ruleTag
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getAlternatives()); }
		(rule__Tag__Alternatives)
		{ after(grammarAccess.getTagAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LoopOperator
ruleLoopOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopOperatorAccess().getAlternatives()); }
		(rule__LoopOperator__Alternatives)
		{ after(grammarAccess.getLoopOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PositionOperator
rulePositionOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionOperatorAccess().getAlternatives()); }
		(rule__PositionOperator__Alternatives)
		{ after(grammarAccess.getPositionOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EmptyValue
ruleEmptyValue
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyValueAccess().getAlternatives()); }
		(rule__EmptyValue__Alternatives)
		{ after(grammarAccess.getEmptyValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryOperator
ruleUnaryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MultiplicativeOperator
ruleMultiplicativeOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
		(rule__MultiplicativeOperator__Alternatives)
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AdditiveOperator
ruleAdditiveOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
		(rule__AdditiveOperator__Alternatives)
		{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RelationalOperator
ruleRelationalOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
		(rule__RelationalOperator__Alternatives)
		{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ActionType
ruleActionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionTypeAccess().getAlternatives()); }
		(rule__ActionType__Alternatives)
		{ after(grammarAccess.getActionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractRuleAccess().getArithmeticRuleParserRuleCall_0()); }
		ruleArithmeticRule
		{ after(grammarAccess.getAbstractRuleAccess().getArithmeticRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getModelRuleParserRuleCall_1()); }
		ruleModelRule
		{ after(grammarAccess.getAbstractRuleAccess().getModelRuleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getPRIMITIVE_TYPETerminalRuleCall_0()); }
		RULE_PRIMITIVE_TYPE
		{ after(grammarAccess.getTypeAccess().getPRIMITIVE_TYPETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getPATH_NAMETerminalRuleCall_1()); }
		RULE_PATH_NAME
		{ after(grammarAccess.getTypeAccess().getPATH_NAMETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternExpressionAccess().getPropertyPatternExpressionParserRuleCall_0()); }
		(rulePropertyPatternExpression)
		{ after(grammarAccess.getPatternExpressionAccess().getPropertyPatternExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternExpressionAccess().getObjectPatternExpressionParserRuleCall_1()); }
		ruleObjectPatternExpression
		{ after(grammarAccess.getPatternExpressionAccess().getObjectPatternExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getLoopPathParserRuleCall_0()); }
		(ruleLoopPath)
		{ after(grammarAccess.getPathAccess().getLoopPathParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getPositionPathParserRuleCall_1()); }
		rulePositionPath
		{ after(grammarAccess.getPathAccess().getPositionPathParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getFeaturePathParserRuleCall_2()); }
		(ruleFeaturePath)
		{ after(grammarAccess.getPathAccess().getFeaturePathParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getOperationPathParserRuleCall_3()); }
		ruleOperationPath
		{ after(grammarAccess.getPathAccess().getOperationPathParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_0()); }
		(rule__AtomicExpression__Group_0__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getVariableExpressionParserRuleCall_1()); }
		ruleVariableExpression
		{ after(grammarAccess.getAtomicExpressionAccess().getVariableExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_2()); }
		ruleConstantExpression
		{ after(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getEmptyExpressionParserRuleCall_0()); }
		ruleEmptyExpression
		{ after(grammarAccess.getConstantExpressionAccess().getEmptyExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getStringLiteralExpressionParserRuleCall_1()); }
		ruleStringLiteralExpression
		{ after(grammarAccess.getConstantExpressionAccess().getStringLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getIntegerLiteralExpressionParserRuleCall_2()); }
		ruleIntegerLiteralExpression
		{ after(grammarAccess.getConstantExpressionAccess().getIntegerLiteralExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getBooleanLiteralExpressionParserRuleCall_3()); }
		ruleBooleanLiteralExpression
		{ after(grammarAccess.getConstantExpressionAccess().getBooleanLiteralExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getEnumLiteralExpressionParserRuleCall_4()); }
		ruleEnumLiteralExpression
		{ after(grammarAccess.getConstantExpressionAccess().getEnumLiteralExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getObjectURIExpressionParserRuleCall_5()); }
		ruleObjectURIExpression
		{ after(grammarAccess.getConstantExpressionAccess().getObjectURIExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionChildAccess().getUnaryExpressionParserRuleCall_0()); }
		(ruleUnaryExpression)
		{ after(grammarAccess.getMultiplicativeExpressionChildAccess().getUnaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionChildAccess().getUnaryExpressionChildParserRuleCall_1()); }
		ruleUnaryExpressionChild
		{ after(grammarAccess.getMultiplicativeExpressionChildAccess().getUnaryExpressionChildParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionChildAccess().getMultiplicativeExpressionParserRuleCall_0()); }
		(ruleMultiplicativeExpression)
		{ after(grammarAccess.getAdditiveExpressionChildAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionChildAccess().getMultiplicativeExpressionChildParserRuleCall_1()); }
		ruleMultiplicativeExpressionChild
		{ after(grammarAccess.getAdditiveExpressionChildAccess().getMultiplicativeExpressionChildParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionChildAccess().getAdditiveExpressionParserRuleCall_0()); }
		(ruleAdditiveExpression)
		{ after(grammarAccess.getRelationalExpressionChildAccess().getAdditiveExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionChildAccess().getAdditiveExpressionChildParserRuleCall_1()); }
		ruleAdditiveExpressionChild
		{ after(grammarAccess.getRelationalExpressionChildAccess().getAdditiveExpressionChildParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpressionChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAndExpressionChildAccess().getRelationalExpressionParserRuleCall_0()); }
		(ruleRelationalExpression)
		{ after(grammarAccess.getBooleanAndExpressionChildAccess().getRelationalExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAndExpressionChildAccess().getRelationalExpressionChildParserRuleCall_1()); }
		ruleRelationalExpressionChild
		{ after(grammarAccess.getBooleanAndExpressionChildAccess().getRelationalExpressionChildParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpressionChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOrExpressionChildAccess().getBooleanAndExpressionParserRuleCall_0()); }
		(ruleBooleanAndExpression)
		{ after(grammarAccess.getBooleanOrExpressionChildAccess().getBooleanAndExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOrExpressionChildAccess().getBooleanAndExpressionChildParserRuleCall_1()); }
		ruleBooleanAndExpressionChild
		{ after(grammarAccess.getBooleanOrExpressionChildAccess().getBooleanAndExpressionChildParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getBooleanOrExpressionParserRuleCall_0()); }
		(ruleBooleanOrExpression)
		{ after(grammarAccess.getExpressionAccess().getBooleanOrExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBooleanOrExpressionChildParserRuleCall_1()); }
		ruleBooleanOrExpressionChild
		{ after(grammarAccess.getExpressionAccess().getBooleanOrExpressionChildParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseClause__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseClauseAccess().getPatternCaseClauseParserRuleCall_0()); }
		rulePatternCaseClause
		{ after(grammarAccess.getCaseClauseAccess().getPatternCaseClauseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCaseClauseAccess().getExpressionCaseClauseParserRuleCall_1()); }
		ruleExpressionCaseClause
		{ after(grammarAccess.getCaseClauseAccess().getExpressionCaseClauseParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCaseClauseAccess().getDefaultCaseClauseParserRuleCall_2()); }
		ruleDefaultCaseClause
		{ after(grammarAccess.getCaseClauseAccess().getDefaultCaseClauseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_0()); }
		ruleBlockStatement
		{ after(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_1()); }
		ruleUpdateStatement
		{ after(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_2()); }
		ruleSwitchStatement
		{ after(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteNodeStatementParserRuleCall_3()); }
		ruleDeleteNodeStatement
		{ after(grammarAccess.getStatementAccess().getDeleteNodeStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteLinkStatementParserRuleCall_4()); }
		ruleDeleteLinkStatement
		{ after(grammarAccess.getStatementAccess().getDeleteLinkStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEnforcePatternStatementParserRuleCall_5()); }
		ruleEnforcePatternStatement
		{ after(grammarAccess.getStatementAccess().getEnforcePatternStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForEachStatementParserRuleCall_6()); }
		ruleForEachStatement
		{ after(grammarAccess.getStatementAccess().getForEachStatementParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRuleCallStatementParserRuleCall_7()); }
		ruleRuleCallStatement
		{ after(grammarAccess.getStatementAccess().getRuleCallStatementParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSkipParserRuleCall_8()); }
		ruleSkip
		{ after(grammarAccess.getStatementAccess().getSkipParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFailParserRuleCall_9()); }
		ruleFail
		{ after(grammarAccess.getStatementAccess().getFailParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAssignStatementParserRuleCall_10()); }
		ruleAssignStatement
		{ after(grammarAccess.getStatementAccess().getAssignStatementParserRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getSourceEnumLiteralDeclaration_0()); }
		('source')
		{ after(grammarAccess.getTagAccess().getSourceEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTagAccess().getViewEnumLiteralDeclaration_1()); }
		('view')
		{ after(grammarAccess.getTagAccess().getViewEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopOperatorAccess().getSelectEnumLiteralDeclaration_0()); }
		('select')
		{ after(grammarAccess.getLoopOperatorAccess().getSelectEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoopOperatorAccess().getForAllEnumLiteralDeclaration_1()); }
		('forAll')
		{ after(grammarAccess.getLoopOperatorAccess().getForAllEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLoopOperatorAccess().getExistsEnumLiteralDeclaration_2()); }
		('exists')
		{ after(grammarAccess.getLoopOperatorAccess().getExistsEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionOperatorAccess().getFirstEnumLiteralDeclaration_0()); }
		('first')
		{ after(grammarAccess.getPositionOperatorAccess().getFirstEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPositionOperatorAccess().getLastEnumLiteralDeclaration_1()); }
		('last')
		{ after(grammarAccess.getPositionOperatorAccess().getLastEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPositionOperatorAccess().getAtEnumLiteralDeclaration_2()); }
		('at')
		{ after(grammarAccess.getPositionOperatorAccess().getAtEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyValueAccess().getNullValueEnumLiteralDeclaration_0()); }
		('null')
		{ after(grammarAccess.getEmptyValueAccess().getNullValueEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEmptyValueAccess().getEmptyValueEnumLiteralDeclaration_1()); }
		('undefined')
		{ after(grammarAccess.getEmptyValueAccess().getEmptyValueEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_0()); }
		('not')
		{ after(grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getMinusEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getUnaryOperatorAccess().getMinusEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getMulEnumLiteralDeclaration_0()); }
		('*')
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getMulEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1()); }
		('/')
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAppendEnumLiteralDeclaration_2()); }
		('++')
		{ after(grammarAccess.getAdditiveOperatorAccess().getAppendEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getEqualEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getRelationalOperatorAccess().getEqualEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessEnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getRelationalOperatorAccess().getLessEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
		('<=')
		{ after(grammarAccess.getRelationalOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterEnumLiteralDeclaration_3()); }
		('>')
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterEqualEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterEqualEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionTypeAccess().getMatchEnumLiteralDeclaration_0()); }
		('match')
		{ after(grammarAccess.getActionTypeAccess().getMatchEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getUnmatchsEnumLiteralDeclaration_1()); }
		('unmatchs')
		{ after(grammarAccess.getActionTypeAccess().getUnmatchsEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getUnmatchvEnumLiteralDeclaration_2()); }
		('unmatchv')
		{ after(grammarAccess.getActionTypeAccess().getUnmatchvEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getDefaultEnumLiteralDeclaration_3()); }
		('default')
		{ after(grammarAccess.getActionTypeAccess().getDefaultEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group__0__Impl
	rule__TransformationModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getTransformationModelAction_0()); }
	()
	{ after(grammarAccess.getTransformationModelAccess().getTransformationModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group__1__Impl
	rule__TransformationModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getModuleKeyword_1()); }
	'module'
	{ after(grammarAccess.getTransformationModelAccess().getModuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group__2__Impl
	rule__TransformationModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getNameAssignment_2()); }
	(rule__TransformationModel__NameAssignment_2)
	{ after(grammarAccess.getTransformationModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group__3__Impl
	rule__TransformationModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getGroup_3()); }
	(rule__TransformationModel__Group_3__0)*
	{ after(grammarAccess.getTransformationModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group__4__Impl
	rule__TransformationModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getEntryPointsAssignment_4()); }
	(rule__TransformationModel__EntryPointsAssignment_4)*
	{ after(grammarAccess.getTransformationModelAccess().getEntryPointsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getRulesAssignment_5()); }
	(rule__TransformationModel__RulesAssignment_5)*
	{ after(grammarAccess.getTransformationModelAccess().getRulesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationModel__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group_3__0__Impl
	rule__TransformationModel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getImportKeyword_3_0()); }
	'import'
	{ after(grammarAccess.getTransformationModelAccess().getImportKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationModel__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationModelAccess().getPackagesAssignment_3_1()); }
	(rule__TransformationModel__PackagesAssignment_3_1)
	{ after(grammarAccess.getTransformationModelAccess().getPackagesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryPoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group__0__Impl
	rule__EntryPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getEntryKeyword_0()); }
	'entry'
	{ after(grammarAccess.getEntryPointAccess().getEntryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group__1__Impl
	rule__EntryPoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getRuleAssignment_1()); }
	(rule__EntryPoint__RuleAssignment_1)
	{ after(grammarAccess.getEntryPointAccess().getRuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group__2__Impl
	rule__EntryPoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getEntryPointAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group__3__Impl
	rule__EntryPoint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getParametersAssignment_3()); }
	(rule__EntryPoint__ParametersAssignment_3)
	{ after(grammarAccess.getEntryPointAccess().getParametersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group__4__Impl
	rule__EntryPoint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getGroup_4()); }
	(rule__EntryPoint__Group_4__0)*
	{ after(grammarAccess.getEntryPointAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getEntryPointAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryPoint__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group_4__0__Impl
	rule__EntryPoint__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getEntryPointAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryPoint__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryPointAccess().getParametersAssignment_4_1()); }
	(rule__EntryPoint__ParametersAssignment_4_1)
	{ after(grammarAccess.getEntryPointAccess().getParametersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryData__Group__0__Impl
	rule__EntryData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryDataAccess().getTagAssignment_0()); }
	(rule__EntryData__TagAssignment_0)?
	{ after(grammarAccess.getEntryDataAccess().getTagAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryData__Group__1__Impl
	rule__EntryData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryDataAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getEntryDataAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryData__Group__2__Impl
	rule__EntryData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryDataAccess().getIndexAssignment_2()); }
	(rule__EntryData__IndexAssignment_2)
	{ after(grammarAccess.getEntryDataAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryData__Group__3__Impl
	rule__EntryData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryDataAccess().getFragmentAssignment_3()); }
	(rule__EntryData__FragmentAssignment_3)?
	{ after(grammarAccess.getEntryDataAccess().getFragmentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryData__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryDataAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getEntryDataAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__0__Impl
	rule__ModelRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getModelRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__1__Impl
	rule__ModelRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getNameAssignment_1()); }
	(rule__ModelRule__NameAssignment_1)
	{ after(grammarAccess.getModelRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__2__Impl
	rule__ModelRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getModelRuleAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__3__Impl
	rule__ModelRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getGroup_3()); }
	(rule__ModelRule__Group_3__0)?
	{ after(grammarAccess.getModelRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__4__Impl
	rule__ModelRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getModelRuleAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__5__Impl
	rule__ModelRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getModelRuleAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__6__Impl
	rule__ModelRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getGroup_6()); }
	(rule__ModelRule__Group_6__0)*
	{ after(grammarAccess.getModelRuleAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__7__Impl
	rule__ModelRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getStatementAssignment_7()); }
	(rule__ModelRule__StatementAssignment_7)?
	{ after(grammarAccess.getModelRuleAccess().getStatementAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getModelRuleAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group_3__0__Impl
	rule__ModelRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getParametersAssignment_3_0()); }
	(rule__ModelRule__ParametersAssignment_3_0)
	{ after(grammarAccess.getModelRuleAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getGroup_3_1()); }
	(rule__ModelRule__Group_3_1__0)*
	{ after(grammarAccess.getModelRuleAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRule__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group_3_1__0__Impl
	rule__ModelRule__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getModelRuleAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getParametersAssignment_3_1_1()); }
	(rule__ModelRule__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getModelRuleAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRule__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group_6__0__Impl
	rule__ModelRule__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getVariableDeclarationsAssignment_6_0()); }
	(rule__ModelRule__VariableDeclarationsAssignment_6_0)
	{ after(grammarAccess.getModelRuleAccess().getVariableDeclarationsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRule__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRuleAccess().getSemicolonKeyword_6_1()); }
	';'
	{ after(grammarAccess.getModelRuleAccess().getSemicolonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__0__Impl
	rule__ArithmeticRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getArithmeticRuleAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__1__Impl
	rule__ArithmeticRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getNameAssignment_1()); }
	(rule__ArithmeticRule__NameAssignment_1)
	{ after(grammarAccess.getArithmeticRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__2__Impl
	rule__ArithmeticRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getArithmeticRuleAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__3__Impl
	rule__ArithmeticRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getGroup_3()); }
	(rule__ArithmeticRule__Group_3__0)?
	{ after(grammarAccess.getArithmeticRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__4__Impl
	rule__ArithmeticRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getArithmeticRuleAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__5__Impl
	rule__ArithmeticRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getArithmeticRuleAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__6__Impl
	rule__ArithmeticRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getStatementsAssignment_6()); }
	(rule__ArithmeticRule__StatementsAssignment_6)*
	{ after(grammarAccess.getArithmeticRuleAccess().getStatementsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getArithmeticRuleAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group_3__0__Impl
	rule__ArithmeticRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getParametersAssignment_3_0()); }
	(rule__ArithmeticRule__ParametersAssignment_3_0)
	{ after(grammarAccess.getArithmeticRuleAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getGroup_3_1()); }
	(rule__ArithmeticRule__Group_3_1__0)*
	{ after(grammarAccess.getArithmeticRuleAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticRule__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group_3_1__0__Impl
	rule__ArithmeticRule__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getArithmeticRuleAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticRule__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticRuleAccess().getParametersAssignment_3_1_1()); }
	(rule__ArithmeticRule__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getArithmeticRuleAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTagAssignment_0()); }
	(rule__Parameter__TagAssignment_0)?
	{ after(grammarAccess.getParameterAccess().getTagAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
	(rule__Parameter__TypeAssignment_3)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteVariableDeclaration__Group__0__Impl
	rule__ConcreteVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteVariableDeclarationAccess().getNameAssignment_0()); }
	(rule__ConcreteVariableDeclaration__NameAssignment_0)
	{ after(grammarAccess.getConcreteVariableDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteVariableDeclaration__Group__1__Impl
	rule__ConcreteVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteVariableDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getConcreteVariableDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteVariableDeclarationAccess().getTypeAssignment_2()); }
	(rule__ConcreteVariableDeclaration__TypeAssignment_2)
	{ after(grammarAccess.getConcreteVariableDeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRootAssignment_0()); }
	(rule__Pattern__RootAssignment_0)
	{ after(grammarAccess.getPatternAccess().getRootAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroup_1()); }
	(rule__Pattern__Group_1__0)?
	{ after(grammarAccess.getPatternAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_1__0__Impl
	rule__Pattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getPatternAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_1__1__Impl
	rule__Pattern__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGuardAssignment_1_1()); }
	(rule__Pattern__GuardAssignment_1_1)
	{ after(grammarAccess.getPatternAccess().getGuardAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getPatternAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group__0__Impl
	rule__PatternNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getPatternNodeAction_0()); }
	()
	{ after(grammarAccess.getPatternNodeAccess().getPatternNodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group__1__Impl
	rule__PatternNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getVariableAssignment_1()); }
	(rule__PatternNode__VariableAssignment_1)
	{ after(grammarAccess.getPatternNodeAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getGroup_2()); }
	(rule__PatternNode__Group_2__0)?
	{ after(grammarAccess.getPatternNodeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternNode__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group_2__0__Impl
	rule__PatternNode__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getPatternNodeAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group_2__1__Impl
	rule__PatternNode__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getGroup_2_1()); }
	(rule__PatternNode__Group_2_1__0)?
	{ after(grammarAccess.getPatternNodeAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getRightCurlyBracketKeyword_2_2()); }
	'}'
	{ after(grammarAccess.getPatternNodeAccess().getRightCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternNode__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group_2_1__0__Impl
	rule__PatternNode__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getExpressionsAssignment_2_1_0()); }
	(rule__PatternNode__ExpressionsAssignment_2_1_0)
	{ after(grammarAccess.getPatternNodeAccess().getExpressionsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getGroup_2_1_1()); }
	(rule__PatternNode__Group_2_1_1__0)*
	{ after(grammarAccess.getPatternNodeAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternNode__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group_2_1_1__0__Impl
	rule__PatternNode__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getPatternNodeAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternNode__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternNodeAccess().getExpressionsAssignment_2_1_1_1()); }
	(rule__PatternNode__ExpressionsAssignment_2_1_1_1)
	{ after(grammarAccess.getPatternNodeAccess().getExpressionsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectPatternExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectPatternExpression__Group__0__Impl
	rule__ObjectPatternExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPatternExpressionAccess().getObjectPatternExpressionAction_0()); }
	()
	{ after(grammarAccess.getObjectPatternExpressionAccess().getObjectPatternExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectPatternExpression__Group__1__Impl
	rule__ObjectPatternExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPatternExpressionAccess().getFeatureAssignment_1()); }
	(rule__ObjectPatternExpression__FeatureAssignment_1)
	{ after(grammarAccess.getObjectPatternExpressionAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectPatternExpression__Group__2__Impl
	rule__ObjectPatternExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPatternExpressionAccess().getSelectorAssignment_2()); }
	(rule__ObjectPatternExpression__SelectorAssignment_2)?
	{ after(grammarAccess.getObjectPatternExpressionAccess().getSelectorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectPatternExpression__Group__3__Impl
	rule__ObjectPatternExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPatternExpressionAccess().getPositionAssignment_3()); }
	(rule__ObjectPatternExpression__PositionAssignment_3)?
	{ after(grammarAccess.getObjectPatternExpressionAccess().getPositionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectPatternExpression__Group__4__Impl
	rule__ObjectPatternExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPatternExpressionAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getObjectPatternExpressionAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectPatternExpression__Group__5__Impl
	rule__ObjectPatternExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPatternExpressionAccess().getNullableAssignment_5()); }
	(rule__ObjectPatternExpression__NullableAssignment_5)?
	{ after(grammarAccess.getObjectPatternExpressionAccess().getNullableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectPatternExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectPatternExpressionAccess().getTargetNodeAssignment_6()); }
	(rule__ObjectPatternExpression__TargetNodeAssignment_6)
	{ after(grammarAccess.getObjectPatternExpressionAccess().getTargetNodeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyPatternExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPatternExpression__Group__0__Impl
	rule__PropertyPatternExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPatternExpressionAccess().getPropertyPatternExpressionAction_0()); }
	()
	{ after(grammarAccess.getPropertyPatternExpressionAccess().getPropertyPatternExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPatternExpression__Group__1__Impl
	rule__PropertyPatternExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPatternExpressionAccess().getFeatureAssignment_1()); }
	(rule__PropertyPatternExpression__FeatureAssignment_1)
	{ after(grammarAccess.getPropertyPatternExpressionAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPatternExpression__Group__2__Impl
	rule__PropertyPatternExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPatternExpressionAccess().getSelectorAssignment_2()); }
	(rule__PropertyPatternExpression__SelectorAssignment_2)?
	{ after(grammarAccess.getPropertyPatternExpressionAccess().getSelectorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPatternExpression__Group__3__Impl
	rule__PropertyPatternExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPatternExpressionAccess().getPositionAssignment_3()); }
	(rule__PropertyPatternExpression__PositionAssignment_3)?
	{ after(grammarAccess.getPropertyPatternExpressionAccess().getPositionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPatternExpression__Group__4__Impl
	rule__PropertyPatternExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPatternExpressionAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getPropertyPatternExpressionAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPatternExpression__Group__5__Impl
	rule__PropertyPatternExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPatternExpressionAccess().getNullableAssignment_5()); }
	(rule__PropertyPatternExpression__NullableAssignment_5)?
	{ after(grammarAccess.getPropertyPatternExpressionAccess().getNullableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyPatternExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyPatternExpressionAccess().getTargetExpressionAssignment_6()); }
	(rule__PropertyPatternExpression__TargetExpressionAssignment_6)
	{ after(grammarAccess.getPropertyPatternExpressionAccess().getTargetExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoopPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopPath__Group__0__Impl
	rule__LoopPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopPathAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getLoopPathAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopPath__Group__1__Impl
	rule__LoopPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopPathAccess().getOperatorAssignment_1()); }
	(rule__LoopPath__OperatorAssignment_1)
	{ after(grammarAccess.getLoopPathAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopPath__Group__2__Impl
	rule__LoopPath__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopPathAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLoopPathAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopPath__Group__3__Impl
	rule__LoopPath__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopPathAccess().getVariableAssignment_3()); }
	(rule__LoopPath__VariableAssignment_3)
	{ after(grammarAccess.getLoopPathAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopPath__Group__4__Impl
	rule__LoopPath__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopPathAccess().getVerticalLineKeyword_4()); }
	'|'
	{ after(grammarAccess.getLoopPathAccess().getVerticalLineKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopPath__Group__5__Impl
	rule__LoopPath__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopPathAccess().getBodyAssignment_5()); }
	(rule__LoopPath__BodyAssignment_5)
	{ after(grammarAccess.getLoopPathAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopPath__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopPathAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getLoopPathAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionPath__Group__0__Impl
	rule__PositionPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionPathAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getPositionPathAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionPath__Group__1__Impl
	rule__PositionPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionPathAccess().getTypeAssignment_1()); }
	(rule__PositionPath__TypeAssignment_1)
	{ after(grammarAccess.getPositionPathAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionPath__Group__2__Impl
	rule__PositionPath__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionPathAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getPositionPathAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionPath__Group__3__Impl
	rule__PositionPath__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionPathAccess().getValueAssignment_3()); }
	(rule__PositionPath__ValueAssignment_3)?
	{ after(grammarAccess.getPositionPathAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionPath__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionPathAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPositionPathAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeaturePath__Group__0__Impl
	rule__FeaturePath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturePathAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getFeaturePathAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeaturePath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturePathAccess().getFeatureAssignment_1()); }
	(rule__FeaturePath__FeatureAssignment_1)
	{ after(grammarAccess.getFeaturePathAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group__0__Impl
	rule__OperationPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getOperationPathAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group__1__Impl
	rule__OperationPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getOperationAssignment_1()); }
	(rule__OperationPath__OperationAssignment_1)
	{ after(grammarAccess.getOperationPathAccess().getOperationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group__2__Impl
	rule__OperationPath__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getOperationPathAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group__3__Impl
	rule__OperationPath__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getGroup_3()); }
	(rule__OperationPath__Group_3__0)?
	{ after(grammarAccess.getOperationPathAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOperationPathAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationPath__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group_3__0__Impl
	rule__OperationPath__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getParametersAssignment_3_0()); }
	(rule__OperationPath__ParametersAssignment_3_0)
	{ after(grammarAccess.getOperationPathAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getGroup_3_1()); }
	(rule__OperationPath__Group_3_1__0)*
	{ after(grammarAccess.getOperationPathAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationPath__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group_3_1__0__Impl
	rule__OperationPath__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getOperationPathAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationPath__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationPathAccess().getParametersAssignment_3_1_1()); }
	(rule__OperationPath__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getOperationPathAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteralExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExpression__Group__0__Impl
	rule__EnumLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpressionAccess().getTypeAssignment_0()); }
	(rule__EnumLiteralExpression__TypeAssignment_0)
	{ after(grammarAccess.getEnumLiteralExpressionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExpression__Group__1__Impl
	rule__EnumLiteralExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpressionAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getEnumLiteralExpressionAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpressionAccess().getValueAssignment_2()); }
	(rule__EnumLiteralExpression__ValueAssignment_2)
	{ after(grammarAccess.getEnumLiteralExpressionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0()); }
	(rule__UnaryExpression__OperatorAssignment_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getBodyAssignment_1()); }
	(rule__UnaryExpression__BodyAssignment_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpressionChild__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpressionChild__Group__0__Impl
	rule__UnaryExpressionChild__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionChildAccess().getAtomicExpressionParserRuleCall_0()); }
	ruleAtomicExpression
	{ after(grammarAccess.getUnaryExpressionChildAccess().getAtomicExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpressionChild__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionChildAccess().getGroup_1()); }
	(rule__UnaryExpressionChild__Group_1__0)?
	{ after(grammarAccess.getUnaryExpressionChildAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpressionChild__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpressionChild__Group_1__0__Impl
	rule__UnaryExpressionChild__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionChildAccess().getPathExpressionHostAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionChildAccess().getPathExpressionHostAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpressionChild__Group_1__1__Impl
	rule__UnaryExpressionChild__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionChildAccess().getPathAssignment_1_1()); }
	(rule__UnaryExpressionChild__PathAssignment_1_1)
	{ after(grammarAccess.getUnaryExpressionChildAccess().getPathAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpressionChild__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionChildAccess().getPathAssignment_1_2()); }
	(rule__UnaryExpressionChild__PathAssignment_1_2)*
	{ after(grammarAccess.getUnaryExpressionChildAccess().getPathAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_0__0__Impl
	rule__AtomicExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_0__1__Impl
	rule__AtomicExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getParenExpressionAction_0_1()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getParenExpressionAction_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_0__2__Impl
	rule__AtomicExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getBodyAssignment_0_2()); }
	(rule__AtomicExpression__BodyAssignment_0_2)
	{ after(grammarAccess.getAtomicExpressionAccess().getBodyAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_0()); }
	(rule__MultiplicativeExpression__OperandsAssignment_0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
		(rule__MultiplicativeExpression__Group_1__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
		(rule__MultiplicativeExpression__Group_1__0)*
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__MultiplicativeExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__MultiplicativeExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_0()); }
	(rule__AdditiveExpression__OperandsAssignment_0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
		(rule__AdditiveExpression__Group_1__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
		(rule__AdditiveExpression__Group_1__0)*
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__AdditiveExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__AdditiveExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getLeftAssignment_0()); }
	(rule__RelationalExpression__LeftAssignment_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
	rule__RelationalExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1()); }
	(rule__RelationalExpression__OperatorAssignment_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_2()); }
	(rule__RelationalExpression__RightAssignment_2)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpression__Group__0__Impl
	rule__BooleanAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExpressionAccess().getOperandsAssignment_0()); }
	(rule__BooleanAndExpression__OperandsAssignment_0)
	{ after(grammarAccess.getBooleanAndExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBooleanAndExpressionAccess().getGroup_1()); }
		(rule__BooleanAndExpression__Group_1__0)
		{ after(grammarAccess.getBooleanAndExpressionAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getBooleanAndExpressionAccess().getGroup_1()); }
		(rule__BooleanAndExpression__Group_1__0)*
		{ after(grammarAccess.getBooleanAndExpressionAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpression__Group_1__0__Impl
	rule__BooleanAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExpressionAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getBooleanAndExpressionAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__BooleanAndExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getBooleanAndExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpression__Group__0__Impl
	rule__BooleanOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExpressionAccess().getOperandsAssignment_0()); }
	(rule__BooleanOrExpression__OperandsAssignment_0)
	{ after(grammarAccess.getBooleanOrExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBooleanOrExpressionAccess().getGroup_1()); }
		(rule__BooleanOrExpression__Group_1__0)
		{ after(grammarAccess.getBooleanOrExpressionAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getBooleanOrExpressionAccess().getGroup_1()); }
		(rule__BooleanOrExpression__Group_1__0)*
		{ after(grammarAccess.getBooleanOrExpressionAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpression__Group_1__0__Impl
	rule__BooleanOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExpressionAccess().getOrKeyword_1_0()); }
	'or'
	{ after(grammarAccess.getBooleanOrExpressionAccess().getOrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__BooleanOrExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getBooleanOrExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group__0__Impl
	rule__BlockStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getBlockStatementAction_0()); }
	()
	{ after(grammarAccess.getBlockStatementAccess().getBlockStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group__1__Impl
	rule__BlockStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBlockStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group__2__Impl
	rule__BlockStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getGroup_2()); }
	(rule__BlockStatement__Group_2__0)?
	{ after(grammarAccess.getBlockStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBlockStatementAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group_2__0__Impl
	rule__BlockStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getBodyAssignment_2_0()); }
	(rule__BlockStatement__BodyAssignment_2_0)
	{ after(grammarAccess.getBlockStatementAccess().getBodyAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getGroup_2_1()); }
	(rule__BlockStatement__Group_2_1__0)*
	{ after(grammarAccess.getBlockStatementAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockStatement__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group_2_1__0__Impl
	rule__BlockStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getSemicolonKeyword_2_1_0()); }
	';'
	{ after(grammarAccess.getBlockStatementAccess().getSemicolonKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getBodyAssignment_2_1_1()); }
	(rule__BlockStatement__BodyAssignment_2_1_1)
	{ after(grammarAccess.getBlockStatementAccess().getBodyAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__0__Impl
	rule__UpdateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }
	'update'
	{ after(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__1__Impl
	rule__UpdateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getSourceAssignment_1()); }
	(rule__UpdateStatement__SourceAssignment_1)
	{ after(grammarAccess.getUpdateStatementAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__2__Impl
	rule__UpdateStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getUpdateStatementAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__3__Impl
	rule__UpdateStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getViewAssignment_3()); }
	(rule__UpdateStatement__ViewAssignment_3)
	{ after(grammarAccess.getUpdateStatementAccess().getViewAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__4__Impl
	rule__UpdateStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getByKeyword_4()); }
	'by'
	{ after(grammarAccess.getUpdateStatementAccess().getByKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUpdateStatementAccess().getClausesAssignment_5()); }
		(rule__UpdateStatement__ClausesAssignment_5)
		{ after(grammarAccess.getUpdateStatementAccess().getClausesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getUpdateStatementAccess().getClausesAssignment_5()); }
		(rule__UpdateStatement__ClausesAssignment_5)*
		{ after(grammarAccess.getUpdateStatementAccess().getClausesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateClause__Group__0__Impl
	rule__UpdateClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateClauseAccess().getTypeAssignment_0()); }
	(rule__UpdateClause__TypeAssignment_0)
	{ after(grammarAccess.getUpdateClauseAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateClause__Group__1__Impl
	rule__UpdateClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateClauseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getUpdateClauseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateClauseAccess().getStatementAssignment_2()); }
	(rule__UpdateClause__StatementAssignment_2)
	{ after(grammarAccess.getUpdateClauseAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getRootAssignment_2()); }
	(rule__SwitchStatement__RootAssignment_2)
	{ after(grammarAccess.getSwitchStatementAccess().getRootAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__5__Impl
	rule__SwitchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSwitchStatementAccess().getCasesAssignment_5()); }
		(rule__SwitchStatement__CasesAssignment_5)
		{ after(grammarAccess.getSwitchStatementAccess().getCasesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getSwitchStatementAccess().getCasesAssignment_5()); }
		(rule__SwitchStatement__CasesAssignment_5)*
		{ after(grammarAccess.getSwitchStatementAccess().getCasesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCaseClause__Group__0__Impl
	rule__PatternCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCaseClauseAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getPatternCaseClauseAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCaseClause__Group__1__Impl
	rule__PatternCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCaseClauseAccess().getConditionAssignment_1()); }
	(rule__PatternCaseClause__ConditionAssignment_1)
	{ after(grammarAccess.getPatternCaseClauseAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCaseClause__Group__2__Impl
	rule__PatternCaseClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCaseClauseAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getPatternCaseClauseAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternCaseClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternCaseClauseAccess().getActionAssignment_3()); }
	(rule__PatternCaseClause__ActionAssignment_3)
	{ after(grammarAccess.getPatternCaseClauseAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionCaseClause__Group__0__Impl
	rule__ExpressionCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCaseClauseAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getExpressionCaseClauseAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionCaseClause__Group__1__Impl
	rule__ExpressionCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCaseClauseAccess().getConditionAssignment_1()); }
	(rule__ExpressionCaseClause__ConditionAssignment_1)
	{ after(grammarAccess.getExpressionCaseClauseAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionCaseClause__Group__2__Impl
	rule__ExpressionCaseClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCaseClauseAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getExpressionCaseClauseAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionCaseClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCaseClauseAccess().getActionAssignment_3()); }
	(rule__ExpressionCaseClause__ActionAssignment_3)
	{ after(grammarAccess.getExpressionCaseClauseAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultCaseClause__Group__0__Impl
	rule__DefaultCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultCaseClauseAccess().getOtherwiseKeyword_0()); }
	'otherwise'
	{ after(grammarAccess.getDefaultCaseClauseAccess().getOtherwiseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultCaseClause__Group__1__Impl
	rule__DefaultCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultCaseClauseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getDefaultCaseClauseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultCaseClauseAccess().getActionAssignment_2()); }
	(rule__DefaultCaseClause__ActionAssignment_2)
	{ after(grammarAccess.getDefaultCaseClauseAccess().getActionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteNodeStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteNodeStatement__Group__0__Impl
	rule__DeleteNodeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNodeStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteNodeStatementAccess().getDeleteKeyword_0()); }
	'delete'
	{ after(grammarAccess.getDeleteNodeStatementAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNodeStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteNodeStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNodeStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteNodeStatementAccess().getNodeAssignment_1()); }
	(rule__DeleteNodeStatement__NodeAssignment_1)
	{ after(grammarAccess.getDeleteNodeStatementAccess().getNodeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteLinkStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteLinkStatement__Group__0__Impl
	rule__DeleteLinkStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteLinkStatementAccess().getConcreteDeleteLinkStatementAction_0()); }
	()
	{ after(grammarAccess.getDeleteLinkStatementAccess().getConcreteDeleteLinkStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteLinkStatement__Group__1__Impl
	rule__DeleteLinkStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteLinkStatementAccess().getDeleteKeyword_1()); }
	'delete'
	{ after(grammarAccess.getDeleteLinkStatementAccess().getDeleteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteLinkStatement__Group__2__Impl
	rule__DeleteLinkStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteLinkStatementAccess().getSourceAssignment_2()); }
	(rule__DeleteLinkStatement__SourceAssignment_2)
	{ after(grammarAccess.getDeleteLinkStatementAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteLinkStatement__Group__3__Impl
	rule__DeleteLinkStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteLinkStatementAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getDeleteLinkStatementAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteLinkStatement__Group__4__Impl
	rule__DeleteLinkStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteLinkStatementAccess().getFeatureAssignment_4()); }
	(rule__DeleteLinkStatement__FeatureAssignment_4)
	{ after(grammarAccess.getDeleteLinkStatementAccess().getFeatureAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteLinkStatement__Group__5__Impl
	rule__DeleteLinkStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteLinkStatementAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getDeleteLinkStatementAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteLinkStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteLinkStatementAccess().getTargetAssignment_6()); }
	(rule__DeleteLinkStatement__TargetAssignment_6)
	{ after(grammarAccess.getDeleteLinkStatementAccess().getTargetAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnforcePatternStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnforcePatternStatement__Group__0__Impl
	rule__EnforcePatternStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforcePatternStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnforcePatternStatementAccess().getEnforceKeyword_0()); }
	'enforce'
	{ after(grammarAccess.getEnforcePatternStatementAccess().getEnforceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforcePatternStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnforcePatternStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforcePatternStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnforcePatternStatementAccess().getPatternAssignment_1()); }
	(rule__EnforcePatternStatement__PatternAssignment_1)
	{ after(grammarAccess.getEnforcePatternStatementAccess().getPatternAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__0__Impl
	rule__ForEachStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForEachStatementAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__1__Impl
	rule__ForEachStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getPatternAssignment_1()); }
	(rule__ForEachStatement__PatternAssignment_1)
	{ after(grammarAccess.getForEachStatementAccess().getPatternAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__2__Impl
	rule__ForEachStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getForEachStatementAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getActionAssignment_3()); }
	(rule__ForEachStatement__ActionAssignment_3)
	{ after(grammarAccess.getForEachStatementAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleCallStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group__0__Impl
	rule__RuleCallStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getRuleAssignment_0()); }
	(rule__RuleCallStatement__RuleAssignment_0)
	{ after(grammarAccess.getRuleCallStatementAccess().getRuleAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group__1__Impl
	rule__RuleCallStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRuleCallStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group__2__Impl
	rule__RuleCallStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getGroup_2()); }
	(rule__RuleCallStatement__Group_2__0)?
	{ after(grammarAccess.getRuleCallStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRuleCallStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleCallStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group_2__0__Impl
	rule__RuleCallStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getParametersAssignment_2_0()); }
	(rule__RuleCallStatement__ParametersAssignment_2_0)
	{ after(grammarAccess.getRuleCallStatementAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getGroup_2_1()); }
	(rule__RuleCallStatement__Group_2_1__0)*
	{ after(grammarAccess.getRuleCallStatementAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleCallStatement__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group_2_1__0__Impl
	rule__RuleCallStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getRuleCallStatementAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleCallStatement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleCallStatementAccess().getParametersAssignment_2_1_1()); }
	(rule__RuleCallStatement__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getRuleCallStatementAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Skip__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Skip__Group__0__Impl
	rule__Skip__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipAccess().getSkipAction_0()); }
	()
	{ after(grammarAccess.getSkipAccess().getSkipAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Skip__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipAccess().getSkipKeyword_1()); }
	'skip'
	{ after(grammarAccess.getSkipAccess().getSkipKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fail__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fail__Group__0__Impl
	rule__Fail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailAccess().getFailAction_0()); }
	()
	{ after(grammarAccess.getFailAccess().getFailAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fail__Group__1__Impl
	rule__Fail__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailAccess().getFailKeyword_1()); }
	'fail'
	{ after(grammarAccess.getFailAccess().getFailKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fail__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailAccess().getExpressionAssignment_2()); }
	(rule__Fail__ExpressionAssignment_2)?
	{ after(grammarAccess.getFailAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__0__Impl
	rule__AssignStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getUpdatedVariableAssignment_0()); }
	(rule__AssignStatement__UpdatedVariableAssignment_0)
	{ after(grammarAccess.getAssignStatementAccess().getUpdatedVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__1__Impl
	rule__AssignStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getColonColonEqualsSignKeyword_1()); }
	'::='
	{ after(grammarAccess.getAssignStatementAccess().getColonColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignStatementAccess().getValueAssignment_2()); }
	(rule__AssignStatement__ValueAssignment_2)
	{ after(grammarAccess.getAssignStatementAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationModel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationModelAccess().getNameNAMETerminalRuleCall_2_0()); }
		RULE_NAME
		{ after(grammarAccess.getTransformationModelAccess().getNameNAMETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__PackagesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationModelAccess().getPackagesEPackageCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getTransformationModelAccess().getPackagesEPackageMODEL_URITerminalRuleCall_3_1_0_1()); }
			RULE_MODEL_URI
			{ after(grammarAccess.getTransformationModelAccess().getPackagesEPackageMODEL_URITerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getTransformationModelAccess().getPackagesEPackageCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__EntryPointsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationModelAccess().getEntryPointsEntryPointParserRuleCall_4_0()); }
		ruleEntryPoint
		{ after(grammarAccess.getTransformationModelAccess().getEntryPointsEntryPointParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationModel__RulesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationModelAccess().getRulesAbstractRuleParserRuleCall_5_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getTransformationModelAccess().getRulesAbstractRuleParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__RuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryPointAccess().getRuleModelRuleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEntryPointAccess().getRuleModelRuleNAMETerminalRuleCall_1_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getEntryPointAccess().getRuleModelRuleNAMETerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEntryPointAccess().getRuleModelRuleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__ParametersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryPointAccess().getParametersEntryDataParserRuleCall_3_0()); }
		ruleEntryData
		{ after(grammarAccess.getEntryPointAccess().getParametersEntryDataParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryPoint__ParametersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryPointAccess().getParametersEntryDataParserRuleCall_4_1_0()); }
		ruleEntryData
		{ after(grammarAccess.getEntryPointAccess().getParametersEntryDataParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__TagAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryDataAccess().getTagTagEnumRuleCall_0_0()); }
		ruleTag
		{ after(grammarAccess.getEntryDataAccess().getTagTagEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryDataAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getEntryDataAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryData__FragmentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryDataAccess().getFragmentOBJ_URITerminalRuleCall_3_0()); }
		RULE_OBJ_URI
		{ after(grammarAccess.getEntryDataAccess().getFragmentOBJ_URITerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRuleAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getModelRuleAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRuleAccess().getParametersParameterParserRuleCall_3_0_0()); }
		ruleParameter
		{ after(grammarAccess.getModelRuleAccess().getParametersParameterParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRuleAccess().getParametersParameterParserRuleCall_3_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getModelRuleAccess().getParametersParameterParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__VariableDeclarationsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRuleAccess().getVariableDeclarationsConcreteVariableDeclarationParserRuleCall_6_0_0()); }
		ruleConcreteVariableDeclaration
		{ after(grammarAccess.getModelRuleAccess().getVariableDeclarationsConcreteVariableDeclarationParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRule__StatementAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRuleAccess().getStatementStatementParserRuleCall_7_0()); }
		ruleStatement
		{ after(grammarAccess.getModelRuleAccess().getStatementStatementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticRuleAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getArithmeticRuleAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticRuleAccess().getParametersParameterParserRuleCall_3_0_0()); }
		ruleParameter
		{ after(grammarAccess.getArithmeticRuleAccess().getParametersParameterParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticRuleAccess().getParametersParameterParserRuleCall_3_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getArithmeticRuleAccess().getParametersParameterParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticRule__StatementsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticRuleAccess().getStatementsStatementParserRuleCall_6_0()); }
		ruleStatement
		{ after(grammarAccess.getArithmeticRuleAccess().getStatementsStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TagAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTagTagEnumRuleCall_0_0()); }
		ruleTag
		{ after(grammarAccess.getParameterAccess().getTagTagEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getParameterAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeEClassifierCrossReference_3_0()); }
		(
			{ before(grammarAccess.getParameterAccess().getTypeEClassifierTypeParserRuleCall_3_0_1()); }
			ruleType
			{ after(grammarAccess.getParameterAccess().getTypeEClassifierTypeParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getParameterAccess().getTypeEClassifierCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteVariableDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteVariableDeclarationAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getConcreteVariableDeclarationAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteVariableDeclaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteVariableDeclarationAccess().getTypeEClassifierCrossReference_2_0()); }
		(
			{ before(grammarAccess.getConcreteVariableDeclarationAccess().getTypeEClassifierTypeParserRuleCall_2_0_1()); }
			ruleType
			{ after(grammarAccess.getConcreteVariableDeclarationAccess().getTypeEClassifierTypeParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getConcreteVariableDeclarationAccess().getTypeEClassifierCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__RootAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getRootPatternNodeParserRuleCall_0_0()); }
		rulePatternNode
		{ after(grammarAccess.getPatternAccess().getRootPatternNodeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__GuardAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getGuardExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPatternAccess().getGuardExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternNodeAccess().getVariableConcreteVariableDeclarationParserRuleCall_1_0()); }
		ruleConcreteVariableDeclaration
		{ after(grammarAccess.getPatternNodeAccess().getVariableConcreteVariableDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__ExpressionsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternNodeAccess().getExpressionsPatternExpressionParserRuleCall_2_1_0_0()); }
		rulePatternExpression
		{ after(grammarAccess.getPatternNodeAccess().getExpressionsPatternExpressionParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternNode__ExpressionsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternNodeAccess().getExpressionsPatternExpressionParserRuleCall_2_1_1_1_0()); }
		rulePatternExpression
		{ after(grammarAccess.getPatternNodeAccess().getExpressionsPatternExpressionParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPatternExpressionAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getObjectPatternExpressionAccess().getFeatureEStructuralFeatureNAMETerminalRuleCall_1_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getObjectPatternExpressionAccess().getFeatureEStructuralFeatureNAMETerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getObjectPatternExpressionAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__SelectorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPatternExpressionAccess().getSelectorLoopPathParserRuleCall_2_0()); }
		ruleLoopPath
		{ after(grammarAccess.getObjectPatternExpressionAccess().getSelectorLoopPathParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__PositionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPatternExpressionAccess().getPositionPositionPathParserRuleCall_3_0()); }
		rulePositionPath
		{ after(grammarAccess.getObjectPatternExpressionAccess().getPositionPositionPathParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__NullableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
		(
			{ before(grammarAccess.getObjectPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
			'?'
			{ after(grammarAccess.getObjectPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
		)
		{ after(grammarAccess.getObjectPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectPatternExpression__TargetNodeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPatternExpressionAccess().getTargetNodePatternNodeParserRuleCall_6_0()); }
		rulePatternNode
		{ after(grammarAccess.getObjectPatternExpressionAccess().getTargetNodePatternNodeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyPatternExpressionAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPropertyPatternExpressionAccess().getFeatureEStructuralFeatureNAMETerminalRuleCall_1_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getPropertyPatternExpressionAccess().getFeatureEStructuralFeatureNAMETerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPropertyPatternExpressionAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__SelectorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyPatternExpressionAccess().getSelectorLoopPathParserRuleCall_2_0()); }
		ruleLoopPath
		{ after(grammarAccess.getPropertyPatternExpressionAccess().getSelectorLoopPathParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__PositionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyPatternExpressionAccess().getPositionPositionPathParserRuleCall_3_0()); }
		rulePositionPath
		{ after(grammarAccess.getPropertyPatternExpressionAccess().getPositionPositionPathParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__NullableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
		(
			{ before(grammarAccess.getPropertyPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
			'?'
			{ after(grammarAccess.getPropertyPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
		)
		{ after(grammarAccess.getPropertyPatternExpressionAccess().getNullableQuestionMarkKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyPatternExpression__TargetExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyPatternExpressionAccess().getTargetExpressionExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getPropertyPatternExpressionAccess().getTargetExpressionExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopPathAccess().getOperatorLoopOperatorEnumRuleCall_1_0()); }
		ruleLoopOperator
		{ after(grammarAccess.getLoopPathAccess().getOperatorLoopOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopPathAccess().getVariableConcreteVariableDeclarationParserRuleCall_3_0()); }
		ruleConcreteVariableDeclaration
		{ after(grammarAccess.getLoopPathAccess().getVariableConcreteVariableDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopPath__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopPathAccess().getBodyExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getLoopPathAccess().getBodyExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionPathAccess().getTypePositionOperatorEnumRuleCall_1_0()); }
		rulePositionOperator
		{ after(grammarAccess.getPositionPathAccess().getTypePositionOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionPath__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionPathAccess().getValueExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getPositionPathAccess().getValueExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeaturePathAccess().getFeatureNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getFeaturePathAccess().getFeatureNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__OperationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationPathAccess().getOperationNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getOperationPathAccess().getOperationNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationPathAccess().getParametersExpressionParserRuleCall_3_0_0()); }
		ruleExpression
		{ after(grammarAccess.getOperationPathAccess().getParametersExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationPath__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationPathAccess().getParametersExpressionParserRuleCall_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOperationPathAccess().getParametersExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getVariableNAMETerminalRuleCall_0()); }
		RULE_NAME
		{ after(grammarAccess.getVariableExpressionAccess().getVariableNAMETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyExpressionAccess().getTypeEmptyValueEnumRuleCall_0()); }
		ruleEmptyValue
		{ after(grammarAccess.getEmptyExpressionAccess().getTypeEmptyValueEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteralExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralExpressionAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerLiteralExpressionAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBooleanLiteralExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExpression__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralExpressionAccess().getTypeEEnumCrossReference_0_0()); }
		(
			{ before(grammarAccess.getEnumLiteralExpressionAccess().getTypeEEnumTypeParserRuleCall_0_0_1()); }
			ruleType
			{ after(grammarAccess.getEnumLiteralExpressionAccess().getTypeEEnumTypeParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getEnumLiteralExpressionAccess().getTypeEEnumCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExpression__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralExpressionAccess().getValueEEnumLiteralCrossReference_2_0()); }
		(
			{ before(grammarAccess.getEnumLiteralExpressionAccess().getValueEEnumLiteralNAMETerminalRuleCall_2_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getEnumLiteralExpressionAccess().getValueEEnumLiteralNAMETerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getEnumLiteralExpressionAccess().getValueEEnumLiteralCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectURIExpression__ObjectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectURIExpressionAccess().getObjectEObjectCrossReference_0()); }
		(
			{ before(grammarAccess.getObjectURIExpressionAccess().getObjectEObjectOBJ_URITerminalRuleCall_0_1()); }
			RULE_OBJ_URI
			{ after(grammarAccess.getObjectURIExpressionAccess().getObjectEObjectOBJ_URITerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getObjectURIExpressionAccess().getObjectEObjectCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getBodyUnaryExpressionChildParserRuleCall_1_0()); }
		ruleUnaryExpressionChild
		{ after(grammarAccess.getUnaryExpressionAccess().getBodyUnaryExpressionChildParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__PathAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionChildAccess().getPathPathParserRuleCall_1_1_0()); }
		rulePath
		{ after(grammarAccess.getUnaryExpressionChildAccess().getPathPathParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionChild__PathAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionChildAccess().getPathPathParserRuleCall_1_2_0()); }
		rulePath
		{ after(grammarAccess.getUnaryExpressionChildAccess().getPathPathParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__BodyAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getBodyExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicExpressionAccess().getBodyExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsMultiplicativeExpressionChildParserRuleCall_0_0()); }
		ruleMultiplicativeExpressionChild
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsMultiplicativeExpressionChildParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsMultiplicativeOperatorEnumRuleCall_1_0_0()); }
		ruleMultiplicativeOperator
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsMultiplicativeOperatorEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsMultiplicativeExpressionChildParserRuleCall_1_1_0()); }
		ruleMultiplicativeExpressionChild
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsMultiplicativeExpressionChildParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsAdditiveExpressionChildParserRuleCall_0_0()); }
		ruleAdditiveExpressionChild
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsAdditiveExpressionChildParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorsAdditiveOperatorEnumRuleCall_1_0_0()); }
		ruleAdditiveOperator
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorsAdditiveOperatorEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsAdditiveExpressionChildParserRuleCall_1_1_0()); }
		ruleAdditiveExpressionChild
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsAdditiveExpressionChildParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getLeftRelationalExpressionChildParserRuleCall_0_0()); }
		ruleRelationalExpressionChild
		{ after(grammarAccess.getRelationalExpressionAccess().getLeftRelationalExpressionChildParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorEnumRuleCall_1_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightRelationalExpressionChildParserRuleCall_2_0()); }
		ruleRelationalExpressionChild
		{ after(grammarAccess.getRelationalExpressionAccess().getRightRelationalExpressionChildParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAndExpressionAccess().getOperandsBooleanAndExpressionChildParserRuleCall_0_0()); }
		ruleBooleanAndExpressionChild
		{ after(grammarAccess.getBooleanAndExpressionAccess().getOperandsBooleanAndExpressionChildParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAndExpressionAccess().getOperandsBooleanAndExpressionChildParserRuleCall_1_1_0()); }
		ruleBooleanAndExpressionChild
		{ after(grammarAccess.getBooleanAndExpressionAccess().getOperandsBooleanAndExpressionChildParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOrExpressionAccess().getOperandsBooleanOrExpressionChildParserRuleCall_0_0()); }
		ruleBooleanOrExpressionChild
		{ after(grammarAccess.getBooleanOrExpressionAccess().getOperandsBooleanOrExpressionChildParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOrExpressionAccess().getOperandsBooleanOrExpressionChildParserRuleCall_1_1_0()); }
		ruleBooleanOrExpressionChild
		{ after(grammarAccess.getBooleanOrExpressionAccess().getOperandsBooleanOrExpressionChildParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__BodyAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockStatementAccess().getBodyStatementParserRuleCall_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getBlockStatementAccess().getBodyStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__BodyAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockStatementAccess().getBodyStatementParserRuleCall_2_1_1_0()); }
		ruleStatement
		{ after(grammarAccess.getBlockStatementAccess().getBodyStatementParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getSourcePatternParserRuleCall_1_0()); }
		rulePattern
		{ after(grammarAccess.getUpdateStatementAccess().getSourcePatternParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__ViewAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getViewPatternParserRuleCall_3_0()); }
		rulePattern
		{ after(grammarAccess.getUpdateStatementAccess().getViewPatternParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__ClausesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getClausesUpdateClauseParserRuleCall_5_0()); }
		ruleUpdateClause
		{ after(grammarAccess.getUpdateStatementAccess().getClausesUpdateClauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateClause__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateClauseAccess().getTypeActionTypeEnumRuleCall_0_0()); }
		ruleActionType
		{ after(grammarAccess.getUpdateClauseAccess().getTypeActionTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateClause__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateClauseAccess().getStatementStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getUpdateClauseAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__RootAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getRootVariableExpressionParserRuleCall_2_0()); }
		ruleVariableExpression
		{ after(grammarAccess.getSwitchStatementAccess().getRootVariableExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__CasesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); }
		ruleCaseClause
		{ after(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternCaseClauseAccess().getConditionPatternParserRuleCall_1_0()); }
		rulePattern
		{ after(grammarAccess.getPatternCaseClauseAccess().getConditionPatternParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternCaseClause__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternCaseClauseAccess().getActionStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getPatternCaseClauseAccess().getActionStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionCaseClauseAccess().getConditionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionCaseClauseAccess().getConditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCaseClause__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionCaseClauseAccess().getActionStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getExpressionCaseClauseAccess().getActionStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultCaseClause__ActionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultCaseClauseAccess().getActionStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getDefaultCaseClauseAccess().getActionStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteNodeStatement__NodeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteNodeStatementAccess().getNodeVariableExpressionParserRuleCall_1_0()); }
		ruleVariableExpression
		{ after(grammarAccess.getDeleteNodeStatementAccess().getNodeVariableExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteLinkStatementAccess().getSourceVariableExpressionParserRuleCall_2_0()); }
		ruleVariableExpression
		{ after(grammarAccess.getDeleteLinkStatementAccess().getSourceVariableExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__FeatureAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteLinkStatementAccess().getFeatureNAMETerminalRuleCall_4_0()); }
		RULE_NAME
		{ after(grammarAccess.getDeleteLinkStatementAccess().getFeatureNAMETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteLinkStatement__TargetAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteLinkStatementAccess().getTargetExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getDeleteLinkStatementAccess().getTargetExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforcePatternStatement__PatternAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnforcePatternStatementAccess().getPatternPatternParserRuleCall_1_0()); }
		rulePattern
		{ after(grammarAccess.getEnforcePatternStatementAccess().getPatternPatternParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__PatternAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachStatementAccess().getPatternPatternParserRuleCall_1_0()); }
		rulePattern
		{ after(grammarAccess.getForEachStatementAccess().getPatternPatternParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachStatementAccess().getActionStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getForEachStatementAccess().getActionStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__RuleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleCallStatementAccess().getRuleAbstractRuleCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRuleCallStatementAccess().getRuleAbstractRuleNAMETerminalRuleCall_0_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getRuleCallStatementAccess().getRuleAbstractRuleNAMETerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRuleCallStatementAccess().getRuleAbstractRuleCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleCallStatementAccess().getParametersExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getRuleCallStatementAccess().getParametersExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleCallStatement__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleCallStatementAccess().getParametersExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getRuleCallStatementAccess().getParametersExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFailAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__UpdatedVariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignStatementAccess().getUpdatedVariableVariableExpressionParserRuleCall_0_0()); }
		ruleVariableExpression
		{ after(grammarAccess.getAssignStatementAccess().getUpdatedVariableVariableExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignStatementAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignStatementAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOLEAN : ('true'|'false');

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_PRIMITIVE_TYPE : ('String'|'Boolean'|'Integer'|'OclAny'|'Resource'|'OclObject');

RULE_PATH_NAME : RULE_ID '!' RULE_ID;

RULE_NAME : RULE_ID '@post'?;

RULE_MODEL_URI : '<' ( options {greedy=false;} : . )*'>';

RULE_OBJ_URI : '@' ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'/'|'\\'|'.'|':'|'#')*;

fragment RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
